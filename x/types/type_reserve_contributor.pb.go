// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/type_reserve_contributor.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_mapprotocol_compass_v3_common "github.com/mapprotocol/compass-tss/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ReserveContributor struct {
	Address github_com_mapprotocol_compass_v3_common.Address `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/mapprotocol/compass-tss/common.Address" json:"address,omitempty"`
	Amount  cosmossdk_io_math.Uint                           `protobuf:"bytes,2,opt,name=amount,proto3,customtype=cosmossdk.io/math.Uint" json:"amount"`
}

func (m *ReserveContributor) Reset()         { *m = ReserveContributor{} }
func (m *ReserveContributor) String() string { return proto.CompactTextString(m) }
func (*ReserveContributor) ProtoMessage()    {}
func (*ReserveContributor) Descriptor() ([]byte, []int) {
	return fileDescriptor_88188b5336421320, []int{0}
}
func (m *ReserveContributor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveContributor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveContributor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveContributor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveContributor.Merge(m, src)
}
func (m *ReserveContributor) XXX_Size() int {
	return m.Size()
}
func (m *ReserveContributor) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveContributor.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveContributor proto.InternalMessageInfo

func (m *ReserveContributor) GetAddress() github_com_mapprotocol_compass_v3_common.Address {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*ReserveContributor)(nil), "types.ReserveContributor")
}

func init() {
	proto.RegisterFile("types/type_reserve_contributor.proto", fileDescriptor_88188b5336421320)
}

var fileDescriptor_88188b5336421320 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x29, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x07, 0x91, 0xf1, 0x45, 0xa9, 0xc5, 0xa9, 0x45, 0x65, 0xa9, 0xf1, 0xc9, 0xf9, 0x79,
	0x25, 0x45, 0x99, 0x49, 0xa5, 0x25, 0xf9, 0x45, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac,
	0x60, 0x55, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0x11, 0x7d, 0x10, 0x0b, 0x22, 0xa9, 0x34,
	0x9b, 0x91, 0x4b, 0x28, 0x08, 0xa2, 0xd5, 0x19, 0xa1, 0x53, 0xc8, 0x97, 0x8b, 0x3d, 0x31, 0x25,
	0xa5, 0x28, 0xb5, 0xb8, 0x58, 0x82, 0x51, 0x81, 0x51, 0x83, 0xd3, 0xc9, 0xf8, 0xd7, 0x3d, 0x79,
	0xfd, 0xf4, 0xcc, 0x92, 0x9c, 0xc4, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0x92, 0x8c, 0xfc, 0xa2,
	0xe4, 0x8c, 0xc4, 0xcc, 0x3c, 0x30, 0x2b, 0x2f, 0x3f, 0x25, 0x55, 0xbf, 0xcc, 0x58, 0x3f, 0x39,
	0x3f, 0x37, 0x37, 0x3f, 0x4f, 0xcf, 0x11, 0xa2, 0x35, 0x08, 0x66, 0x86, 0x90, 0x19, 0x17, 0x5b,
	0x62, 0x6e, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0x13, 0xd8, 0x34, 0xb9, 0x13, 0xf7, 0xe4, 0x19, 0x6e,
	0xdd, 0x93, 0x17, 0x4b, 0xce, 0x2f, 0xce, 0xcd, 0x2f, 0x2e, 0x4e, 0xc9, 0xd6, 0xcb, 0xcc, 0xd7,
	0xcf, 0x4d, 0x2c, 0xc9, 0xd0, 0x0b, 0xcd, 0xcc, 0x2b, 0x09, 0x82, 0xaa, 0x76, 0xf2, 0x39, 0xf1,
	0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8,
	0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0x23, 0x82, 0x6e, 0xa9, 0x40, 0x16, 0x07,
	0x85, 0x40, 0x12, 0x1b, 0xd8, 0xcb, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x51, 0x6d,
	0x00, 0x37, 0x01, 0x00, 0x00,
}

func (m *ReserveContributor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveContributor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveContributor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeReserveContributor(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTypeReserveContributor(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypeReserveContributor(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypeReserveContributor(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ReserveContributor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTypeReserveContributor(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTypeReserveContributor(uint64(l))
	return n
}

func sovTypeReserveContributor(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypeReserveContributor(x uint64) (n int) {
	return sovTypeReserveContributor(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ReserveContributor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypeReserveContributor
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveContributor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveContributor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeReserveContributor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeReserveContributor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeReserveContributor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = github_com_mapprotocol_compass_v3_common.Address(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeReserveContributor
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeReserveContributor
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeReserveContributor
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypeReserveContributor(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypeReserveContributor
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypeReserveContributor(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypeReserveContributor
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeReserveContributor
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeReserveContributor
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypeReserveContributor
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypeReserveContributor
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypeReserveContributor
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypeReserveContributor        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypeReserveContributor          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypeReserveContributor = fmt.Errorf("proto: unexpected end of group")
)
