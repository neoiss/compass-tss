// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/msg_consolidate.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	common "github.com/mapprotocol/compass-tss/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgConsolidate struct {
	ObservedTx common.ObservedTx                             `protobuf:"bytes,1,opt,name=observed_tx,json=observedTx,proto3" json:"observed_tx"`
	Signer     github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=signer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"signer,omitempty"`
}

func (m *MsgConsolidate) Reset()         { *m = MsgConsolidate{} }
func (m *MsgConsolidate) String() string { return proto.CompactTextString(m) }
func (*MsgConsolidate) ProtoMessage()    {}
func (*MsgConsolidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ae9c1391f00cd47, []int{0}
}
func (m *MsgConsolidate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConsolidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConsolidate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConsolidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConsolidate.Merge(m, src)
}
func (m *MsgConsolidate) XXX_Size() int {
	return m.Size()
}
func (m *MsgConsolidate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConsolidate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConsolidate proto.InternalMessageInfo

func (m *MsgConsolidate) GetObservedTx() common.ObservedTx {
	if m != nil {
		return m.ObservedTx
	}
	return common.ObservedTx{}
}

func (m *MsgConsolidate) GetSigner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Signer
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgConsolidate)(nil), "types.MsgConsolidate")
}

func init() { proto.RegisterFile("types/msg_consolidate.proto", fileDescriptor_0ae9c1391f00cd47) }

var fileDescriptor_0ae9c1391f00cd47 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0xcf, 0x2d, 0x4e, 0x8f, 0x4f, 0xce, 0xcf, 0x2b, 0xce, 0xcf, 0xc9, 0x4c, 0x49, 0x2c,
	0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x4b, 0x4a, 0xc9, 0x40, 0xd4, 0x80,
	0xc8, 0xf8, 0xfc, 0xa4, 0xe2, 0xd4, 0xa2, 0xb2, 0xd4, 0x94, 0xf8, 0x92, 0x0a, 0x88, 0x22, 0x29,
	0x91, 0xf4, 0xfc, 0xf4, 0x7c, 0x30, 0x53, 0x1f, 0xc4, 0x82, 0x8a, 0x0a, 0x27, 0xe7, 0xe7, 0xe6,
	0xe6, 0xe7, 0xe9, 0x43, 0x28, 0x88, 0xa0, 0xd2, 0x34, 0x46, 0x2e, 0x3e, 0xdf, 0xe2, 0x74, 0x67,
	0x84, 0x45, 0x42, 0x96, 0x5c, 0xdc, 0x48, 0x46, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09,
	0xe9, 0x41, 0xb5, 0xf9, 0x43, 0xa5, 0x42, 0x2a, 0x9c, 0x58, 0x4e, 0xdc, 0x93, 0x67, 0x08, 0xe2,
	0xca, 0x87, 0x8b, 0x08, 0x79, 0x72, 0xb1, 0x15, 0x67, 0xa6, 0xe7, 0xa5, 0x16, 0x49, 0x30, 0x29,
	0x30, 0x6a, 0xf0, 0x38, 0x19, 0xfe, 0xba, 0x27, 0xaf, 0x9b, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0x04,
	0xd2, 0xaf, 0x9f, 0x9c, 0x5f, 0x9c, 0x9b, 0x5f, 0x0c, 0xa5, 0x74, 0x8b, 0x53, 0xb2, 0xc1, 0x3e,
	0x28, 0xd6, 0x73, 0x4c, 0x4e, 0x76, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x0e, 0x82, 0x1a, 0xe0,
	0xe4, 0x73, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78,
	0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x46, 0xe9, 0x99, 0x25,
	0x39, 0x89, 0x10, 0x03, 0x4b, 0x32, 0xf2, 0x8b, 0x92, 0x33, 0x12, 0x33, 0xf3, 0xc0, 0xac, 0xbc,
	0xfc, 0x94, 0x54, 0xfd, 0x32, 0x63, 0xfd, 0x0a, 0x64, 0x71, 0x90, 0x05, 0x49, 0x6c, 0x60, 0xdf,
	0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x60, 0x65, 0xef, 0x5c, 0x01, 0x00, 0x00,
}

func (m *MsgConsolidate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConsolidate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConsolidate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgConsolidate(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.ObservedTx.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgConsolidate(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMsgConsolidate(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgConsolidate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgConsolidate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObservedTx.Size()
	n += 1 + l + sovMsgConsolidate(uint64(l))
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgConsolidate(uint64(l))
	}
	return n
}

func sovMsgConsolidate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgConsolidate(x uint64) (n int) {
	return sovMsgConsolidate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgConsolidate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgConsolidate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConsolidate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConsolidate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservedTx", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgConsolidate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgConsolidate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgConsolidate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObservedTx.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgConsolidate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgConsolidate
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgConsolidate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = append(m.Signer[:0], dAtA[iNdEx:postIndex]...)
			if m.Signer == nil {
				m.Signer = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgConsolidate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgConsolidate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgConsolidate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgConsolidate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgConsolidate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgConsolidate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgConsolidate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgConsolidate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgConsolidate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgConsolidate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgConsolidate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgConsolidate = fmt.Errorf("proto: unexpected end of group")
)
