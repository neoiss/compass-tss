// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_secured_asset.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QuerySecuredAssetRequest struct {
	Asset  string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QuerySecuredAssetRequest) Reset()         { *m = QuerySecuredAssetRequest{} }
func (m *QuerySecuredAssetRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySecuredAssetRequest) ProtoMessage()    {}
func (*QuerySecuredAssetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4d07323f3a1b65, []int{0}
}
func (m *QuerySecuredAssetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySecuredAssetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySecuredAssetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySecuredAssetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySecuredAssetRequest.Merge(m, src)
}
func (m *QuerySecuredAssetRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySecuredAssetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySecuredAssetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySecuredAssetRequest proto.InternalMessageInfo

func (m *QuerySecuredAssetRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QuerySecuredAssetRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QuerySecuredAssetResponse struct {
	// bridge account asset with \"-\" separator
	Asset string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset"`
	// total share tokens issued for the pool
	Supply string `protobuf:"bytes,2,opt,name=supply,proto3" json:"supply"`
	// total depth of bridge asset
	Depth string `protobuf:"bytes,3,opt,name=depth,proto3" json:"depth"`
}

func (m *QuerySecuredAssetResponse) Reset()         { *m = QuerySecuredAssetResponse{} }
func (m *QuerySecuredAssetResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySecuredAssetResponse) ProtoMessage()    {}
func (*QuerySecuredAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4d07323f3a1b65, []int{1}
}
func (m *QuerySecuredAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySecuredAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySecuredAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySecuredAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySecuredAssetResponse.Merge(m, src)
}
func (m *QuerySecuredAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySecuredAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySecuredAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySecuredAssetResponse proto.InternalMessageInfo

func (m *QuerySecuredAssetResponse) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QuerySecuredAssetResponse) GetSupply() string {
	if m != nil {
		return m.Supply
	}
	return ""
}

func (m *QuerySecuredAssetResponse) GetDepth() string {
	if m != nil {
		return m.Depth
	}
	return ""
}

type QuerySecuredAssetsRequest struct {
	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QuerySecuredAssetsRequest) Reset()         { *m = QuerySecuredAssetsRequest{} }
func (m *QuerySecuredAssetsRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySecuredAssetsRequest) ProtoMessage()    {}
func (*QuerySecuredAssetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4d07323f3a1b65, []int{2}
}
func (m *QuerySecuredAssetsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySecuredAssetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySecuredAssetsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySecuredAssetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySecuredAssetsRequest.Merge(m, src)
}
func (m *QuerySecuredAssetsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySecuredAssetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySecuredAssetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySecuredAssetsRequest proto.InternalMessageInfo

func (m *QuerySecuredAssetsRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QuerySecuredAssetsResponse struct {
	Assets []*QuerySecuredAssetResponse `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (m *QuerySecuredAssetsResponse) Reset()         { *m = QuerySecuredAssetsResponse{} }
func (m *QuerySecuredAssetsResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySecuredAssetsResponse) ProtoMessage()    {}
func (*QuerySecuredAssetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4d07323f3a1b65, []int{3}
}
func (m *QuerySecuredAssetsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySecuredAssetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySecuredAssetsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySecuredAssetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySecuredAssetsResponse.Merge(m, src)
}
func (m *QuerySecuredAssetsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySecuredAssetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySecuredAssetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySecuredAssetsResponse proto.InternalMessageInfo

func (m *QuerySecuredAssetsResponse) GetAssets() []*QuerySecuredAssetResponse {
	if m != nil {
		return m.Assets
	}
	return nil
}

func init() {
	proto.RegisterType((*QuerySecuredAssetRequest)(nil), "types.QuerySecuredAssetRequest")
	proto.RegisterType((*QuerySecuredAssetResponse)(nil), "types.QuerySecuredAssetResponse")
	proto.RegisterType((*QuerySecuredAssetsRequest)(nil), "types.QuerySecuredAssetsRequest")
	proto.RegisterType((*QuerySecuredAssetsResponse)(nil), "types.QuerySecuredAssetsResponse")
}

func init() { proto.RegisterFile("types/query_secured_asset.proto", fileDescriptor_4e4d07323f3a1b65) }

var fileDescriptor_4e4d07323f3a1b65 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2f, 0x2c, 0x4d, 0x2d, 0xaa, 0x8c, 0x2f, 0x4e, 0x4d, 0x2e, 0x2d, 0x4a, 0x4d, 0x89,
	0x4f, 0x2c, 0x2e, 0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x2b, 0x90,
	0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0x8b, 0xe8, 0x83, 0x58, 0x10, 0x49, 0x25, 0x0f, 0x2e, 0x89,
	0x40, 0x90, 0xce, 0x60, 0x88, 0x46, 0x47, 0x90, 0xbe, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x11, 0x2e, 0x56, 0xb0, 0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x90,
	0x18, 0x17, 0x5b, 0x46, 0x6a, 0x66, 0x7a, 0x46, 0x89, 0x04, 0x13, 0x58, 0x18, 0xca, 0x53, 0x6a,
	0x64, 0xe4, 0x92, 0xc4, 0x62, 0x54, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x3c, 0x8a, 0x59,
	0x4e, 0x9c, 0xaf, 0xee, 0xc9, 0x43, 0x04, 0x60, 0xc6, 0x2a, 0x71, 0xb1, 0x15, 0x97, 0x16, 0x14,
	0xe4, 0x54, 0x42, 0x8c, 0x75, 0xe2, 0x7a, 0x75, 0x4f, 0x1e, 0x2a, 0x12, 0x04, 0xa5, 0x41, 0x86,
	0xa4, 0xa4, 0x16, 0x94, 0x64, 0x48, 0x30, 0x23, 0x0c, 0x01, 0x0b, 0x04, 0x41, 0x28, 0x25, 0x63,
	0x2c, 0x4e, 0x28, 0x86, 0x79, 0x07, 0xe1, 0x70, 0x46, 0x14, 0x87, 0x87, 0x71, 0x49, 0x61, 0xd3,
	0x04, 0x75, 0xb8, 0x05, 0x17, 0x1b, 0xd8, 0x81, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46,
	0x0a, 0x7a, 0xe0, 0xe0, 0xd4, 0xc3, 0xe9, 0xd5, 0x20, 0xa8, 0x7a, 0x27, 0x9f, 0x13, 0x8f, 0xe4,
	0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc2, 0x63, 0x39, 0x86, 0x0b, 0x8f,
	0xe5, 0x18, 0x6e, 0x3c, 0x96, 0x63, 0x88, 0x32, 0x4a, 0xcf, 0x2c, 0xc9, 0x49, 0x4c, 0xd2, 0x4b,
	0xce, 0xcf, 0xd5, 0x2f, 0xc9, 0xc8, 0x2f, 0x4a, 0xce, 0x48, 0xcc, 0xcc, 0x03, 0xb3, 0xf2, 0xf2,
	0x53, 0x52, 0xf5, 0xcb, 0x8c, 0xf5, 0x2b, 0x90, 0xc5, 0x41, 0xf6, 0x25, 0xb1, 0x81, 0xe3, 0xcb,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x53, 0x23, 0x2e, 0xef, 0x01, 0x00, 0x00,
}

func (m *QuerySecuredAssetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySecuredAssetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySecuredAssetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySecuredAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySecuredAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySecuredAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depth) > 0 {
		i -= len(m.Depth)
		copy(dAtA[i:], m.Depth)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Depth)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Supply) > 0 {
		i -= len(m.Supply)
		copy(dAtA[i:], m.Supply)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Supply)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySecuredAssetsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySecuredAssetsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySecuredAssetsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySecuredAssetsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySecuredAssetsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySecuredAssetsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Assets) > 0 {
		for iNdEx := len(m.Assets) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Assets[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuerySecuredAsset(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuerySecuredAsset(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuerySecuredAsset(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuerySecuredAssetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	return n
}

func (m *QuerySecuredAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	l = len(m.Supply)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	l = len(m.Depth)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	return n
}

func (m *QuerySecuredAssetsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQuerySecuredAsset(uint64(l))
	}
	return n
}

func (m *QuerySecuredAssetsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Assets) > 0 {
		for _, e := range m.Assets {
			l = e.Size()
			n += 1 + l + sovQuerySecuredAsset(uint64(l))
		}
	}
	return n
}

func sovQuerySecuredAsset(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuerySecuredAsset(x uint64) (n int) {
	return sovQuerySecuredAsset(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuerySecuredAssetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySecuredAsset
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySecuredAssetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySecuredAssetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySecuredAsset(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySecuredAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySecuredAsset
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySecuredAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySecuredAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supply", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supply = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depth = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySecuredAsset(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySecuredAssetsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySecuredAsset
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySecuredAssetsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySecuredAssetsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySecuredAsset(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySecuredAssetsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySecuredAsset
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySecuredAssetsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySecuredAssetsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assets = append(m.Assets, &QuerySecuredAssetResponse{})
			if err := m.Assets[len(m.Assets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySecuredAsset(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySecuredAsset
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuerySecuredAsset(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuerySecuredAsset
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySecuredAsset
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuerySecuredAsset
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuerySecuredAsset
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuerySecuredAsset
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuerySecuredAsset        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuerySecuredAsset          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuerySecuredAsset = fmt.Errorf("proto: unexpected end of group")
)
