// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_last_block.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryLastBlocksRequest struct {
	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryLastBlocksRequest) Reset()         { *m = QueryLastBlocksRequest{} }
func (m *QueryLastBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*QueryLastBlocksRequest) ProtoMessage()    {}
func (*QueryLastBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3acb413fc87d9427, []int{0}
}
func (m *QueryLastBlocksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLastBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLastBlocksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLastBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLastBlocksRequest.Merge(m, src)
}
func (m *QueryLastBlocksRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryLastBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLastBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLastBlocksRequest proto.InternalMessageInfo

func (m *QueryLastBlocksRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryChainsLastBlockRequest struct {
	Chain  string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryChainsLastBlockRequest) Reset()         { *m = QueryChainsLastBlockRequest{} }
func (m *QueryChainsLastBlockRequest) String() string { return proto.CompactTextString(m) }
func (*QueryChainsLastBlockRequest) ProtoMessage()    {}
func (*QueryChainsLastBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3acb413fc87d9427, []int{1}
}
func (m *QueryChainsLastBlockRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryChainsLastBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryChainsLastBlockRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryChainsLastBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryChainsLastBlockRequest.Merge(m, src)
}
func (m *QueryChainsLastBlockRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryChainsLastBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryChainsLastBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryChainsLastBlockRequest proto.InternalMessageInfo

func (m *QueryChainsLastBlockRequest) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *QueryChainsLastBlockRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryLastBlocksResponse struct {
	LastBlocks []*ChainsLastBlock `protobuf:"bytes,1,rep,name=last_blocks,json=lastBlocks,proto3" json:"last_blocks,omitempty"`
}

func (m *QueryLastBlocksResponse) Reset()         { *m = QueryLastBlocksResponse{} }
func (m *QueryLastBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*QueryLastBlocksResponse) ProtoMessage()    {}
func (*QueryLastBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3acb413fc87d9427, []int{2}
}
func (m *QueryLastBlocksResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLastBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLastBlocksResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLastBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLastBlocksResponse.Merge(m, src)
}
func (m *QueryLastBlocksResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryLastBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLastBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLastBlocksResponse proto.InternalMessageInfo

func (m *QueryLastBlocksResponse) GetLastBlocks() []*ChainsLastBlock {
	if m != nil {
		return m.LastBlocks
	}
	return nil
}

type ChainsLastBlock struct {
	Chain          string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	LastObservedIn int64  `protobuf:"varint,2,opt,name=last_observed_in,json=lastObservedIn,proto3" json:"last_observed_in"`
	LastSignedOut  int64  `protobuf:"varint,3,opt,name=last_signed_out,json=lastSignedOut,proto3" json:"last_signed_out"`
	Thorchain      int64  `protobuf:"varint,4,opt,name=thorchain,proto3" json:"thorchain"`
}

func (m *ChainsLastBlock) Reset()         { *m = ChainsLastBlock{} }
func (m *ChainsLastBlock) String() string { return proto.CompactTextString(m) }
func (*ChainsLastBlock) ProtoMessage()    {}
func (*ChainsLastBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_3acb413fc87d9427, []int{3}
}
func (m *ChainsLastBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChainsLastBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChainsLastBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChainsLastBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainsLastBlock.Merge(m, src)
}
func (m *ChainsLastBlock) XXX_Size() int {
	return m.Size()
}
func (m *ChainsLastBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainsLastBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ChainsLastBlock proto.InternalMessageInfo

func (m *ChainsLastBlock) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *ChainsLastBlock) GetLastObservedIn() int64 {
	if m != nil {
		return m.LastObservedIn
	}
	return 0
}

func (m *ChainsLastBlock) GetLastSignedOut() int64 {
	if m != nil {
		return m.LastSignedOut
	}
	return 0
}

func (m *ChainsLastBlock) GetThorchain() int64 {
	if m != nil {
		return m.Thorchain
	}
	return 0
}

func init() {
	proto.RegisterType((*QueryLastBlocksRequest)(nil), "types.QueryLastBlocksRequest")
	proto.RegisterType((*QueryChainsLastBlockRequest)(nil), "types.QueryChainsLastBlockRequest")
	proto.RegisterType((*QueryLastBlocksResponse)(nil), "types.QueryLastBlocksResponse")
	proto.RegisterType((*ChainsLastBlock)(nil), "types.ChainsLastBlock")
}

func init() { proto.RegisterFile("types/query_last_block.proto", fileDescriptor_3acb413fc87d9427) }

var fileDescriptor_3acb413fc87d9427 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6b, 0xf2, 0x40,
	0x10, 0xc6, 0xdd, 0xd7, 0x57, 0xc1, 0x15, 0x6b, 0x49, 0xc5, 0x4a, 0x5b, 0x12, 0xf1, 0x24, 0x14,
	0x92, 0xa2, 0x87, 0x1e, 0x0a, 0x3d, 0xa4, 0xa7, 0x52, 0x41, 0x9a, 0xde, 0x7a, 0x09, 0x89, 0x2e,
	0x49, 0x68, 0xba, 0xab, 0xd9, 0x8d, 0xd4, 0x6f, 0xd1, 0x8f, 0xd5, 0xa3, 0xc7, 0x1e, 0x4a, 0x28,
	0x7a, 0xcb, 0xa7, 0x28, 0x3b, 0xf1, 0x6f, 0xbc, 0xcd, 0x3c, 0xcf, 0xfe, 0x66, 0x9e, 0x09, 0xc1,
	0x57, 0x62, 0x3e, 0x21, 0xdc, 0x98, 0xc6, 0x24, 0x9a, 0xdb, 0xa1, 0xc3, 0x85, 0xed, 0x86, 0x6c,
	0xf4, 0xa6, 0x4f, 0x22, 0x26, 0x98, 0x52, 0x02, 0xf7, 0xa2, 0xe1, 0x31, 0x8f, 0x81, 0x62, 0xc8,
	0x2a, 0x33, 0x3b, 0x37, 0xb8, 0xf9, 0x2c, 0xb1, 0x81, 0xc3, 0x85, 0x29, 0x21, 0x6e, 0x91, 0x69,
	0x4c, 0xb8, 0x50, 0x9a, 0xb8, 0xec, 0x93, 0xc0, 0xf3, 0x45, 0x0b, 0xb5, 0x51, 0xb7, 0x62, 0xad,
	0xbb, 0xce, 0x13, 0xbe, 0x04, 0xe2, 0xc1, 0x77, 0x02, 0xca, 0xb7, 0xdc, 0x06, 0x6b, 0xe0, 0xd2,
	0x48, 0x3a, 0x6b, 0x2a, 0x6b, 0xf6, 0x86, 0xfd, 0x3b, 0x18, 0x66, 0xe1, 0xf3, 0xa3, 0xf5, 0x7c,
	0xc2, 0x28, 0x27, 0xca, 0x2d, 0xae, 0xee, 0x4e, 0xe1, 0x2d, 0xd4, 0x2e, 0x76, 0xab, 0xbd, 0xa6,
	0x0e, 0xc7, 0xe8, 0xf9, 0xe5, 0x38, 0xdc, 0x0e, 0xe8, 0xfc, 0x20, 0x5c, 0xcf, 0xf9, 0x8a, 0x76,
	0x90, 0xca, 0xac, 0xa4, 0x89, 0x96, 0x09, 0x9b, 0x80, 0xf7, 0xf8, 0x14, 0xb6, 0x31, 0x97, 0x93,
	0x68, 0x46, 0xc6, 0x76, 0x40, 0x21, 0x6a, 0xd1, 0x6c, 0xa4, 0x89, 0x76, 0xe4, 0x59, 0x27, 0x52,
	0x19, 0xae, 0x85, 0x47, 0xaa, 0xdc, 0xe1, 0x3a, 0xbc, 0xe1, 0x81, 0x47, 0xc9, 0xd8, 0x66, 0xb1,
	0x68, 0x15, 0x01, 0x3f, 0x4b, 0x13, 0x2d, 0x6f, 0x59, 0x35, 0x29, 0xbc, 0x40, 0x3f, 0x8c, 0x85,
	0x72, 0x8d, 0x2b, 0xc2, 0x67, 0x51, 0x96, 0xf0, 0x3f, 0x60, 0xb5, 0x34, 0xd1, 0x76, 0xa2, 0xb5,
	0x2b, 0xcd, 0xc1, 0xd7, 0x52, 0x45, 0x8b, 0xa5, 0x8a, 0x7e, 0x97, 0x2a, 0xfa, 0x5c, 0xa9, 0x85,
	0xc5, 0x4a, 0x2d, 0x7c, 0xaf, 0xd4, 0xc2, 0x6b, 0xcf, 0x0b, 0x44, 0xe8, 0xb8, 0xfa, 0x88, 0xbd,
	0x1b, 0xdb, 0xf7, 0x50, 0x51, 0x36, 0x26, 0xc6, 0xac, 0x6f, 0x7c, 0xec, 0xeb, 0xf2, 0x43, 0xba,
	0x65, 0xf8, 0x0d, 0xfa, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x48, 0xae, 0x77, 0x43, 0x02,
	0x00, 0x00,
}

func (m *QueryLastBlocksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLastBlocksRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLastBlocksRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryChainsLastBlockRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryChainsLastBlockRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryChainsLastBlockRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryLastBlocksResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLastBlocksResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLastBlocksResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastBlocks) > 0 {
		for iNdEx := len(m.LastBlocks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LastBlocks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQueryLastBlock(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ChainsLastBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChainsLastBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChainsLastBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Thorchain != 0 {
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(m.Thorchain))
		i--
		dAtA[i] = 0x20
	}
	if m.LastSignedOut != 0 {
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(m.LastSignedOut))
		i--
		dAtA[i] = 0x18
	}
	if m.LastObservedIn != 0 {
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(m.LastObservedIn))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintQueryLastBlock(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryLastBlock(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryLastBlock(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryLastBlocksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryLastBlock(uint64(l))
	}
	return n
}

func (m *QueryChainsLastBlockRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovQueryLastBlock(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryLastBlock(uint64(l))
	}
	return n
}

func (m *QueryLastBlocksResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LastBlocks) > 0 {
		for _, e := range m.LastBlocks {
			l = e.Size()
			n += 1 + l + sovQueryLastBlock(uint64(l))
		}
	}
	return n
}

func (m *ChainsLastBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovQueryLastBlock(uint64(l))
	}
	if m.LastObservedIn != 0 {
		n += 1 + sovQueryLastBlock(uint64(m.LastObservedIn))
	}
	if m.LastSignedOut != 0 {
		n += 1 + sovQueryLastBlock(uint64(m.LastSignedOut))
	}
	if m.Thorchain != 0 {
		n += 1 + sovQueryLastBlock(uint64(m.Thorchain))
	}
	return n
}

func sovQueryLastBlock(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryLastBlock(x uint64) (n int) {
	return sovQueryLastBlock(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryLastBlocksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryLastBlock
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLastBlocksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLastBlocksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryLastBlock(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryChainsLastBlockRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryLastBlock
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryChainsLastBlockRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryChainsLastBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryLastBlock(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryLastBlocksResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryLastBlock
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLastBlocksResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLastBlocksResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastBlocks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastBlocks = append(m.LastBlocks, &ChainsLastBlock{})
			if err := m.LastBlocks[len(m.LastBlocks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryLastBlock(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChainsLastBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryLastBlock
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChainsLastBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChainsLastBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastObservedIn", wireType)
			}
			m.LastObservedIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastObservedIn |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSignedOut", wireType)
			}
			m.LastSignedOut = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastSignedOut |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thorchain", wireType)
			}
			m.Thorchain = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Thorchain |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQueryLastBlock(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryLastBlock
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryLastBlock(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryLastBlock
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryLastBlock
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryLastBlock
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryLastBlock
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryLastBlock
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryLastBlock        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryLastBlock          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryLastBlock = fmt.Errorf("proto: unexpected end of group")
)
