// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/msg_migrate.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	common "github.com/mapprotocol/compass-tss/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgMigrate struct {
	Tx          common.ObservedTx                             `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx"`
	BlockHeight int64                                         `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Signer      github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,3,opt,name=signer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"signer,omitempty"`
}

func (m *MsgMigrate) Reset()         { *m = MsgMigrate{} }
func (m *MsgMigrate) String() string { return proto.CompactTextString(m) }
func (*MsgMigrate) ProtoMessage()    {}
func (*MsgMigrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_75df83f373524726, []int{0}
}
func (m *MsgMigrate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrate.Merge(m, src)
}
func (m *MsgMigrate) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrate proto.InternalMessageInfo

func (m *MsgMigrate) GetTx() common.ObservedTx {
	if m != nil {
		return m.Tx
	}
	return common.ObservedTx{}
}

func (m *MsgMigrate) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MsgMigrate) GetSigner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Signer
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgMigrate)(nil), "types.MsgMigrate")
}

func init() { proto.RegisterFile("types/msg_migrate.proto", fileDescriptor_75df83f373524726) }

var fileDescriptor_75df83f373524726 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x4e, 0xc3, 0x30,
	0x14, 0x86, 0xe3, 0x16, 0x3a, 0xb8, 0x9d, 0x02, 0x12, 0x55, 0x85, 0xdc, 0xc2, 0x94, 0xa5, 0xb5,
	0x68, 0x4f, 0xd0, 0x4c, 0x20, 0x51, 0x21, 0x45, 0x4c, 0x2c, 0x51, 0xe2, 0x58, 0x8e, 0xd5, 0x26,
	0xaf, 0xb2, 0x4d, 0x15, 0x6e, 0xc1, 0x21, 0x38, 0x4c, 0xc7, 0x8e, 0x4c, 0x15, 0x4a, 0x6e, 0xc1,
	0x84, 0x62, 0x67, 0x60, 0x79, 0xef, 0xd7, 0xf7, 0x9e, 0xfe, 0x5f, 0x3f, 0xbe, 0x31, 0x1f, 0x7b,
	0xae, 0x69, 0xa1, 0x45, 0x5c, 0x48, 0xa1, 0x12, 0xc3, 0x17, 0x7b, 0x05, 0x06, 0xfc, 0x4b, 0x7b,
	0x98, 0xdc, 0xba, 0x7b, 0x3b, 0x63, 0x48, 0x35, 0x57, 0x07, 0x9e, 0xc5, 0xa6, 0x72, 0x4f, 0x93,
	0x6b, 0x01, 0x02, 0xac, 0xa4, 0xad, 0xea, 0xe8, 0x15, 0x83, 0xa2, 0x80, 0x92, 0xba, 0xe5, 0xe0,
	0xfd, 0x17, 0xc2, 0x78, 0xa3, 0xc5, 0xc6, 0x85, 0xf8, 0x01, 0xee, 0x99, 0x6a, 0x8c, 0x66, 0x28,
	0x18, 0x2e, 0xfd, 0x45, 0xf7, 0xf9, 0xd2, 0x05, 0xbc, 0x56, 0xe1, 0xc5, 0xf1, 0x3c, 0xf5, 0xa2,
	0x9e, 0xa9, 0xfc, 0x3b, 0x3c, 0x4a, 0x77, 0xc0, 0xb6, 0x71, 0xce, 0xa5, 0xc8, 0xcd, 0xb8, 0x37,
	0x43, 0x41, 0x3f, 0x1a, 0x5a, 0xf6, 0x68, 0x91, 0xff, 0x84, 0x07, 0x5a, 0x8a, 0x92, 0xab, 0x71,
	0x7f, 0x86, 0x82, 0x51, 0xf8, 0xf0, 0x7b, 0x9e, 0xce, 0x85, 0x34, 0xf9, 0x7b, 0xda, 0x5a, 0x53,
	0x06, 0xba, 0x00, 0xdd, 0xad, 0xb9, 0xce, 0xb6, 0xb6, 0x8f, 0x5e, 0xac, 0x19, 0x5b, 0x67, 0x99,
	0xe2, 0x5a, 0x47, 0x9d, 0x41, 0xf8, 0x7c, 0xac, 0x09, 0x3a, 0xd5, 0x04, 0xfd, 0xd4, 0x04, 0x7d,
	0x36, 0xc4, 0x3b, 0x35, 0xc4, 0xfb, 0x6e, 0x88, 0xf7, 0xb6, 0x14, 0xd2, 0xec, 0x12, 0x67, 0x68,
	0x72, 0x50, 0x2c, 0x4f, 0x64, 0x69, 0x55, 0x09, 0x19, 0xa7, 0x87, 0x15, 0xad, 0xfe, 0xf3, 0x36,
	0x20, 0x1d, 0xd8, 0xee, 0xab, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xa3, 0xe6, 0x8e, 0x66,
	0x01, 0x00, 0x00,
}

func (m *MsgMigrate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgMigrate(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BlockHeight != 0 {
		i = encodeVarintMsgMigrate(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.Tx.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgMigrate(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMsgMigrate(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgMigrate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgMigrate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Tx.Size()
	n += 1 + l + sovMsgMigrate(uint64(l))
	if m.BlockHeight != 0 {
		n += 1 + sovMsgMigrate(uint64(m.BlockHeight))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgMigrate(uint64(l))
	}
	return n
}

func sovMsgMigrate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgMigrate(x uint64) (n int) {
	return sovMsgMigrate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgMigrate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgMigrate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgMigrate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgMigrate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgMigrate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Tx.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgMigrate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgMigrate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgMigrate
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgMigrate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = append(m.Signer[:0], dAtA[iNdEx:postIndex]...)
			if m.Signer == nil {
				m.Signer = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgMigrate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgMigrate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgMigrate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgMigrate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgMigrate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgMigrate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgMigrate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgMigrate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgMigrate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgMigrate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgMigrate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgMigrate = fmt.Errorf("proto: unexpected end of group")
)
