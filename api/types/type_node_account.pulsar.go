// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	common "github.com/mapprotocol/compass-tss/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

var _ protoreflect.List = (*_NodeAccount_9_list)(nil)

type _NodeAccount_9_list struct {
	list *[]string
}

func (x *_NodeAccount_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_NodeAccount_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_NodeAccount_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_NodeAccount_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_NodeAccount_9_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message NodeAccount at list field SignerMembership as it is not of Message kind"))
}

func (x *_NodeAccount_9_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_NodeAccount_9_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_NodeAccount_9_list) IsValid() bool {
	return x.list != nil
}

var (
	md_NodeAccount                        protoreflect.MessageDescriptor
	fd_NodeAccount_node_address           protoreflect.FieldDescriptor
	fd_NodeAccount_status                 protoreflect.FieldDescriptor
	fd_NodeAccount_pub_key_set            protoreflect.FieldDescriptor
	fd_NodeAccount_validator_cons_pub_key protoreflect.FieldDescriptor
	fd_NodeAccount_bond                   protoreflect.FieldDescriptor
	fd_NodeAccount_active_block_height    protoreflect.FieldDescriptor
	fd_NodeAccount_bond_address           protoreflect.FieldDescriptor
	fd_NodeAccount_status_since           protoreflect.FieldDescriptor
	fd_NodeAccount_signer_membership      protoreflect.FieldDescriptor
	fd_NodeAccount_requested_to_leave     protoreflect.FieldDescriptor
	fd_NodeAccount_forced_to_leave        protoreflect.FieldDescriptor
	fd_NodeAccount_leave_score            protoreflect.FieldDescriptor
	fd_NodeAccount_ip_address             protoreflect.FieldDescriptor
	fd_NodeAccount_version                protoreflect.FieldDescriptor
	fd_NodeAccount_type                   protoreflect.FieldDescriptor
)

func init() {
	file_types_type_node_account_proto_init()
	md_NodeAccount = File_types_type_node_account_proto.Messages().ByName("NodeAccount")
	fd_NodeAccount_node_address = md_NodeAccount.Fields().ByName("node_address")
	fd_NodeAccount_status = md_NodeAccount.Fields().ByName("status")
	fd_NodeAccount_pub_key_set = md_NodeAccount.Fields().ByName("pub_key_set")
	fd_NodeAccount_validator_cons_pub_key = md_NodeAccount.Fields().ByName("validator_cons_pub_key")
	fd_NodeAccount_bond = md_NodeAccount.Fields().ByName("bond")
	fd_NodeAccount_active_block_height = md_NodeAccount.Fields().ByName("active_block_height")
	fd_NodeAccount_bond_address = md_NodeAccount.Fields().ByName("bond_address")
	fd_NodeAccount_status_since = md_NodeAccount.Fields().ByName("status_since")
	fd_NodeAccount_signer_membership = md_NodeAccount.Fields().ByName("signer_membership")
	fd_NodeAccount_requested_to_leave = md_NodeAccount.Fields().ByName("requested_to_leave")
	fd_NodeAccount_forced_to_leave = md_NodeAccount.Fields().ByName("forced_to_leave")
	fd_NodeAccount_leave_score = md_NodeAccount.Fields().ByName("leave_score")
	fd_NodeAccount_ip_address = md_NodeAccount.Fields().ByName("ip_address")
	fd_NodeAccount_version = md_NodeAccount.Fields().ByName("version")
	fd_NodeAccount_type = md_NodeAccount.Fields().ByName("type")
}

var _ protoreflect.Message = (*fastReflection_NodeAccount)(nil)

type fastReflection_NodeAccount NodeAccount

func (x *NodeAccount) ProtoReflect() protoreflect.Message {
	return (*fastReflection_NodeAccount)(x)
}

func (x *NodeAccount) slowProtoReflect() protoreflect.Message {
	mi := &file_types_type_node_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_NodeAccount_messageType fastReflection_NodeAccount_messageType
var _ protoreflect.MessageType = fastReflection_NodeAccount_messageType{}

type fastReflection_NodeAccount_messageType struct{}

func (x fastReflection_NodeAccount_messageType) Zero() protoreflect.Message {
	return (*fastReflection_NodeAccount)(nil)
}
func (x fastReflection_NodeAccount_messageType) New() protoreflect.Message {
	return new(fastReflection_NodeAccount)
}
func (x fastReflection_NodeAccount_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_NodeAccount
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_NodeAccount) Descriptor() protoreflect.MessageDescriptor {
	return md_NodeAccount
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_NodeAccount) Type() protoreflect.MessageType {
	return _fastReflection_NodeAccount_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_NodeAccount) New() protoreflect.Message {
	return new(fastReflection_NodeAccount)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_NodeAccount) Interface() protoreflect.ProtoMessage {
	return (*NodeAccount)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_NodeAccount) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.NodeAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.NodeAddress)
		if !f(fd_NodeAccount_node_address, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_NodeAccount_status, value) {
			return
		}
	}
	if x.PubKeySet != nil {
		value := protoreflect.ValueOfMessage(x.PubKeySet.ProtoReflect())
		if !f(fd_NodeAccount_pub_key_set, value) {
			return
		}
	}
	if x.ValidatorConsPubKey != "" {
		value := protoreflect.ValueOfString(x.ValidatorConsPubKey)
		if !f(fd_NodeAccount_validator_cons_pub_key, value) {
			return
		}
	}
	if x.Bond != "" {
		value := protoreflect.ValueOfString(x.Bond)
		if !f(fd_NodeAccount_bond, value) {
			return
		}
	}
	if x.ActiveBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ActiveBlockHeight)
		if !f(fd_NodeAccount_active_block_height, value) {
			return
		}
	}
	if x.BondAddress != "" {
		value := protoreflect.ValueOfString(x.BondAddress)
		if !f(fd_NodeAccount_bond_address, value) {
			return
		}
	}
	if x.StatusSince != int64(0) {
		value := protoreflect.ValueOfInt64(x.StatusSince)
		if !f(fd_NodeAccount_status_since, value) {
			return
		}
	}
	if len(x.SignerMembership) != 0 {
		value := protoreflect.ValueOfList(&_NodeAccount_9_list{list: &x.SignerMembership})
		if !f(fd_NodeAccount_signer_membership, value) {
			return
		}
	}
	if x.RequestedToLeave != false {
		value := protoreflect.ValueOfBool(x.RequestedToLeave)
		if !f(fd_NodeAccount_requested_to_leave, value) {
			return
		}
	}
	if x.ForcedToLeave != false {
		value := protoreflect.ValueOfBool(x.ForcedToLeave)
		if !f(fd_NodeAccount_forced_to_leave, value) {
			return
		}
	}
	if x.LeaveScore != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LeaveScore)
		if !f(fd_NodeAccount_leave_score, value) {
			return
		}
	}
	if x.IpAddress != "" {
		value := protoreflect.ValueOfString(x.IpAddress)
		if !f(fd_NodeAccount_ip_address, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_NodeAccount_version, value) {
			return
		}
	}
	if x.Type_ != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Type_))
		if !f(fd_NodeAccount_type, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_NodeAccount) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.NodeAccount.node_address":
		return len(x.NodeAddress) != 0
	case "types.NodeAccount.status":
		return x.Status != 0
	case "types.NodeAccount.pub_key_set":
		return x.PubKeySet != nil
	case "types.NodeAccount.validator_cons_pub_key":
		return x.ValidatorConsPubKey != ""
	case "types.NodeAccount.bond":
		return x.Bond != ""
	case "types.NodeAccount.active_block_height":
		return x.ActiveBlockHeight != int64(0)
	case "types.NodeAccount.bond_address":
		return x.BondAddress != ""
	case "types.NodeAccount.status_since":
		return x.StatusSince != int64(0)
	case "types.NodeAccount.signer_membership":
		return len(x.SignerMembership) != 0
	case "types.NodeAccount.requested_to_leave":
		return x.RequestedToLeave != false
	case "types.NodeAccount.forced_to_leave":
		return x.ForcedToLeave != false
	case "types.NodeAccount.leave_score":
		return x.LeaveScore != uint64(0)
	case "types.NodeAccount.ip_address":
		return x.IpAddress != ""
	case "types.NodeAccount.version":
		return x.Version != ""
	case "types.NodeAccount.type":
		return x.Type_ != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NodeAccount) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.NodeAccount.node_address":
		x.NodeAddress = nil
	case "types.NodeAccount.status":
		x.Status = 0
	case "types.NodeAccount.pub_key_set":
		x.PubKeySet = nil
	case "types.NodeAccount.validator_cons_pub_key":
		x.ValidatorConsPubKey = ""
	case "types.NodeAccount.bond":
		x.Bond = ""
	case "types.NodeAccount.active_block_height":
		x.ActiveBlockHeight = int64(0)
	case "types.NodeAccount.bond_address":
		x.BondAddress = ""
	case "types.NodeAccount.status_since":
		x.StatusSince = int64(0)
	case "types.NodeAccount.signer_membership":
		x.SignerMembership = nil
	case "types.NodeAccount.requested_to_leave":
		x.RequestedToLeave = false
	case "types.NodeAccount.forced_to_leave":
		x.ForcedToLeave = false
	case "types.NodeAccount.leave_score":
		x.LeaveScore = uint64(0)
	case "types.NodeAccount.ip_address":
		x.IpAddress = ""
	case "types.NodeAccount.version":
		x.Version = ""
	case "types.NodeAccount.type":
		x.Type_ = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_NodeAccount) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.NodeAccount.node_address":
		value := x.NodeAddress
		return protoreflect.ValueOfBytes(value)
	case "types.NodeAccount.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "types.NodeAccount.pub_key_set":
		value := x.PubKeySet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.NodeAccount.validator_cons_pub_key":
		value := x.ValidatorConsPubKey
		return protoreflect.ValueOfString(value)
	case "types.NodeAccount.bond":
		value := x.Bond
		return protoreflect.ValueOfString(value)
	case "types.NodeAccount.active_block_height":
		value := x.ActiveBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "types.NodeAccount.bond_address":
		value := x.BondAddress
		return protoreflect.ValueOfString(value)
	case "types.NodeAccount.status_since":
		value := x.StatusSince
		return protoreflect.ValueOfInt64(value)
	case "types.NodeAccount.signer_membership":
		if len(x.SignerMembership) == 0 {
			return protoreflect.ValueOfList(&_NodeAccount_9_list{})
		}
		listValue := &_NodeAccount_9_list{list: &x.SignerMembership}
		return protoreflect.ValueOfList(listValue)
	case "types.NodeAccount.requested_to_leave":
		value := x.RequestedToLeave
		return protoreflect.ValueOfBool(value)
	case "types.NodeAccount.forced_to_leave":
		value := x.ForcedToLeave
		return protoreflect.ValueOfBool(value)
	case "types.NodeAccount.leave_score":
		value := x.LeaveScore
		return protoreflect.ValueOfUint64(value)
	case "types.NodeAccount.ip_address":
		value := x.IpAddress
		return protoreflect.ValueOfString(value)
	case "types.NodeAccount.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	case "types.NodeAccount.type":
		value := x.Type_
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NodeAccount) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.NodeAccount.node_address":
		x.NodeAddress = value.Bytes()
	case "types.NodeAccount.status":
		x.Status = (NodeStatus)(value.Enum())
	case "types.NodeAccount.pub_key_set":
		x.PubKeySet = value.Message().Interface().(*common.PubKeySet)
	case "types.NodeAccount.validator_cons_pub_key":
		x.ValidatorConsPubKey = value.Interface().(string)
	case "types.NodeAccount.bond":
		x.Bond = value.Interface().(string)
	case "types.NodeAccount.active_block_height":
		x.ActiveBlockHeight = value.Int()
	case "types.NodeAccount.bond_address":
		x.BondAddress = value.Interface().(string)
	case "types.NodeAccount.status_since":
		x.StatusSince = value.Int()
	case "types.NodeAccount.signer_membership":
		lv := value.List()
		clv := lv.(*_NodeAccount_9_list)
		x.SignerMembership = *clv.list
	case "types.NodeAccount.requested_to_leave":
		x.RequestedToLeave = value.Bool()
	case "types.NodeAccount.forced_to_leave":
		x.ForcedToLeave = value.Bool()
	case "types.NodeAccount.leave_score":
		x.LeaveScore = value.Uint()
	case "types.NodeAccount.ip_address":
		x.IpAddress = value.Interface().(string)
	case "types.NodeAccount.version":
		x.Version = value.Interface().(string)
	case "types.NodeAccount.type":
		x.Type_ = (NodeType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NodeAccount) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.NodeAccount.pub_key_set":
		if x.PubKeySet == nil {
			x.PubKeySet = new(common.PubKeySet)
		}
		return protoreflect.ValueOfMessage(x.PubKeySet.ProtoReflect())
	case "types.NodeAccount.signer_membership":
		if x.SignerMembership == nil {
			x.SignerMembership = []string{}
		}
		value := &_NodeAccount_9_list{list: &x.SignerMembership}
		return protoreflect.ValueOfList(value)
	case "types.NodeAccount.node_address":
		panic(fmt.Errorf("field node_address of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.status":
		panic(fmt.Errorf("field status of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.validator_cons_pub_key":
		panic(fmt.Errorf("field validator_cons_pub_key of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.bond":
		panic(fmt.Errorf("field bond of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.active_block_height":
		panic(fmt.Errorf("field active_block_height of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.bond_address":
		panic(fmt.Errorf("field bond_address of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.status_since":
		panic(fmt.Errorf("field status_since of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.requested_to_leave":
		panic(fmt.Errorf("field requested_to_leave of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.forced_to_leave":
		panic(fmt.Errorf("field forced_to_leave of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.leave_score":
		panic(fmt.Errorf("field leave_score of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.ip_address":
		panic(fmt.Errorf("field ip_address of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.version":
		panic(fmt.Errorf("field version of message types.NodeAccount is not mutable"))
	case "types.NodeAccount.type":
		panic(fmt.Errorf("field type of message types.NodeAccount is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_NodeAccount) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.NodeAccount.node_address":
		return protoreflect.ValueOfBytes(nil)
	case "types.NodeAccount.status":
		return protoreflect.ValueOfEnum(0)
	case "types.NodeAccount.pub_key_set":
		m := new(common.PubKeySet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.NodeAccount.validator_cons_pub_key":
		return protoreflect.ValueOfString("")
	case "types.NodeAccount.bond":
		return protoreflect.ValueOfString("")
	case "types.NodeAccount.active_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.NodeAccount.bond_address":
		return protoreflect.ValueOfString("")
	case "types.NodeAccount.status_since":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.NodeAccount.signer_membership":
		list := []string{}
		return protoreflect.ValueOfList(&_NodeAccount_9_list{list: &list})
	case "types.NodeAccount.requested_to_leave":
		return protoreflect.ValueOfBool(false)
	case "types.NodeAccount.forced_to_leave":
		return protoreflect.ValueOfBool(false)
	case "types.NodeAccount.leave_score":
		return protoreflect.ValueOfUint64(uint64(0))
	case "types.NodeAccount.ip_address":
		return protoreflect.ValueOfString("")
	case "types.NodeAccount.version":
		return protoreflect.ValueOfString("")
	case "types.NodeAccount.type":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.NodeAccount"))
		}
		panic(fmt.Errorf("message types.NodeAccount does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_NodeAccount) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.NodeAccount", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_NodeAccount) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NodeAccount) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_NodeAccount) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_NodeAccount) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*NodeAccount)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NodeAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.PubKeySet != nil {
			l = options.Size(x.PubKeySet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorConsPubKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bond)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ActiveBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ActiveBlockHeight))
		}
		l = len(x.BondAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StatusSince != 0 {
			n += 1 + runtime.Sov(uint64(x.StatusSince))
		}
		if len(x.SignerMembership) > 0 {
			for _, s := range x.SignerMembership {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.RequestedToLeave {
			n += 2
		}
		if x.ForcedToLeave {
			n += 2
		}
		if x.LeaveScore != 0 {
			n += 1 + runtime.Sov(uint64(x.LeaveScore))
		}
		l = len(x.IpAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Type_ != 0 {
			n += 1 + runtime.Sov(uint64(x.Type_))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*NodeAccount)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Type_ != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Type_))
			i--
			dAtA[i] = 0x78
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.IpAddress) > 0 {
			i -= len(x.IpAddress)
			copy(dAtA[i:], x.IpAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IpAddress)))
			i--
			dAtA[i] = 0x6a
		}
		if x.LeaveScore != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LeaveScore))
			i--
			dAtA[i] = 0x60
		}
		if x.ForcedToLeave {
			i--
			if x.ForcedToLeave {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if x.RequestedToLeave {
			i--
			if x.RequestedToLeave {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x50
		}
		if len(x.SignerMembership) > 0 {
			for iNdEx := len(x.SignerMembership) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SignerMembership[iNdEx])
				copy(dAtA[i:], x.SignerMembership[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignerMembership[iNdEx])))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.StatusSince != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StatusSince))
			i--
			dAtA[i] = 0x40
		}
		if len(x.BondAddress) > 0 {
			i -= len(x.BondAddress)
			copy(dAtA[i:], x.BondAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BondAddress)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ActiveBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActiveBlockHeight))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Bond) > 0 {
			i -= len(x.Bond)
			copy(dAtA[i:], x.Bond)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bond)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ValidatorConsPubKey) > 0 {
			i -= len(x.ValidatorConsPubKey)
			copy(dAtA[i:], x.ValidatorConsPubKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorConsPubKey)))
			i--
			dAtA[i] = 0x22
		}
		if x.PubKeySet != nil {
			encoded, err := options.Marshal(x.PubKeySet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x10
		}
		if len(x.NodeAddress) > 0 {
			i -= len(x.NodeAddress)
			copy(dAtA[i:], x.NodeAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*NodeAccount)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NodeAccount: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NodeAccount: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeAddress = append(x.NodeAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.NodeAddress == nil {
					x.NodeAddress = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= NodeStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKeySet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.PubKeySet == nil {
					x.PubKeySet = &common.PubKeySet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PubKeySet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorConsPubKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorConsPubKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bond", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bond = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveBlockHeight", wireType)
				}
				x.ActiveBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActiveBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BondAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BondAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StatusSince", wireType)
				}
				x.StatusSince = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StatusSince |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignerMembership", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignerMembership = append(x.SignerMembership, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestedToLeave", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.RequestedToLeave = bool(v != 0)
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForcedToLeave", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.ForcedToLeave = bool(v != 0)
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LeaveScore", wireType)
				}
				x.LeaveScore = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LeaveScore |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IpAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IpAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				x.Type_ = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Type_ |= NodeType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BondProvider              protoreflect.MessageDescriptor
	fd_BondProvider_bond_address protoreflect.FieldDescriptor
	fd_BondProvider_bond         protoreflect.FieldDescriptor
)

func init() {
	file_types_type_node_account_proto_init()
	md_BondProvider = File_types_type_node_account_proto.Messages().ByName("BondProvider")
	fd_BondProvider_bond_address = md_BondProvider.Fields().ByName("bond_address")
	fd_BondProvider_bond = md_BondProvider.Fields().ByName("bond")
}

var _ protoreflect.Message = (*fastReflection_BondProvider)(nil)

type fastReflection_BondProvider BondProvider

func (x *BondProvider) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BondProvider)(x)
}

func (x *BondProvider) slowProtoReflect() protoreflect.Message {
	mi := &file_types_type_node_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BondProvider_messageType fastReflection_BondProvider_messageType
var _ protoreflect.MessageType = fastReflection_BondProvider_messageType{}

type fastReflection_BondProvider_messageType struct{}

func (x fastReflection_BondProvider_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BondProvider)(nil)
}
func (x fastReflection_BondProvider_messageType) New() protoreflect.Message {
	return new(fastReflection_BondProvider)
}
func (x fastReflection_BondProvider_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BondProvider
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BondProvider) Descriptor() protoreflect.MessageDescriptor {
	return md_BondProvider
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BondProvider) Type() protoreflect.MessageType {
	return _fastReflection_BondProvider_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BondProvider) New() protoreflect.Message {
	return new(fastReflection_BondProvider)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BondProvider) Interface() protoreflect.ProtoMessage {
	return (*BondProvider)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BondProvider) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.BondAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.BondAddress)
		if !f(fd_BondProvider_bond_address, value) {
			return
		}
	}
	if x.Bond != "" {
		value := protoreflect.ValueOfString(x.Bond)
		if !f(fd_BondProvider_bond, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BondProvider) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.BondProvider.bond_address":
		return len(x.BondAddress) != 0
	case "types.BondProvider.bond":
		return x.Bond != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProvider) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.BondProvider.bond_address":
		x.BondAddress = nil
	case "types.BondProvider.bond":
		x.Bond = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BondProvider) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.BondProvider.bond_address":
		value := x.BondAddress
		return protoreflect.ValueOfBytes(value)
	case "types.BondProvider.bond":
		value := x.Bond
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProvider) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.BondProvider.bond_address":
		x.BondAddress = value.Bytes()
	case "types.BondProvider.bond":
		x.Bond = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProvider) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.BondProvider.bond_address":
		panic(fmt.Errorf("field bond_address of message types.BondProvider is not mutable"))
	case "types.BondProvider.bond":
		panic(fmt.Errorf("field bond of message types.BondProvider is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BondProvider) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.BondProvider.bond_address":
		return protoreflect.ValueOfBytes(nil)
	case "types.BondProvider.bond":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProvider"))
		}
		panic(fmt.Errorf("message types.BondProvider does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BondProvider) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.BondProvider", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BondProvider) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProvider) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BondProvider) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BondProvider) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BondProvider)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BondAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bond)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BondProvider)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Bond) > 0 {
			i -= len(x.Bond)
			copy(dAtA[i:], x.Bond)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bond)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.BondAddress) > 0 {
			i -= len(x.BondAddress)
			copy(dAtA[i:], x.BondAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BondAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BondProvider)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BondProvider: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BondProvider: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BondAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BondAddress = append(x.BondAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.BondAddress == nil {
					x.BondAddress = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bond", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bond = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_BondProviders_3_list)(nil)

type _BondProviders_3_list struct {
	list *[]*BondProvider
}

func (x *_BondProviders_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BondProviders_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_BondProviders_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BondProvider)
	(*x.list)[i] = concreteValue
}

func (x *_BondProviders_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BondProvider)
	*x.list = append(*x.list, concreteValue)
}

func (x *_BondProviders_3_list) AppendMutable() protoreflect.Value {
	v := new(BondProvider)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BondProviders_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_BondProviders_3_list) NewElement() protoreflect.Value {
	v := new(BondProvider)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BondProviders_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_BondProviders                   protoreflect.MessageDescriptor
	fd_BondProviders_node_address      protoreflect.FieldDescriptor
	fd_BondProviders_node_operator_fee protoreflect.FieldDescriptor
	fd_BondProviders_providers         protoreflect.FieldDescriptor
)

func init() {
	file_types_type_node_account_proto_init()
	md_BondProviders = File_types_type_node_account_proto.Messages().ByName("BondProviders")
	fd_BondProviders_node_address = md_BondProviders.Fields().ByName("node_address")
	fd_BondProviders_node_operator_fee = md_BondProviders.Fields().ByName("node_operator_fee")
	fd_BondProviders_providers = md_BondProviders.Fields().ByName("providers")
}

var _ protoreflect.Message = (*fastReflection_BondProviders)(nil)

type fastReflection_BondProviders BondProviders

func (x *BondProviders) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BondProviders)(x)
}

func (x *BondProviders) slowProtoReflect() protoreflect.Message {
	mi := &file_types_type_node_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BondProviders_messageType fastReflection_BondProviders_messageType
var _ protoreflect.MessageType = fastReflection_BondProviders_messageType{}

type fastReflection_BondProviders_messageType struct{}

func (x fastReflection_BondProviders_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BondProviders)(nil)
}
func (x fastReflection_BondProviders_messageType) New() protoreflect.Message {
	return new(fastReflection_BondProviders)
}
func (x fastReflection_BondProviders_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BondProviders
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BondProviders) Descriptor() protoreflect.MessageDescriptor {
	return md_BondProviders
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BondProviders) Type() protoreflect.MessageType {
	return _fastReflection_BondProviders_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BondProviders) New() protoreflect.Message {
	return new(fastReflection_BondProviders)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BondProviders) Interface() protoreflect.ProtoMessage {
	return (*BondProviders)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BondProviders) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.NodeAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.NodeAddress)
		if !f(fd_BondProviders_node_address, value) {
			return
		}
	}
	if x.NodeOperatorFee != "" {
		value := protoreflect.ValueOfString(x.NodeOperatorFee)
		if !f(fd_BondProviders_node_operator_fee, value) {
			return
		}
	}
	if len(x.Providers) != 0 {
		value := protoreflect.ValueOfList(&_BondProviders_3_list{list: &x.Providers})
		if !f(fd_BondProviders_providers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BondProviders) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.BondProviders.node_address":
		return len(x.NodeAddress) != 0
	case "types.BondProviders.node_operator_fee":
		return x.NodeOperatorFee != ""
	case "types.BondProviders.providers":
		return len(x.Providers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProviders) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.BondProviders.node_address":
		x.NodeAddress = nil
	case "types.BondProviders.node_operator_fee":
		x.NodeOperatorFee = ""
	case "types.BondProviders.providers":
		x.Providers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BondProviders) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.BondProviders.node_address":
		value := x.NodeAddress
		return protoreflect.ValueOfBytes(value)
	case "types.BondProviders.node_operator_fee":
		value := x.NodeOperatorFee
		return protoreflect.ValueOfString(value)
	case "types.BondProviders.providers":
		if len(x.Providers) == 0 {
			return protoreflect.ValueOfList(&_BondProviders_3_list{})
		}
		listValue := &_BondProviders_3_list{list: &x.Providers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProviders) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.BondProviders.node_address":
		x.NodeAddress = value.Bytes()
	case "types.BondProviders.node_operator_fee":
		x.NodeOperatorFee = value.Interface().(string)
	case "types.BondProviders.providers":
		lv := value.List()
		clv := lv.(*_BondProviders_3_list)
		x.Providers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProviders) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.BondProviders.providers":
		if x.Providers == nil {
			x.Providers = []*BondProvider{}
		}
		value := &_BondProviders_3_list{list: &x.Providers}
		return protoreflect.ValueOfList(value)
	case "types.BondProviders.node_address":
		panic(fmt.Errorf("field node_address of message types.BondProviders is not mutable"))
	case "types.BondProviders.node_operator_fee":
		panic(fmt.Errorf("field node_operator_fee of message types.BondProviders is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BondProviders) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.BondProviders.node_address":
		return protoreflect.ValueOfBytes(nil)
	case "types.BondProviders.node_operator_fee":
		return protoreflect.ValueOfString("")
	case "types.BondProviders.providers":
		list := []*BondProvider{}
		return protoreflect.ValueOfList(&_BondProviders_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.BondProviders"))
		}
		panic(fmt.Errorf("message types.BondProviders does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BondProviders) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.BondProviders", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BondProviders) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BondProviders) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BondProviders) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BondProviders) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BondProviders)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NodeAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NodeOperatorFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Providers) > 0 {
			for _, e := range x.Providers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BondProviders)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Providers) > 0 {
			for iNdEx := len(x.Providers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Providers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.NodeOperatorFee) > 0 {
			i -= len(x.NodeOperatorFee)
			copy(dAtA[i:], x.NodeOperatorFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeOperatorFee)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.NodeAddress) > 0 {
			i -= len(x.NodeAddress)
			copy(dAtA[i:], x.NodeAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BondProviders)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BondProviders: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BondProviders: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeAddress = append(x.NodeAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.NodeAddress == nil {
					x.NodeAddress = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeOperatorFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeOperatorFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Providers = append(x.Providers, &BondProvider{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Providers[len(x.Providers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MinJoinLast                     protoreflect.MessageDescriptor
	fd_MinJoinLast_last_changed_height protoreflect.FieldDescriptor
	fd_MinJoinLast_version             protoreflect.FieldDescriptor
)

func init() {
	file_types_type_node_account_proto_init()
	md_MinJoinLast = File_types_type_node_account_proto.Messages().ByName("MinJoinLast")
	fd_MinJoinLast_last_changed_height = md_MinJoinLast.Fields().ByName("last_changed_height")
	fd_MinJoinLast_version = md_MinJoinLast.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_MinJoinLast)(nil)

type fastReflection_MinJoinLast MinJoinLast

func (x *MinJoinLast) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MinJoinLast)(x)
}

func (x *MinJoinLast) slowProtoReflect() protoreflect.Message {
	mi := &file_types_type_node_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MinJoinLast_messageType fastReflection_MinJoinLast_messageType
var _ protoreflect.MessageType = fastReflection_MinJoinLast_messageType{}

type fastReflection_MinJoinLast_messageType struct{}

func (x fastReflection_MinJoinLast_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MinJoinLast)(nil)
}
func (x fastReflection_MinJoinLast_messageType) New() protoreflect.Message {
	return new(fastReflection_MinJoinLast)
}
func (x fastReflection_MinJoinLast_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MinJoinLast
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MinJoinLast) Descriptor() protoreflect.MessageDescriptor {
	return md_MinJoinLast
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MinJoinLast) Type() protoreflect.MessageType {
	return _fastReflection_MinJoinLast_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MinJoinLast) New() protoreflect.Message {
	return new(fastReflection_MinJoinLast)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MinJoinLast) Interface() protoreflect.ProtoMessage {
	return (*MinJoinLast)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MinJoinLast) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LastChangedHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastChangedHeight)
		if !f(fd_MinJoinLast_last_changed_height, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_MinJoinLast_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MinJoinLast) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.MinJoinLast.last_changed_height":
		return x.LastChangedHeight != int64(0)
	case "types.MinJoinLast.version":
		return x.Version != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MinJoinLast) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.MinJoinLast.last_changed_height":
		x.LastChangedHeight = int64(0)
	case "types.MinJoinLast.version":
		x.Version = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MinJoinLast) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.MinJoinLast.last_changed_height":
		value := x.LastChangedHeight
		return protoreflect.ValueOfInt64(value)
	case "types.MinJoinLast.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MinJoinLast) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.MinJoinLast.last_changed_height":
		x.LastChangedHeight = value.Int()
	case "types.MinJoinLast.version":
		x.Version = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MinJoinLast) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.MinJoinLast.last_changed_height":
		panic(fmt.Errorf("field last_changed_height of message types.MinJoinLast is not mutable"))
	case "types.MinJoinLast.version":
		panic(fmt.Errorf("field version of message types.MinJoinLast is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MinJoinLast) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.MinJoinLast.last_changed_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.MinJoinLast.version":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.MinJoinLast"))
		}
		panic(fmt.Errorf("message types.MinJoinLast does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MinJoinLast) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.MinJoinLast", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MinJoinLast) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MinJoinLast) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MinJoinLast) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MinJoinLast) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MinJoinLast)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LastChangedHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.LastChangedHeight))
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MinJoinLast)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x12
		}
		if x.LastChangedHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastChangedHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MinJoinLast)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MinJoinLast: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MinJoinLast: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastChangedHeight", wireType)
				}
				x.LastChangedHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastChangedHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/type_node_account.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeStatus int32

const (
	NodeStatus_Unknown     NodeStatus = 0
	NodeStatus_Whitelisted NodeStatus = 1
	NodeStatus_Standby     NodeStatus = 2
	NodeStatus_Ready       NodeStatus = 3
	NodeStatus_Active      NodeStatus = 4
	NodeStatus_Disabled    NodeStatus = 5
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "Unknown",
		1: "Whitelisted",
		2: "Standby",
		3: "Ready",
		4: "Active",
		5: "Disabled",
	}
	NodeStatus_value = map[string]int32{
		"Unknown":     0,
		"Whitelisted": 1,
		"Standby":     2,
		"Ready":       3,
		"Active":      4,
		"Disabled":    5,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_types_type_node_account_proto_enumTypes[0].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_types_type_node_account_proto_enumTypes[0]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{0}
}

type NodeType int32

const (
	NodeType_TypeValidator NodeType = 0
	NodeType_TypeVault     NodeType = 1
	NodeType_TypeUnknown   NodeType = 2
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "TypeValidator",
		1: "TypeVault",
		2: "TypeUnknown",
	}
	NodeType_value = map[string]int32{
		"TypeValidator": 0,
		"TypeVault":     1,
		"TypeUnknown":   2,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_types_type_node_account_proto_enumTypes[1].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_types_type_node_account_proto_enumTypes[1]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{1}
}

type NodeAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress         []byte            `protobuf:"bytes,1,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	Status              NodeStatus        `protobuf:"varint,2,opt,name=status,proto3,enum=types.NodeStatus" json:"status,omitempty"`
	PubKeySet           *common.PubKeySet `protobuf:"bytes,3,opt,name=pub_key_set,json=pubKeySet,proto3" json:"pub_key_set,omitempty"`
	ValidatorConsPubKey string            `protobuf:"bytes,4,opt,name=validator_cons_pub_key,json=validatorConsPubKey,proto3" json:"validator_cons_pub_key,omitempty"`
	Bond                string            `protobuf:"bytes,5,opt,name=bond,proto3" json:"bond,omitempty"`
	ActiveBlockHeight   int64             `protobuf:"varint,6,opt,name=active_block_height,json=activeBlockHeight,proto3" json:"active_block_height,omitempty"`
	BondAddress         string            `protobuf:"bytes,7,opt,name=bond_address,json=bondAddress,proto3" json:"bond_address,omitempty"`
	StatusSince         int64             `protobuf:"varint,8,opt,name=status_since,json=statusSince,proto3" json:"status_since,omitempty"`
	SignerMembership    []string          `protobuf:"bytes,9,rep,name=signer_membership,json=signerMembership,proto3" json:"signer_membership,omitempty"`
	RequestedToLeave    bool              `protobuf:"varint,10,opt,name=requested_to_leave,json=requestedToLeave,proto3" json:"requested_to_leave,omitempty"`
	ForcedToLeave       bool              `protobuf:"varint,11,opt,name=forced_to_leave,json=forcedToLeave,proto3" json:"forced_to_leave,omitempty"`
	LeaveScore          uint64            `protobuf:"varint,12,opt,name=leave_score,json=leaveScore,proto3" json:"leave_score,omitempty"`
	IpAddress           string            `protobuf:"bytes,13,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Version             string            `protobuf:"bytes,14,opt,name=version,proto3" json:"version,omitempty"`
	Type_               NodeType          `protobuf:"varint,15,opt,name=type,proto3,enum=types.NodeType" json:"type,omitempty"`
}

func (x *NodeAccount) Reset() {
	*x = NodeAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_type_node_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAccount) ProtoMessage() {}

// Deprecated: Use NodeAccount.ProtoReflect.Descriptor instead.
func (*NodeAccount) Descriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{0}
}

func (x *NodeAccount) GetNodeAddress() []byte {
	if x != nil {
		return x.NodeAddress
	}
	return nil
}

func (x *NodeAccount) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_Unknown
}

func (x *NodeAccount) GetPubKeySet() *common.PubKeySet {
	if x != nil {
		return x.PubKeySet
	}
	return nil
}

func (x *NodeAccount) GetValidatorConsPubKey() string {
	if x != nil {
		return x.ValidatorConsPubKey
	}
	return ""
}

func (x *NodeAccount) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

func (x *NodeAccount) GetActiveBlockHeight() int64 {
	if x != nil {
		return x.ActiveBlockHeight
	}
	return 0
}

func (x *NodeAccount) GetBondAddress() string {
	if x != nil {
		return x.BondAddress
	}
	return ""
}

func (x *NodeAccount) GetStatusSince() int64 {
	if x != nil {
		return x.StatusSince
	}
	return 0
}

func (x *NodeAccount) GetSignerMembership() []string {
	if x != nil {
		return x.SignerMembership
	}
	return nil
}

func (x *NodeAccount) GetRequestedToLeave() bool {
	if x != nil {
		return x.RequestedToLeave
	}
	return false
}

func (x *NodeAccount) GetForcedToLeave() bool {
	if x != nil {
		return x.ForcedToLeave
	}
	return false
}

func (x *NodeAccount) GetLeaveScore() uint64 {
	if x != nil {
		return x.LeaveScore
	}
	return 0
}

func (x *NodeAccount) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodeAccount) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeAccount) GetType_() NodeType {
	if x != nil {
		return x.Type_
	}
	return NodeType_TypeValidator
}

type BondProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BondAddress []byte `protobuf:"bytes,1,opt,name=bond_address,json=bondAddress,proto3" json:"bond_address,omitempty"`
	Bond        string `protobuf:"bytes,2,opt,name=bond,proto3" json:"bond,omitempty"`
}

func (x *BondProvider) Reset() {
	*x = BondProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_type_node_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BondProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BondProvider) ProtoMessage() {}

// Deprecated: Use BondProvider.ProtoReflect.Descriptor instead.
func (*BondProvider) Descriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{1}
}

func (x *BondProvider) GetBondAddress() []byte {
	if x != nil {
		return x.BondAddress
	}
	return nil
}

func (x *BondProvider) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

type BondProviders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress     []byte          `protobuf:"bytes,1,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	NodeOperatorFee string          `protobuf:"bytes,2,opt,name=node_operator_fee,json=nodeOperatorFee,proto3" json:"node_operator_fee,omitempty"`
	Providers       []*BondProvider `protobuf:"bytes,3,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *BondProviders) Reset() {
	*x = BondProviders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_type_node_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BondProviders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BondProviders) ProtoMessage() {}

// Deprecated: Use BondProviders.ProtoReflect.Descriptor instead.
func (*BondProviders) Descriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{2}
}

func (x *BondProviders) GetNodeAddress() []byte {
	if x != nil {
		return x.NodeAddress
	}
	return nil
}

func (x *BondProviders) GetNodeOperatorFee() string {
	if x != nil {
		return x.NodeOperatorFee
	}
	return ""
}

func (x *BondProviders) GetProviders() []*BondProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type MinJoinLast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastChangedHeight int64  `protobuf:"varint,1,opt,name=last_changed_height,json=lastChangedHeight,proto3" json:"last_changed_height,omitempty"`
	Version           string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MinJoinLast) Reset() {
	*x = MinJoinLast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_type_node_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinJoinLast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinJoinLast) ProtoMessage() {}

// Deprecated: Use MinJoinLast.ProtoReflect.Descriptor instead.
func (*MinJoinLast) Descriptor() ([]byte, []int) {
	return file_types_type_node_account_proto_rawDescGZIP(), []int{3}
}

func (x *MinJoinLast) GetLastChangedHeight() int64 {
	if x != nil {
		return x.LastChangedHeight
	}
	return 0
}

func (x *MinJoinLast) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_types_type_node_account_proto protoreflect.FileDescriptor

var file_types_type_node_account_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf2, 0x05, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x54, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x32, 0x0a, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x04,
	0x62, 0x6f, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x56, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xfa, 0xde, 0x1f, 0x2f,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0b, 0x62, 0x6f, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xde, 0x1f, 0x09, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x3a, 0x04, 0x80, 0xdc, 0x20, 0x00, 0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa,
	0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a,
	0x04, 0x62, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x6e,
	0x64, 0x3a, 0x04, 0x80, 0xdc, 0x20, 0x01, 0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x42, 0x6f, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x0c, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x31, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x4a, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x3a, 0x04, 0x80, 0xdc, 0x20, 0x01, 0x22, 0x5d, 0x0a, 0x0b, 0x4d, 0x69,
	0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x04, 0x80, 0xdc, 0x20, 0x01, 0x2a, 0x62, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x1a, 0x04, 0xa8, 0xa4, 0x1e, 0x01, 0x2a, 0x43, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0xa4,
	0x1e, 0x01, 0x42, 0x8d, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x42, 0x14, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74,
	0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x54, 0x79, 0x70,
	0x65, 0x73, 0xca, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xe2, 0x02, 0x11, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xc8, 0xe1, 0x1e, 0x00, 0xd8, 0xe1, 0x1e, 0x00, 0x80, 0xe2,
	0x1e, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_type_node_account_proto_rawDescOnce sync.Once
	file_types_type_node_account_proto_rawDescData = file_types_type_node_account_proto_rawDesc
)

func file_types_type_node_account_proto_rawDescGZIP() []byte {
	file_types_type_node_account_proto_rawDescOnce.Do(func() {
		file_types_type_node_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_type_node_account_proto_rawDescData)
	})
	return file_types_type_node_account_proto_rawDescData
}

var file_types_type_node_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_types_type_node_account_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_types_type_node_account_proto_goTypes = []interface{}{
	(NodeStatus)(0),          // 0: types.NodeStatus
	(NodeType)(0),            // 1: types.NodeType
	(*NodeAccount)(nil),      // 2: types.NodeAccount
	(*BondProvider)(nil),     // 3: types.BondProvider
	(*BondProviders)(nil),    // 4: types.BondProviders
	(*MinJoinLast)(nil),      // 5: types.MinJoinLast
	(*common.PubKeySet)(nil), // 6: common.PubKeySet
}
var file_types_type_node_account_proto_depIdxs = []int32{
	0, // 0: types.NodeAccount.status:type_name -> types.NodeStatus
	6, // 1: types.NodeAccount.pub_key_set:type_name -> common.PubKeySet
	1, // 2: types.NodeAccount.type:type_name -> types.NodeType
	3, // 3: types.BondProviders.providers:type_name -> types.BondProvider
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_types_type_node_account_proto_init() }
func file_types_type_node_account_proto_init() {
	if File_types_type_node_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_type_node_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_type_node_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BondProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_type_node_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BondProviders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_type_node_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinJoinLast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_type_node_account_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_type_node_account_proto_goTypes,
		DependencyIndexes: file_types_type_node_account_proto_depIdxs,
		EnumInfos:         file_types_type_node_account_proto_enumTypes,
		MessageInfos:      file_types_type_node_account_proto_msgTypes,
	}.Build()
	File_types_type_node_account_proto = out.File
	file_types_type_node_account_proto_rawDesc = nil
	file_types_type_node_account_proto_goTypes = nil
	file_types_type_node_account_proto_depIdxs = nil
}
