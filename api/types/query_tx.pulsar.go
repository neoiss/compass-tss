// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	common "github.com/mapprotocol/compass-tss/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryTxStagesRequest        protoreflect.MessageDescriptor
	fd_QueryTxStagesRequest_tx_id  protoreflect.FieldDescriptor
	fd_QueryTxStagesRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxStagesRequest = File_types_query_tx_proto.Messages().ByName("QueryTxStagesRequest")
	fd_QueryTxStagesRequest_tx_id = md_QueryTxStagesRequest.Fields().ByName("tx_id")
	fd_QueryTxStagesRequest_height = md_QueryTxStagesRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryTxStagesRequest)(nil)

type fastReflection_QueryTxStagesRequest QueryTxStagesRequest

func (x *QueryTxStagesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxStagesRequest)(x)
}

func (x *QueryTxStagesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxStagesRequest_messageType fastReflection_QueryTxStagesRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxStagesRequest_messageType{}

type fastReflection_QueryTxStagesRequest_messageType struct{}

func (x fastReflection_QueryTxStagesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxStagesRequest)(nil)
}
func (x fastReflection_QueryTxStagesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxStagesRequest)
}
func (x fastReflection_QueryTxStagesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStagesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxStagesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStagesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxStagesRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxStagesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxStagesRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTxStagesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxStagesRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTxStagesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxStagesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryTxStagesRequest_tx_id, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryTxStagesRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxStagesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		return x.TxId != ""
	case "types.QueryTxStagesRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		x.TxId = ""
	case "types.QueryTxStagesRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxStagesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryTxStagesRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryTxStagesRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryTxStagesRequest is not mutable"))
	case "types.QueryTxStagesRequest.height":
		panic(fmt.Errorf("field height of message types.QueryTxStagesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxStagesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStagesRequest.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryTxStagesRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxStagesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxStagesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxStagesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxStagesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxStagesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxStagesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStagesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStagesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStagesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStagesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTxStagesResponse                              protoreflect.MessageDescriptor
	fd_QueryTxStagesResponse_inbound_observed             protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_inbound_confirmation_counted protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_inbound_finalised            protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_swap_status                  protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_swap_finalised               protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_outbound_delay               protoreflect.FieldDescriptor
	fd_QueryTxStagesResponse_outbound_signed              protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxStagesResponse = File_types_query_tx_proto.Messages().ByName("QueryTxStagesResponse")
	fd_QueryTxStagesResponse_inbound_observed = md_QueryTxStagesResponse.Fields().ByName("inbound_observed")
	fd_QueryTxStagesResponse_inbound_confirmation_counted = md_QueryTxStagesResponse.Fields().ByName("inbound_confirmation_counted")
	fd_QueryTxStagesResponse_inbound_finalised = md_QueryTxStagesResponse.Fields().ByName("inbound_finalised")
	fd_QueryTxStagesResponse_swap_status = md_QueryTxStagesResponse.Fields().ByName("swap_status")
	fd_QueryTxStagesResponse_swap_finalised = md_QueryTxStagesResponse.Fields().ByName("swap_finalised")
	fd_QueryTxStagesResponse_outbound_delay = md_QueryTxStagesResponse.Fields().ByName("outbound_delay")
	fd_QueryTxStagesResponse_outbound_signed = md_QueryTxStagesResponse.Fields().ByName("outbound_signed")
}

var _ protoreflect.Message = (*fastReflection_QueryTxStagesResponse)(nil)

type fastReflection_QueryTxStagesResponse QueryTxStagesResponse

func (x *QueryTxStagesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxStagesResponse)(x)
}

func (x *QueryTxStagesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxStagesResponse_messageType fastReflection_QueryTxStagesResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxStagesResponse_messageType{}

type fastReflection_QueryTxStagesResponse_messageType struct{}

func (x fastReflection_QueryTxStagesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxStagesResponse)(nil)
}
func (x fastReflection_QueryTxStagesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxStagesResponse)
}
func (x fastReflection_QueryTxStagesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStagesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxStagesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStagesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxStagesResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxStagesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxStagesResponse) New() protoreflect.Message {
	return new(fastReflection_QueryTxStagesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxStagesResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryTxStagesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxStagesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundObserved != nil {
		value := protoreflect.ValueOfMessage(x.InboundObserved.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_inbound_observed, value) {
			return
		}
	}
	if x.InboundConfirmationCounted != nil {
		value := protoreflect.ValueOfMessage(x.InboundConfirmationCounted.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_inbound_confirmation_counted, value) {
			return
		}
	}
	if x.InboundFinalised != nil {
		value := protoreflect.ValueOfMessage(x.InboundFinalised.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_inbound_finalised, value) {
			return
		}
	}
	if x.SwapStatus != nil {
		value := protoreflect.ValueOfMessage(x.SwapStatus.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_swap_status, value) {
			return
		}
	}
	if x.SwapFinalised != nil {
		value := protoreflect.ValueOfMessage(x.SwapFinalised.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_swap_finalised, value) {
			return
		}
	}
	if x.OutboundDelay != nil {
		value := protoreflect.ValueOfMessage(x.OutboundDelay.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_outbound_delay, value) {
			return
		}
	}
	if x.OutboundSigned != nil {
		value := protoreflect.ValueOfMessage(x.OutboundSigned.ProtoReflect())
		if !f(fd_QueryTxStagesResponse_outbound_signed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxStagesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		return x.InboundObserved != nil
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		return x.InboundConfirmationCounted != nil
	case "types.QueryTxStagesResponse.inbound_finalised":
		return x.InboundFinalised != nil
	case "types.QueryTxStagesResponse.swap_status":
		return x.SwapStatus != nil
	case "types.QueryTxStagesResponse.swap_finalised":
		return x.SwapFinalised != nil
	case "types.QueryTxStagesResponse.outbound_delay":
		return x.OutboundDelay != nil
	case "types.QueryTxStagesResponse.outbound_signed":
		return x.OutboundSigned != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		x.InboundObserved = nil
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		x.InboundConfirmationCounted = nil
	case "types.QueryTxStagesResponse.inbound_finalised":
		x.InboundFinalised = nil
	case "types.QueryTxStagesResponse.swap_status":
		x.SwapStatus = nil
	case "types.QueryTxStagesResponse.swap_finalised":
		x.SwapFinalised = nil
	case "types.QueryTxStagesResponse.outbound_delay":
		x.OutboundDelay = nil
	case "types.QueryTxStagesResponse.outbound_signed":
		x.OutboundSigned = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxStagesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		value := x.InboundObserved
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		value := x.InboundConfirmationCounted
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_finalised":
		value := x.InboundFinalised
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_status":
		value := x.SwapStatus
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_finalised":
		value := x.SwapFinalised
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_delay":
		value := x.OutboundDelay
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_signed":
		value := x.OutboundSigned
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		x.InboundObserved = value.Message().Interface().(*InboundObservedStage)
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		x.InboundConfirmationCounted = value.Message().Interface().(*InboundConfirmationCountedStage)
	case "types.QueryTxStagesResponse.inbound_finalised":
		x.InboundFinalised = value.Message().Interface().(*InboundFinalisedStage)
	case "types.QueryTxStagesResponse.swap_status":
		x.SwapStatus = value.Message().Interface().(*SwapStatus)
	case "types.QueryTxStagesResponse.swap_finalised":
		x.SwapFinalised = value.Message().Interface().(*SwapFinalisedStage)
	case "types.QueryTxStagesResponse.outbound_delay":
		x.OutboundDelay = value.Message().Interface().(*OutboundDelayStage)
	case "types.QueryTxStagesResponse.outbound_signed":
		x.OutboundSigned = value.Message().Interface().(*OutboundSignedStage)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		if x.InboundObserved == nil {
			x.InboundObserved = new(InboundObservedStage)
		}
		return protoreflect.ValueOfMessage(x.InboundObserved.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		if x.InboundConfirmationCounted == nil {
			x.InboundConfirmationCounted = new(InboundConfirmationCountedStage)
		}
		return protoreflect.ValueOfMessage(x.InboundConfirmationCounted.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_finalised":
		if x.InboundFinalised == nil {
			x.InboundFinalised = new(InboundFinalisedStage)
		}
		return protoreflect.ValueOfMessage(x.InboundFinalised.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_status":
		if x.SwapStatus == nil {
			x.SwapStatus = new(SwapStatus)
		}
		return protoreflect.ValueOfMessage(x.SwapStatus.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_finalised":
		if x.SwapFinalised == nil {
			x.SwapFinalised = new(SwapFinalisedStage)
		}
		return protoreflect.ValueOfMessage(x.SwapFinalised.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_delay":
		if x.OutboundDelay == nil {
			x.OutboundDelay = new(OutboundDelayStage)
		}
		return protoreflect.ValueOfMessage(x.OutboundDelay.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_signed":
		if x.OutboundSigned == nil {
			x.OutboundSigned = new(OutboundSignedStage)
		}
		return protoreflect.ValueOfMessage(x.OutboundSigned.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxStagesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStagesResponse.inbound_observed":
		m := new(InboundObservedStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_confirmation_counted":
		m := new(InboundConfirmationCountedStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.inbound_finalised":
		m := new(InboundFinalisedStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_status":
		m := new(SwapStatus)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.swap_finalised":
		m := new(SwapFinalisedStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_delay":
		m := new(OutboundDelayStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStagesResponse.outbound_signed":
		m := new(OutboundSignedStage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStagesResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStagesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxStagesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxStagesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxStagesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStagesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxStagesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxStagesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxStagesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.InboundObserved != nil {
			l = options.Size(x.InboundObserved)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationCounted != nil {
			l = options.Size(x.InboundConfirmationCounted)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundFinalised != nil {
			l = options.Size(x.InboundFinalised)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SwapStatus != nil {
			l = options.Size(x.SwapStatus)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SwapFinalised != nil {
			l = options.Size(x.SwapFinalised)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OutboundDelay != nil {
			l = options.Size(x.OutboundDelay)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OutboundSigned != nil {
			l = options.Size(x.OutboundSigned)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStagesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.OutboundSigned != nil {
			encoded, err := options.Marshal(x.OutboundSigned)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.OutboundDelay != nil {
			encoded, err := options.Marshal(x.OutboundDelay)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.SwapFinalised != nil {
			encoded, err := options.Marshal(x.SwapFinalised)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.SwapStatus != nil {
			encoded, err := options.Marshal(x.SwapStatus)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.InboundFinalised != nil {
			encoded, err := options.Marshal(x.InboundFinalised)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.InboundConfirmationCounted != nil {
			encoded, err := options.Marshal(x.InboundConfirmationCounted)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.InboundObserved != nil {
			encoded, err := options.Marshal(x.InboundObserved)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStagesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStagesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStagesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundObserved", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InboundObserved == nil {
					x.InboundObserved = &InboundObservedStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InboundObserved); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationCounted", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InboundConfirmationCounted == nil {
					x.InboundConfirmationCounted = &InboundConfirmationCountedStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InboundConfirmationCounted); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundFinalised", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InboundFinalised == nil {
					x.InboundFinalised = &InboundFinalisedStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InboundFinalised); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SwapStatus", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SwapStatus == nil {
					x.SwapStatus = &SwapStatus{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SwapStatus); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SwapFinalised", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SwapFinalised == nil {
					x.SwapFinalised = &SwapFinalisedStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SwapFinalised); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelay", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OutboundDelay == nil {
					x.OutboundDelay = &OutboundDelayStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutboundDelay); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundSigned", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OutboundSigned == nil {
					x.OutboundSigned = &OutboundSignedStage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutboundSigned); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTxStatusRequest        protoreflect.MessageDescriptor
	fd_QueryTxStatusRequest_tx_id  protoreflect.FieldDescriptor
	fd_QueryTxStatusRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxStatusRequest = File_types_query_tx_proto.Messages().ByName("QueryTxStatusRequest")
	fd_QueryTxStatusRequest_tx_id = md_QueryTxStatusRequest.Fields().ByName("tx_id")
	fd_QueryTxStatusRequest_height = md_QueryTxStatusRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryTxStatusRequest)(nil)

type fastReflection_QueryTxStatusRequest QueryTxStatusRequest

func (x *QueryTxStatusRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxStatusRequest)(x)
}

func (x *QueryTxStatusRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxStatusRequest_messageType fastReflection_QueryTxStatusRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxStatusRequest_messageType{}

type fastReflection_QueryTxStatusRequest_messageType struct{}

func (x fastReflection_QueryTxStatusRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxStatusRequest)(nil)
}
func (x fastReflection_QueryTxStatusRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxStatusRequest)
}
func (x fastReflection_QueryTxStatusRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStatusRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxStatusRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStatusRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxStatusRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxStatusRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxStatusRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTxStatusRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxStatusRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTxStatusRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxStatusRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryTxStatusRequest_tx_id, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryTxStatusRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxStatusRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		return x.TxId != ""
	case "types.QueryTxStatusRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		x.TxId = ""
	case "types.QueryTxStatusRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxStatusRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryTxStatusRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryTxStatusRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryTxStatusRequest is not mutable"))
	case "types.QueryTxStatusRequest.height":
		panic(fmt.Errorf("field height of message types.QueryTxStatusRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxStatusRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStatusRequest.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryTxStatusRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxStatusRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxStatusRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxStatusRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxStatusRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxStatusRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxStatusRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStatusRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStatusRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStatusRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryTxStatusResponse_2_list)(nil)

type _QueryTxStatusResponse_2_list struct {
	list *[]*PlannedOutTx
}

func (x *_QueryTxStatusResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryTxStatusResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryTxStatusResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PlannedOutTx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryTxStatusResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PlannedOutTx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryTxStatusResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(PlannedOutTx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTxStatusResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryTxStatusResponse_2_list) NewElement() protoreflect.Value {
	v := new(PlannedOutTx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTxStatusResponse_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryTxStatusResponse_3_list)(nil)

type _QueryTxStatusResponse_3_list struct {
	list *[]*common.Tx
}

func (x *_QueryTxStatusResponse_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryTxStatusResponse_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryTxStatusResponse_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*common.Tx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryTxStatusResponse_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*common.Tx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryTxStatusResponse_3_list) AppendMutable() protoreflect.Value {
	v := new(common.Tx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTxStatusResponse_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryTxStatusResponse_3_list) NewElement() protoreflect.Value {
	v := new(common.Tx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTxStatusResponse_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryTxStatusResponse                 protoreflect.MessageDescriptor
	fd_QueryTxStatusResponse_tx              protoreflect.FieldDescriptor
	fd_QueryTxStatusResponse_planned_out_txs protoreflect.FieldDescriptor
	fd_QueryTxStatusResponse_out_txs         protoreflect.FieldDescriptor
	fd_QueryTxStatusResponse_stages          protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxStatusResponse = File_types_query_tx_proto.Messages().ByName("QueryTxStatusResponse")
	fd_QueryTxStatusResponse_tx = md_QueryTxStatusResponse.Fields().ByName("tx")
	fd_QueryTxStatusResponse_planned_out_txs = md_QueryTxStatusResponse.Fields().ByName("planned_out_txs")
	fd_QueryTxStatusResponse_out_txs = md_QueryTxStatusResponse.Fields().ByName("out_txs")
	fd_QueryTxStatusResponse_stages = md_QueryTxStatusResponse.Fields().ByName("stages")
}

var _ protoreflect.Message = (*fastReflection_QueryTxStatusResponse)(nil)

type fastReflection_QueryTxStatusResponse QueryTxStatusResponse

func (x *QueryTxStatusResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxStatusResponse)(x)
}

func (x *QueryTxStatusResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxStatusResponse_messageType fastReflection_QueryTxStatusResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxStatusResponse_messageType{}

type fastReflection_QueryTxStatusResponse_messageType struct{}

func (x fastReflection_QueryTxStatusResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxStatusResponse)(nil)
}
func (x fastReflection_QueryTxStatusResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxStatusResponse)
}
func (x fastReflection_QueryTxStatusResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStatusResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxStatusResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxStatusResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxStatusResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxStatusResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxStatusResponse) New() protoreflect.Message {
	return new(fastReflection_QueryTxStatusResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxStatusResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryTxStatusResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxStatusResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Tx != nil {
		value := protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
		if !f(fd_QueryTxStatusResponse_tx, value) {
			return
		}
	}
	if len(x.PlannedOutTxs) != 0 {
		value := protoreflect.ValueOfList(&_QueryTxStatusResponse_2_list{list: &x.PlannedOutTxs})
		if !f(fd_QueryTxStatusResponse_planned_out_txs, value) {
			return
		}
	}
	if len(x.OutTxs) != 0 {
		value := protoreflect.ValueOfList(&_QueryTxStatusResponse_3_list{list: &x.OutTxs})
		if !f(fd_QueryTxStatusResponse_out_txs, value) {
			return
		}
	}
	if x.Stages != nil {
		value := protoreflect.ValueOfMessage(x.Stages.ProtoReflect())
		if !f(fd_QueryTxStatusResponse_stages, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxStatusResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxStatusResponse.tx":
		return x.Tx != nil
	case "types.QueryTxStatusResponse.planned_out_txs":
		return len(x.PlannedOutTxs) != 0
	case "types.QueryTxStatusResponse.out_txs":
		return len(x.OutTxs) != 0
	case "types.QueryTxStatusResponse.stages":
		return x.Stages != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxStatusResponse.tx":
		x.Tx = nil
	case "types.QueryTxStatusResponse.planned_out_txs":
		x.PlannedOutTxs = nil
	case "types.QueryTxStatusResponse.out_txs":
		x.OutTxs = nil
	case "types.QueryTxStatusResponse.stages":
		x.Stages = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxStatusResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxStatusResponse.tx":
		value := x.Tx
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxStatusResponse.planned_out_txs":
		if len(x.PlannedOutTxs) == 0 {
			return protoreflect.ValueOfList(&_QueryTxStatusResponse_2_list{})
		}
		listValue := &_QueryTxStatusResponse_2_list{list: &x.PlannedOutTxs}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryTxStatusResponse.out_txs":
		if len(x.OutTxs) == 0 {
			return protoreflect.ValueOfList(&_QueryTxStatusResponse_3_list{})
		}
		listValue := &_QueryTxStatusResponse_3_list{list: &x.OutTxs}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryTxStatusResponse.stages":
		value := x.Stages
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxStatusResponse.tx":
		x.Tx = value.Message().Interface().(*common.Tx)
	case "types.QueryTxStatusResponse.planned_out_txs":
		lv := value.List()
		clv := lv.(*_QueryTxStatusResponse_2_list)
		x.PlannedOutTxs = *clv.list
	case "types.QueryTxStatusResponse.out_txs":
		lv := value.List()
		clv := lv.(*_QueryTxStatusResponse_3_list)
		x.OutTxs = *clv.list
	case "types.QueryTxStatusResponse.stages":
		x.Stages = value.Message().Interface().(*QueryTxStagesResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStatusResponse.tx":
		if x.Tx == nil {
			x.Tx = new(common.Tx)
		}
		return protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
	case "types.QueryTxStatusResponse.planned_out_txs":
		if x.PlannedOutTxs == nil {
			x.PlannedOutTxs = []*PlannedOutTx{}
		}
		value := &_QueryTxStatusResponse_2_list{list: &x.PlannedOutTxs}
		return protoreflect.ValueOfList(value)
	case "types.QueryTxStatusResponse.out_txs":
		if x.OutTxs == nil {
			x.OutTxs = []*common.Tx{}
		}
		value := &_QueryTxStatusResponse_3_list{list: &x.OutTxs}
		return protoreflect.ValueOfList(value)
	case "types.QueryTxStatusResponse.stages":
		if x.Stages == nil {
			x.Stages = new(QueryTxStagesResponse)
		}
		return protoreflect.ValueOfMessage(x.Stages.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxStatusResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxStatusResponse.tx":
		m := new(common.Tx)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxStatusResponse.planned_out_txs":
		list := []*PlannedOutTx{}
		return protoreflect.ValueOfList(&_QueryTxStatusResponse_2_list{list: &list})
	case "types.QueryTxStatusResponse.out_txs":
		list := []*common.Tx{}
		return protoreflect.ValueOfList(&_QueryTxStatusResponse_3_list{list: &list})
	case "types.QueryTxStatusResponse.stages":
		m := new(QueryTxStagesResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxStatusResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxStatusResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxStatusResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxStatusResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxStatusResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxStatusResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxStatusResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxStatusResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxStatusResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Tx != nil {
			l = options.Size(x.Tx)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.PlannedOutTxs) > 0 {
			for _, e := range x.PlannedOutTxs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OutTxs) > 0 {
			for _, e := range x.OutTxs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Stages != nil {
			l = options.Size(x.Stages)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStatusResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Stages != nil {
			encoded, err := options.Marshal(x.Stages)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.OutTxs) > 0 {
			for iNdEx := len(x.OutTxs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutTxs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.PlannedOutTxs) > 0 {
			for iNdEx := len(x.PlannedOutTxs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PlannedOutTxs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Tx != nil {
			encoded, err := options.Marshal(x.Tx)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxStatusResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStatusResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Tx == nil {
					x.Tx = &common.Tx{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tx); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PlannedOutTxs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PlannedOutTxs = append(x.PlannedOutTxs, &PlannedOutTx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PlannedOutTxs[len(x.PlannedOutTxs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutTxs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutTxs = append(x.OutTxs, &common.Tx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutTxs[len(x.OutTxs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Stages", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Stages == nil {
					x.Stages = &QueryTxStagesResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Stages); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTxRequest        protoreflect.MessageDescriptor
	fd_QueryTxRequest_tx_id  protoreflect.FieldDescriptor
	fd_QueryTxRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxRequest = File_types_query_tx_proto.Messages().ByName("QueryTxRequest")
	fd_QueryTxRequest_tx_id = md_QueryTxRequest.Fields().ByName("tx_id")
	fd_QueryTxRequest_height = md_QueryTxRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryTxRequest)(nil)

type fastReflection_QueryTxRequest QueryTxRequest

func (x *QueryTxRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxRequest)(x)
}

func (x *QueryTxRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxRequest_messageType fastReflection_QueryTxRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxRequest_messageType{}

type fastReflection_QueryTxRequest_messageType struct{}

func (x fastReflection_QueryTxRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxRequest)(nil)
}
func (x fastReflection_QueryTxRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxRequest)
}
func (x fastReflection_QueryTxRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTxRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTxRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryTxRequest_tx_id, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryTxRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxRequest.tx_id":
		return x.TxId != ""
	case "types.QueryTxRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxRequest.tx_id":
		x.TxId = ""
	case "types.QueryTxRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxRequest.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryTxRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxRequest.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryTxRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxRequest.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryTxRequest is not mutable"))
	case "types.QueryTxRequest.height":
		panic(fmt.Errorf("field height of message types.QueryTxRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxRequest.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryTxRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTxResponse                  protoreflect.MessageDescriptor
	fd_QueryTxResponse_observed_tx      protoreflect.FieldDescriptor
	fd_QueryTxResponse_consensus_height protoreflect.FieldDescriptor
	fd_QueryTxResponse_finalised_height protoreflect.FieldDescriptor
	fd_QueryTxResponse_outbound_height  protoreflect.FieldDescriptor
	fd_QueryTxResponse_keysign_metric   protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxResponse = File_types_query_tx_proto.Messages().ByName("QueryTxResponse")
	fd_QueryTxResponse_observed_tx = md_QueryTxResponse.Fields().ByName("observed_tx")
	fd_QueryTxResponse_consensus_height = md_QueryTxResponse.Fields().ByName("consensus_height")
	fd_QueryTxResponse_finalised_height = md_QueryTxResponse.Fields().ByName("finalised_height")
	fd_QueryTxResponse_outbound_height = md_QueryTxResponse.Fields().ByName("outbound_height")
	fd_QueryTxResponse_keysign_metric = md_QueryTxResponse.Fields().ByName("keysign_metric")
}

var _ protoreflect.Message = (*fastReflection_QueryTxResponse)(nil)

type fastReflection_QueryTxResponse QueryTxResponse

func (x *QueryTxResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxResponse)(x)
}

func (x *QueryTxResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxResponse_messageType fastReflection_QueryTxResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxResponse_messageType{}

type fastReflection_QueryTxResponse_messageType struct{}

func (x fastReflection_QueryTxResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxResponse)(nil)
}
func (x fastReflection_QueryTxResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxResponse)
}
func (x fastReflection_QueryTxResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxResponse) New() protoreflect.Message {
	return new(fastReflection_QueryTxResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryTxResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ObservedTx != nil {
		value := protoreflect.ValueOfMessage(x.ObservedTx.ProtoReflect())
		if !f(fd_QueryTxResponse_observed_tx, value) {
			return
		}
	}
	if x.ConsensusHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ConsensusHeight)
		if !f(fd_QueryTxResponse_consensus_height, value) {
			return
		}
	}
	if x.FinalisedHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.FinalisedHeight)
		if !f(fd_QueryTxResponse_finalised_height, value) {
			return
		}
	}
	if x.OutboundHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundHeight)
		if !f(fd_QueryTxResponse_outbound_height, value) {
			return
		}
	}
	if x.KeysignMetric != nil {
		value := protoreflect.ValueOfMessage(x.KeysignMetric.ProtoReflect())
		if !f(fd_QueryTxResponse_keysign_metric, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxResponse.observed_tx":
		return x.ObservedTx != nil
	case "types.QueryTxResponse.consensus_height":
		return x.ConsensusHeight != int64(0)
	case "types.QueryTxResponse.finalised_height":
		return x.FinalisedHeight != int64(0)
	case "types.QueryTxResponse.outbound_height":
		return x.OutboundHeight != int64(0)
	case "types.QueryTxResponse.keysign_metric":
		return x.KeysignMetric != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxResponse.observed_tx":
		x.ObservedTx = nil
	case "types.QueryTxResponse.consensus_height":
		x.ConsensusHeight = int64(0)
	case "types.QueryTxResponse.finalised_height":
		x.FinalisedHeight = int64(0)
	case "types.QueryTxResponse.outbound_height":
		x.OutboundHeight = int64(0)
	case "types.QueryTxResponse.keysign_metric":
		x.KeysignMetric = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxResponse.observed_tx":
		value := x.ObservedTx
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryTxResponse.consensus_height":
		value := x.ConsensusHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryTxResponse.finalised_height":
		value := x.FinalisedHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryTxResponse.outbound_height":
		value := x.OutboundHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryTxResponse.keysign_metric":
		value := x.KeysignMetric
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxResponse.observed_tx":
		x.ObservedTx = value.Message().Interface().(*QueryObservedTx)
	case "types.QueryTxResponse.consensus_height":
		x.ConsensusHeight = value.Int()
	case "types.QueryTxResponse.finalised_height":
		x.FinalisedHeight = value.Int()
	case "types.QueryTxResponse.outbound_height":
		x.OutboundHeight = value.Int()
	case "types.QueryTxResponse.keysign_metric":
		x.KeysignMetric = value.Message().Interface().(*TssKeysignMetric)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxResponse.observed_tx":
		if x.ObservedTx == nil {
			x.ObservedTx = new(QueryObservedTx)
		}
		return protoreflect.ValueOfMessage(x.ObservedTx.ProtoReflect())
	case "types.QueryTxResponse.keysign_metric":
		if x.KeysignMetric == nil {
			x.KeysignMetric = new(TssKeysignMetric)
		}
		return protoreflect.ValueOfMessage(x.KeysignMetric.ProtoReflect())
	case "types.QueryTxResponse.consensus_height":
		panic(fmt.Errorf("field consensus_height of message types.QueryTxResponse is not mutable"))
	case "types.QueryTxResponse.finalised_height":
		panic(fmt.Errorf("field finalised_height of message types.QueryTxResponse is not mutable"))
	case "types.QueryTxResponse.outbound_height":
		panic(fmt.Errorf("field outbound_height of message types.QueryTxResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxResponse.observed_tx":
		m := new(QueryObservedTx)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryTxResponse.consensus_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryTxResponse.finalised_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryTxResponse.outbound_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryTxResponse.keysign_metric":
		m := new(TssKeysignMetric)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxResponse"))
		}
		panic(fmt.Errorf("message types.QueryTxResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ObservedTx != nil {
			l = options.Size(x.ObservedTx)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ConsensusHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ConsensusHeight))
		}
		if x.FinalisedHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.FinalisedHeight))
		}
		if x.OutboundHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundHeight))
		}
		if x.KeysignMetric != nil {
			l = options.Size(x.KeysignMetric)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.KeysignMetric != nil {
			encoded, err := options.Marshal(x.KeysignMetric)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.OutboundHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.FinalisedHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinalisedHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.ConsensusHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ConsensusHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.ObservedTx != nil {
			encoded, err := options.Marshal(x.ObservedTx)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObservedTx", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ObservedTx == nil {
					x.ObservedTx = &QueryObservedTx{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ObservedTx); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConsensusHeight", wireType)
				}
				x.ConsensusHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ConsensusHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalisedHeight", wireType)
				}
				x.FinalisedHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinalisedHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundHeight", wireType)
				}
				x.OutboundHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeysignMetric", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.KeysignMetric == nil {
					x.KeysignMetric = &TssKeysignMetric{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.KeysignMetric); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryObservedTx_3_list)(nil)

type _QueryObservedTx_3_list struct {
	list *[]string
}

func (x *_QueryObservedTx_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryObservedTx_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryObservedTx_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryObservedTx_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryObservedTx_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryObservedTx at list field OutHashes as it is not of Message kind"))
}

func (x *_QueryObservedTx_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryObservedTx_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryObservedTx_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryObservedTx_5_list)(nil)

type _QueryObservedTx_5_list struct {
	list *[]string
}

func (x *_QueryObservedTx_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryObservedTx_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryObservedTx_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryObservedTx_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryObservedTx_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryObservedTx at list field Signers as it is not of Message kind"))
}

func (x *_QueryObservedTx_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryObservedTx_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryObservedTx_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryObservedTx                         protoreflect.MessageDescriptor
	fd_QueryObservedTx_tx                      protoreflect.FieldDescriptor
	fd_QueryObservedTx_status                  protoreflect.FieldDescriptor
	fd_QueryObservedTx_out_hashes              protoreflect.FieldDescriptor
	fd_QueryObservedTx_block_height            protoreflect.FieldDescriptor
	fd_QueryObservedTx_signers                 protoreflect.FieldDescriptor
	fd_QueryObservedTx_observed_pub_key        protoreflect.FieldDescriptor
	fd_QueryObservedTx_keysign_ms              protoreflect.FieldDescriptor
	fd_QueryObservedTx_finalise_height         protoreflect.FieldDescriptor
	fd_QueryObservedTx_aggregator              protoreflect.FieldDescriptor
	fd_QueryObservedTx_aggregator_target       protoreflect.FieldDescriptor
	fd_QueryObservedTx_aggregator_target_limit protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryObservedTx = File_types_query_tx_proto.Messages().ByName("QueryObservedTx")
	fd_QueryObservedTx_tx = md_QueryObservedTx.Fields().ByName("tx")
	fd_QueryObservedTx_status = md_QueryObservedTx.Fields().ByName("status")
	fd_QueryObservedTx_out_hashes = md_QueryObservedTx.Fields().ByName("out_hashes")
	fd_QueryObservedTx_block_height = md_QueryObservedTx.Fields().ByName("block_height")
	fd_QueryObservedTx_signers = md_QueryObservedTx.Fields().ByName("signers")
	fd_QueryObservedTx_observed_pub_key = md_QueryObservedTx.Fields().ByName("observed_pub_key")
	fd_QueryObservedTx_keysign_ms = md_QueryObservedTx.Fields().ByName("keysign_ms")
	fd_QueryObservedTx_finalise_height = md_QueryObservedTx.Fields().ByName("finalise_height")
	fd_QueryObservedTx_aggregator = md_QueryObservedTx.Fields().ByName("aggregator")
	fd_QueryObservedTx_aggregator_target = md_QueryObservedTx.Fields().ByName("aggregator_target")
	fd_QueryObservedTx_aggregator_target_limit = md_QueryObservedTx.Fields().ByName("aggregator_target_limit")
}

var _ protoreflect.Message = (*fastReflection_QueryObservedTx)(nil)

type fastReflection_QueryObservedTx QueryObservedTx

func (x *QueryObservedTx) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryObservedTx)(x)
}

func (x *QueryObservedTx) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryObservedTx_messageType fastReflection_QueryObservedTx_messageType
var _ protoreflect.MessageType = fastReflection_QueryObservedTx_messageType{}

type fastReflection_QueryObservedTx_messageType struct{}

func (x fastReflection_QueryObservedTx_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryObservedTx)(nil)
}
func (x fastReflection_QueryObservedTx_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryObservedTx)
}
func (x fastReflection_QueryObservedTx_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryObservedTx
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryObservedTx) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryObservedTx
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryObservedTx) Type() protoreflect.MessageType {
	return _fastReflection_QueryObservedTx_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryObservedTx) New() protoreflect.Message {
	return new(fastReflection_QueryObservedTx)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryObservedTx) Interface() protoreflect.ProtoMessage {
	return (*QueryObservedTx)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryObservedTx) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Tx != nil {
		value := protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
		if !f(fd_QueryObservedTx_tx, value) {
			return
		}
	}
	if x.Status != "" {
		value := protoreflect.ValueOfString(x.Status)
		if !f(fd_QueryObservedTx_status, value) {
			return
		}
	}
	if len(x.OutHashes) != 0 {
		value := protoreflect.ValueOfList(&_QueryObservedTx_3_list{list: &x.OutHashes})
		if !f(fd_QueryObservedTx_out_hashes, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_QueryObservedTx_block_height, value) {
			return
		}
	}
	if len(x.Signers) != 0 {
		value := protoreflect.ValueOfList(&_QueryObservedTx_5_list{list: &x.Signers})
		if !f(fd_QueryObservedTx_signers, value) {
			return
		}
	}
	if x.ObservedPubKey != "" {
		value := protoreflect.ValueOfString(x.ObservedPubKey)
		if !f(fd_QueryObservedTx_observed_pub_key, value) {
			return
		}
	}
	if x.KeysignMs != int64(0) {
		value := protoreflect.ValueOfInt64(x.KeysignMs)
		if !f(fd_QueryObservedTx_keysign_ms, value) {
			return
		}
	}
	if x.FinaliseHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.FinaliseHeight)
		if !f(fd_QueryObservedTx_finalise_height, value) {
			return
		}
	}
	if x.Aggregator != "" {
		value := protoreflect.ValueOfString(x.Aggregator)
		if !f(fd_QueryObservedTx_aggregator, value) {
			return
		}
	}
	if x.AggregatorTarget != "" {
		value := protoreflect.ValueOfString(x.AggregatorTarget)
		if !f(fd_QueryObservedTx_aggregator_target, value) {
			return
		}
	}
	if x.AggregatorTargetLimit != "" {
		value := protoreflect.ValueOfString(x.AggregatorTargetLimit)
		if !f(fd_QueryObservedTx_aggregator_target_limit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryObservedTx) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryObservedTx.tx":
		return x.Tx != nil
	case "types.QueryObservedTx.status":
		return x.Status != ""
	case "types.QueryObservedTx.out_hashes":
		return len(x.OutHashes) != 0
	case "types.QueryObservedTx.block_height":
		return x.BlockHeight != int64(0)
	case "types.QueryObservedTx.signers":
		return len(x.Signers) != 0
	case "types.QueryObservedTx.observed_pub_key":
		return x.ObservedPubKey != ""
	case "types.QueryObservedTx.keysign_ms":
		return x.KeysignMs != int64(0)
	case "types.QueryObservedTx.finalise_height":
		return x.FinaliseHeight != int64(0)
	case "types.QueryObservedTx.aggregator":
		return x.Aggregator != ""
	case "types.QueryObservedTx.aggregator_target":
		return x.AggregatorTarget != ""
	case "types.QueryObservedTx.aggregator_target_limit":
		return x.AggregatorTargetLimit != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTx) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryObservedTx.tx":
		x.Tx = nil
	case "types.QueryObservedTx.status":
		x.Status = ""
	case "types.QueryObservedTx.out_hashes":
		x.OutHashes = nil
	case "types.QueryObservedTx.block_height":
		x.BlockHeight = int64(0)
	case "types.QueryObservedTx.signers":
		x.Signers = nil
	case "types.QueryObservedTx.observed_pub_key":
		x.ObservedPubKey = ""
	case "types.QueryObservedTx.keysign_ms":
		x.KeysignMs = int64(0)
	case "types.QueryObservedTx.finalise_height":
		x.FinaliseHeight = int64(0)
	case "types.QueryObservedTx.aggregator":
		x.Aggregator = ""
	case "types.QueryObservedTx.aggregator_target":
		x.AggregatorTarget = ""
	case "types.QueryObservedTx.aggregator_target_limit":
		x.AggregatorTargetLimit = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryObservedTx) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryObservedTx.tx":
		value := x.Tx
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryObservedTx.status":
		value := x.Status
		return protoreflect.ValueOfString(value)
	case "types.QueryObservedTx.out_hashes":
		if len(x.OutHashes) == 0 {
			return protoreflect.ValueOfList(&_QueryObservedTx_3_list{})
		}
		listValue := &_QueryObservedTx_3_list{list: &x.OutHashes}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryObservedTx.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryObservedTx.signers":
		if len(x.Signers) == 0 {
			return protoreflect.ValueOfList(&_QueryObservedTx_5_list{})
		}
		listValue := &_QueryObservedTx_5_list{list: &x.Signers}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryObservedTx.observed_pub_key":
		value := x.ObservedPubKey
		return protoreflect.ValueOfString(value)
	case "types.QueryObservedTx.keysign_ms":
		value := x.KeysignMs
		return protoreflect.ValueOfInt64(value)
	case "types.QueryObservedTx.finalise_height":
		value := x.FinaliseHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryObservedTx.aggregator":
		value := x.Aggregator
		return protoreflect.ValueOfString(value)
	case "types.QueryObservedTx.aggregator_target":
		value := x.AggregatorTarget
		return protoreflect.ValueOfString(value)
	case "types.QueryObservedTx.aggregator_target_limit":
		value := x.AggregatorTargetLimit
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTx) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryObservedTx.tx":
		x.Tx = value.Message().Interface().(*common.Tx)
	case "types.QueryObservedTx.status":
		x.Status = value.Interface().(string)
	case "types.QueryObservedTx.out_hashes":
		lv := value.List()
		clv := lv.(*_QueryObservedTx_3_list)
		x.OutHashes = *clv.list
	case "types.QueryObservedTx.block_height":
		x.BlockHeight = value.Int()
	case "types.QueryObservedTx.signers":
		lv := value.List()
		clv := lv.(*_QueryObservedTx_5_list)
		x.Signers = *clv.list
	case "types.QueryObservedTx.observed_pub_key":
		x.ObservedPubKey = value.Interface().(string)
	case "types.QueryObservedTx.keysign_ms":
		x.KeysignMs = value.Int()
	case "types.QueryObservedTx.finalise_height":
		x.FinaliseHeight = value.Int()
	case "types.QueryObservedTx.aggregator":
		x.Aggregator = value.Interface().(string)
	case "types.QueryObservedTx.aggregator_target":
		x.AggregatorTarget = value.Interface().(string)
	case "types.QueryObservedTx.aggregator_target_limit":
		x.AggregatorTargetLimit = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTx) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryObservedTx.tx":
		if x.Tx == nil {
			x.Tx = new(common.Tx)
		}
		return protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
	case "types.QueryObservedTx.out_hashes":
		if x.OutHashes == nil {
			x.OutHashes = []string{}
		}
		value := &_QueryObservedTx_3_list{list: &x.OutHashes}
		return protoreflect.ValueOfList(value)
	case "types.QueryObservedTx.signers":
		if x.Signers == nil {
			x.Signers = []string{}
		}
		value := &_QueryObservedTx_5_list{list: &x.Signers}
		return protoreflect.ValueOfList(value)
	case "types.QueryObservedTx.status":
		panic(fmt.Errorf("field status of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.block_height":
		panic(fmt.Errorf("field block_height of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.observed_pub_key":
		panic(fmt.Errorf("field observed_pub_key of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.keysign_ms":
		panic(fmt.Errorf("field keysign_ms of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.finalise_height":
		panic(fmt.Errorf("field finalise_height of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.aggregator":
		panic(fmt.Errorf("field aggregator of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.aggregator_target":
		panic(fmt.Errorf("field aggregator_target of message types.QueryObservedTx is not mutable"))
	case "types.QueryObservedTx.aggregator_target_limit":
		panic(fmt.Errorf("field aggregator_target_limit of message types.QueryObservedTx is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryObservedTx) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryObservedTx.tx":
		m := new(common.Tx)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryObservedTx.status":
		return protoreflect.ValueOfString("")
	case "types.QueryObservedTx.out_hashes":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryObservedTx_3_list{list: &list})
	case "types.QueryObservedTx.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryObservedTx.signers":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryObservedTx_5_list{list: &list})
	case "types.QueryObservedTx.observed_pub_key":
		return protoreflect.ValueOfString("")
	case "types.QueryObservedTx.keysign_ms":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryObservedTx.finalise_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryObservedTx.aggregator":
		return protoreflect.ValueOfString("")
	case "types.QueryObservedTx.aggregator_target":
		return protoreflect.ValueOfString("")
	case "types.QueryObservedTx.aggregator_target_limit":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTx"))
		}
		panic(fmt.Errorf("message types.QueryObservedTx does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryObservedTx) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryObservedTx", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryObservedTx) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTx) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryObservedTx) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryObservedTx) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryObservedTx)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Tx != nil {
			l = options.Size(x.Tx)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Status)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OutHashes) > 0 {
			for _, s := range x.OutHashes {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Signers) > 0 {
			for _, s := range x.Signers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.ObservedPubKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeysignMs != 0 {
			n += 1 + runtime.Sov(uint64(x.KeysignMs))
		}
		if x.FinaliseHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.FinaliseHeight))
		}
		l = len(x.Aggregator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AggregatorTarget)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AggregatorTargetLimit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryObservedTx)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AggregatorTargetLimit) > 0 {
			i -= len(x.AggregatorTargetLimit)
			copy(dAtA[i:], x.AggregatorTargetLimit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AggregatorTargetLimit)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.AggregatorTarget) > 0 {
			i -= len(x.AggregatorTarget)
			copy(dAtA[i:], x.AggregatorTarget)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AggregatorTarget)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Aggregator) > 0 {
			i -= len(x.Aggregator)
			copy(dAtA[i:], x.Aggregator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Aggregator)))
			i--
			dAtA[i] = 0x4a
		}
		if x.FinaliseHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinaliseHeight))
			i--
			dAtA[i] = 0x40
		}
		if x.KeysignMs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeysignMs))
			i--
			dAtA[i] = 0x38
		}
		if len(x.ObservedPubKey) > 0 {
			i -= len(x.ObservedPubKey)
			copy(dAtA[i:], x.ObservedPubKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObservedPubKey)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Signers) > 0 {
			for iNdEx := len(x.Signers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Signers[iNdEx])
				copy(dAtA[i:], x.Signers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signers[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if len(x.OutHashes) > 0 {
			for iNdEx := len(x.OutHashes) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.OutHashes[iNdEx])
				copy(dAtA[i:], x.OutHashes[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OutHashes[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Status) > 0 {
			i -= len(x.Status)
			copy(dAtA[i:], x.Status)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Status)))
			i--
			dAtA[i] = 0x12
		}
		if x.Tx != nil {
			encoded, err := options.Marshal(x.Tx)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryObservedTx)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryObservedTx: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryObservedTx: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Tx == nil {
					x.Tx = &common.Tx{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tx); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Status = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutHashes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutHashes = append(x.OutHashes, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signers = append(x.Signers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObservedPubKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObservedPubKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeysignMs", wireType)
				}
				x.KeysignMs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeysignMs |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinaliseHeight", wireType)
				}
				x.FinaliseHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinaliseHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aggregator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Aggregator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AggregatorTarget", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AggregatorTarget = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AggregatorTargetLimit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AggregatorTargetLimit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryObservedTxVoter_4_list)(nil)

type _QueryObservedTxVoter_4_list struct {
	list *[]*QueryObservedTx
}

func (x *_QueryObservedTxVoter_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryObservedTxVoter_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryObservedTxVoter_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryObservedTx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryObservedTxVoter_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryObservedTx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryObservedTxVoter_4_list) AppendMutable() protoreflect.Value {
	v := new(QueryObservedTx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryObservedTxVoter_4_list) NewElement() protoreflect.Value {
	v := new(QueryObservedTx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryObservedTxVoter_5_list)(nil)

type _QueryObservedTxVoter_5_list struct {
	list *[]*TxOutItem
}

func (x *_QueryObservedTxVoter_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryObservedTxVoter_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryObservedTxVoter_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TxOutItem)
	(*x.list)[i] = concreteValue
}

func (x *_QueryObservedTxVoter_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TxOutItem)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryObservedTxVoter_5_list) AppendMutable() protoreflect.Value {
	v := new(TxOutItem)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryObservedTxVoter_5_list) NewElement() protoreflect.Value {
	v := new(TxOutItem)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryObservedTxVoter_6_list)(nil)

type _QueryObservedTxVoter_6_list struct {
	list *[]*common.Tx
}

func (x *_QueryObservedTxVoter_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryObservedTxVoter_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryObservedTxVoter_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*common.Tx)
	(*x.list)[i] = concreteValue
}

func (x *_QueryObservedTxVoter_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*common.Tx)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryObservedTxVoter_6_list) AppendMutable() protoreflect.Value {
	v := new(common.Tx)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryObservedTxVoter_6_list) NewElement() protoreflect.Value {
	v := new(common.Tx)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryObservedTxVoter_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryObservedTxVoter                  protoreflect.MessageDescriptor
	fd_QueryObservedTxVoter_tx_id            protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_tx               protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_height           protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_txs              protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_actions          protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_out_txs          protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_finalised_height protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_updated_vault    protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_reverted         protoreflect.FieldDescriptor
	fd_QueryObservedTxVoter_outbound_height  protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryObservedTxVoter = File_types_query_tx_proto.Messages().ByName("QueryObservedTxVoter")
	fd_QueryObservedTxVoter_tx_id = md_QueryObservedTxVoter.Fields().ByName("tx_id")
	fd_QueryObservedTxVoter_tx = md_QueryObservedTxVoter.Fields().ByName("tx")
	fd_QueryObservedTxVoter_height = md_QueryObservedTxVoter.Fields().ByName("height")
	fd_QueryObservedTxVoter_txs = md_QueryObservedTxVoter.Fields().ByName("txs")
	fd_QueryObservedTxVoter_actions = md_QueryObservedTxVoter.Fields().ByName("actions")
	fd_QueryObservedTxVoter_out_txs = md_QueryObservedTxVoter.Fields().ByName("out_txs")
	fd_QueryObservedTxVoter_finalised_height = md_QueryObservedTxVoter.Fields().ByName("finalised_height")
	fd_QueryObservedTxVoter_updated_vault = md_QueryObservedTxVoter.Fields().ByName("updated_vault")
	fd_QueryObservedTxVoter_reverted = md_QueryObservedTxVoter.Fields().ByName("reverted")
	fd_QueryObservedTxVoter_outbound_height = md_QueryObservedTxVoter.Fields().ByName("outbound_height")
}

var _ protoreflect.Message = (*fastReflection_QueryObservedTxVoter)(nil)

type fastReflection_QueryObservedTxVoter QueryObservedTxVoter

func (x *QueryObservedTxVoter) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryObservedTxVoter)(x)
}

func (x *QueryObservedTxVoter) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryObservedTxVoter_messageType fastReflection_QueryObservedTxVoter_messageType
var _ protoreflect.MessageType = fastReflection_QueryObservedTxVoter_messageType{}

type fastReflection_QueryObservedTxVoter_messageType struct{}

func (x fastReflection_QueryObservedTxVoter_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryObservedTxVoter)(nil)
}
func (x fastReflection_QueryObservedTxVoter_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryObservedTxVoter)
}
func (x fastReflection_QueryObservedTxVoter_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryObservedTxVoter
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryObservedTxVoter) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryObservedTxVoter
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryObservedTxVoter) Type() protoreflect.MessageType {
	return _fastReflection_QueryObservedTxVoter_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryObservedTxVoter) New() protoreflect.Message {
	return new(fastReflection_QueryObservedTxVoter)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryObservedTxVoter) Interface() protoreflect.ProtoMessage {
	return (*QueryObservedTxVoter)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryObservedTxVoter) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryObservedTxVoter_tx_id, value) {
			return
		}
	}
	if x.Tx != nil {
		value := protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
		if !f(fd_QueryObservedTxVoter_tx, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_QueryObservedTxVoter_height, value) {
			return
		}
	}
	if len(x.Txs) != 0 {
		value := protoreflect.ValueOfList(&_QueryObservedTxVoter_4_list{list: &x.Txs})
		if !f(fd_QueryObservedTxVoter_txs, value) {
			return
		}
	}
	if len(x.Actions) != 0 {
		value := protoreflect.ValueOfList(&_QueryObservedTxVoter_5_list{list: &x.Actions})
		if !f(fd_QueryObservedTxVoter_actions, value) {
			return
		}
	}
	if len(x.OutTxs) != 0 {
		value := protoreflect.ValueOfList(&_QueryObservedTxVoter_6_list{list: &x.OutTxs})
		if !f(fd_QueryObservedTxVoter_out_txs, value) {
			return
		}
	}
	if x.FinalisedHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.FinalisedHeight)
		if !f(fd_QueryObservedTxVoter_finalised_height, value) {
			return
		}
	}
	if x.UpdatedVault != false {
		value := protoreflect.ValueOfBool(x.UpdatedVault)
		if !f(fd_QueryObservedTxVoter_updated_vault, value) {
			return
		}
	}
	if x.Reverted != false {
		value := protoreflect.ValueOfBool(x.Reverted)
		if !f(fd_QueryObservedTxVoter_reverted, value) {
			return
		}
	}
	if x.OutboundHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundHeight)
		if !f(fd_QueryObservedTxVoter_outbound_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryObservedTxVoter) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryObservedTxVoter.tx_id":
		return x.TxId != ""
	case "types.QueryObservedTxVoter.tx":
		return x.Tx != nil
	case "types.QueryObservedTxVoter.height":
		return x.Height != int64(0)
	case "types.QueryObservedTxVoter.txs":
		return len(x.Txs) != 0
	case "types.QueryObservedTxVoter.actions":
		return len(x.Actions) != 0
	case "types.QueryObservedTxVoter.out_txs":
		return len(x.OutTxs) != 0
	case "types.QueryObservedTxVoter.finalised_height":
		return x.FinalisedHeight != int64(0)
	case "types.QueryObservedTxVoter.updated_vault":
		return x.UpdatedVault != false
	case "types.QueryObservedTxVoter.reverted":
		return x.Reverted != false
	case "types.QueryObservedTxVoter.outbound_height":
		return x.OutboundHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTxVoter) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryObservedTxVoter.tx_id":
		x.TxId = ""
	case "types.QueryObservedTxVoter.tx":
		x.Tx = nil
	case "types.QueryObservedTxVoter.height":
		x.Height = int64(0)
	case "types.QueryObservedTxVoter.txs":
		x.Txs = nil
	case "types.QueryObservedTxVoter.actions":
		x.Actions = nil
	case "types.QueryObservedTxVoter.out_txs":
		x.OutTxs = nil
	case "types.QueryObservedTxVoter.finalised_height":
		x.FinalisedHeight = int64(0)
	case "types.QueryObservedTxVoter.updated_vault":
		x.UpdatedVault = false
	case "types.QueryObservedTxVoter.reverted":
		x.Reverted = false
	case "types.QueryObservedTxVoter.outbound_height":
		x.OutboundHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryObservedTxVoter) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryObservedTxVoter.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryObservedTxVoter.tx":
		value := x.Tx
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryObservedTxVoter.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "types.QueryObservedTxVoter.txs":
		if len(x.Txs) == 0 {
			return protoreflect.ValueOfList(&_QueryObservedTxVoter_4_list{})
		}
		listValue := &_QueryObservedTxVoter_4_list{list: &x.Txs}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryObservedTxVoter.actions":
		if len(x.Actions) == 0 {
			return protoreflect.ValueOfList(&_QueryObservedTxVoter_5_list{})
		}
		listValue := &_QueryObservedTxVoter_5_list{list: &x.Actions}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryObservedTxVoter.out_txs":
		if len(x.OutTxs) == 0 {
			return protoreflect.ValueOfList(&_QueryObservedTxVoter_6_list{})
		}
		listValue := &_QueryObservedTxVoter_6_list{list: &x.OutTxs}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryObservedTxVoter.finalised_height":
		value := x.FinalisedHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryObservedTxVoter.updated_vault":
		value := x.UpdatedVault
		return protoreflect.ValueOfBool(value)
	case "types.QueryObservedTxVoter.reverted":
		value := x.Reverted
		return protoreflect.ValueOfBool(value)
	case "types.QueryObservedTxVoter.outbound_height":
		value := x.OutboundHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTxVoter) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryObservedTxVoter.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryObservedTxVoter.tx":
		x.Tx = value.Message().Interface().(*QueryObservedTx)
	case "types.QueryObservedTxVoter.height":
		x.Height = value.Int()
	case "types.QueryObservedTxVoter.txs":
		lv := value.List()
		clv := lv.(*_QueryObservedTxVoter_4_list)
		x.Txs = *clv.list
	case "types.QueryObservedTxVoter.actions":
		lv := value.List()
		clv := lv.(*_QueryObservedTxVoter_5_list)
		x.Actions = *clv.list
	case "types.QueryObservedTxVoter.out_txs":
		lv := value.List()
		clv := lv.(*_QueryObservedTxVoter_6_list)
		x.OutTxs = *clv.list
	case "types.QueryObservedTxVoter.finalised_height":
		x.FinalisedHeight = value.Int()
	case "types.QueryObservedTxVoter.updated_vault":
		x.UpdatedVault = value.Bool()
	case "types.QueryObservedTxVoter.reverted":
		x.Reverted = value.Bool()
	case "types.QueryObservedTxVoter.outbound_height":
		x.OutboundHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTxVoter) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryObservedTxVoter.tx":
		if x.Tx == nil {
			x.Tx = new(QueryObservedTx)
		}
		return protoreflect.ValueOfMessage(x.Tx.ProtoReflect())
	case "types.QueryObservedTxVoter.txs":
		if x.Txs == nil {
			x.Txs = []*QueryObservedTx{}
		}
		value := &_QueryObservedTxVoter_4_list{list: &x.Txs}
		return protoreflect.ValueOfList(value)
	case "types.QueryObservedTxVoter.actions":
		if x.Actions == nil {
			x.Actions = []*TxOutItem{}
		}
		value := &_QueryObservedTxVoter_5_list{list: &x.Actions}
		return protoreflect.ValueOfList(value)
	case "types.QueryObservedTxVoter.out_txs":
		if x.OutTxs == nil {
			x.OutTxs = []*common.Tx{}
		}
		value := &_QueryObservedTxVoter_6_list{list: &x.OutTxs}
		return protoreflect.ValueOfList(value)
	case "types.QueryObservedTxVoter.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryObservedTxVoter is not mutable"))
	case "types.QueryObservedTxVoter.height":
		panic(fmt.Errorf("field height of message types.QueryObservedTxVoter is not mutable"))
	case "types.QueryObservedTxVoter.finalised_height":
		panic(fmt.Errorf("field finalised_height of message types.QueryObservedTxVoter is not mutable"))
	case "types.QueryObservedTxVoter.updated_vault":
		panic(fmt.Errorf("field updated_vault of message types.QueryObservedTxVoter is not mutable"))
	case "types.QueryObservedTxVoter.reverted":
		panic(fmt.Errorf("field reverted of message types.QueryObservedTxVoter is not mutable"))
	case "types.QueryObservedTxVoter.outbound_height":
		panic(fmt.Errorf("field outbound_height of message types.QueryObservedTxVoter is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryObservedTxVoter) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryObservedTxVoter.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryObservedTxVoter.tx":
		m := new(QueryObservedTx)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryObservedTxVoter.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryObservedTxVoter.txs":
		list := []*QueryObservedTx{}
		return protoreflect.ValueOfList(&_QueryObservedTxVoter_4_list{list: &list})
	case "types.QueryObservedTxVoter.actions":
		list := []*TxOutItem{}
		return protoreflect.ValueOfList(&_QueryObservedTxVoter_5_list{list: &list})
	case "types.QueryObservedTxVoter.out_txs":
		list := []*common.Tx{}
		return protoreflect.ValueOfList(&_QueryObservedTxVoter_6_list{list: &list})
	case "types.QueryObservedTxVoter.finalised_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryObservedTxVoter.updated_vault":
		return protoreflect.ValueOfBool(false)
	case "types.QueryObservedTxVoter.reverted":
		return protoreflect.ValueOfBool(false)
	case "types.QueryObservedTxVoter.outbound_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryObservedTxVoter"))
		}
		panic(fmt.Errorf("message types.QueryObservedTxVoter does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryObservedTxVoter) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryObservedTxVoter", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryObservedTxVoter) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryObservedTxVoter) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryObservedTxVoter) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryObservedTxVoter) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryObservedTxVoter)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Tx != nil {
			l = options.Size(x.Tx)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if len(x.Txs) > 0 {
			for _, e := range x.Txs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Actions) > 0 {
			for _, e := range x.Actions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OutTxs) > 0 {
			for _, e := range x.OutTxs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.FinalisedHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.FinalisedHeight))
		}
		if x.UpdatedVault {
			n += 2
		}
		if x.Reverted {
			n += 2
		}
		if x.OutboundHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryObservedTxVoter)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.OutboundHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundHeight))
			i--
			dAtA[i] = 0x50
		}
		if x.Reverted {
			i--
			if x.Reverted {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x48
		}
		if x.UpdatedVault {
			i--
			if x.UpdatedVault {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.FinalisedHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinalisedHeight))
			i--
			dAtA[i] = 0x38
		}
		if len(x.OutTxs) > 0 {
			for iNdEx := len(x.OutTxs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutTxs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Actions) > 0 {
			for iNdEx := len(x.Actions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Actions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Txs) > 0 {
			for iNdEx := len(x.Txs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Txs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x18
		}
		if x.Tx != nil {
			encoded, err := options.Marshal(x.Tx)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryObservedTxVoter)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryObservedTxVoter: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryObservedTxVoter: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Tx == nil {
					x.Tx = &QueryObservedTx{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tx); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Txs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Txs = append(x.Txs, &QueryObservedTx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Txs[len(x.Txs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actions = append(x.Actions, &TxOutItem{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Actions[len(x.Actions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutTxs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutTxs = append(x.OutTxs, &common.Tx{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutTxs[len(x.OutTxs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalisedHeight", wireType)
				}
				x.FinalisedHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinalisedHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdatedVault", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdatedVault = bool(v != 0)
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reverted", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Reverted = bool(v != 0)
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundHeight", wireType)
				}
				x.OutboundHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTxVotersRequest        protoreflect.MessageDescriptor
	fd_QueryTxVotersRequest_tx_id  protoreflect.FieldDescriptor
	fd_QueryTxVotersRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_QueryTxVotersRequest = File_types_query_tx_proto.Messages().ByName("QueryTxVotersRequest")
	fd_QueryTxVotersRequest_tx_id = md_QueryTxVotersRequest.Fields().ByName("tx_id")
	fd_QueryTxVotersRequest_height = md_QueryTxVotersRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryTxVotersRequest)(nil)

type fastReflection_QueryTxVotersRequest QueryTxVotersRequest

func (x *QueryTxVotersRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTxVotersRequest)(x)
}

func (x *QueryTxVotersRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTxVotersRequest_messageType fastReflection_QueryTxVotersRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTxVotersRequest_messageType{}

type fastReflection_QueryTxVotersRequest_messageType struct{}

func (x fastReflection_QueryTxVotersRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTxVotersRequest)(nil)
}
func (x fastReflection_QueryTxVotersRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTxVotersRequest)
}
func (x fastReflection_QueryTxVotersRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxVotersRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTxVotersRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTxVotersRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTxVotersRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTxVotersRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTxVotersRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTxVotersRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTxVotersRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTxVotersRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTxVotersRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryTxVotersRequest_tx_id, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryTxVotersRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTxVotersRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		return x.TxId != ""
	case "types.QueryTxVotersRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxVotersRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		x.TxId = ""
	case "types.QueryTxVotersRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTxVotersRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryTxVotersRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxVotersRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryTxVotersRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxVotersRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryTxVotersRequest is not mutable"))
	case "types.QueryTxVotersRequest.height":
		panic(fmt.Errorf("field height of message types.QueryTxVotersRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTxVotersRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryTxVotersRequest.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryTxVotersRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryTxVotersRequest"))
		}
		panic(fmt.Errorf("message types.QueryTxVotersRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTxVotersRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryTxVotersRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTxVotersRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTxVotersRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTxVotersRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTxVotersRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTxVotersRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxVotersRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTxVotersRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxVotersRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTxVotersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PlannedOutTx            protoreflect.MessageDescriptor
	fd_PlannedOutTx_chain      protoreflect.FieldDescriptor
	fd_PlannedOutTx_to_address protoreflect.FieldDescriptor
	fd_PlannedOutTx_coin       protoreflect.FieldDescriptor
	fd_PlannedOutTx_refund     protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_PlannedOutTx = File_types_query_tx_proto.Messages().ByName("PlannedOutTx")
	fd_PlannedOutTx_chain = md_PlannedOutTx.Fields().ByName("chain")
	fd_PlannedOutTx_to_address = md_PlannedOutTx.Fields().ByName("to_address")
	fd_PlannedOutTx_coin = md_PlannedOutTx.Fields().ByName("coin")
	fd_PlannedOutTx_refund = md_PlannedOutTx.Fields().ByName("refund")
}

var _ protoreflect.Message = (*fastReflection_PlannedOutTx)(nil)

type fastReflection_PlannedOutTx PlannedOutTx

func (x *PlannedOutTx) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PlannedOutTx)(x)
}

func (x *PlannedOutTx) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PlannedOutTx_messageType fastReflection_PlannedOutTx_messageType
var _ protoreflect.MessageType = fastReflection_PlannedOutTx_messageType{}

type fastReflection_PlannedOutTx_messageType struct{}

func (x fastReflection_PlannedOutTx_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PlannedOutTx)(nil)
}
func (x fastReflection_PlannedOutTx_messageType) New() protoreflect.Message {
	return new(fastReflection_PlannedOutTx)
}
func (x fastReflection_PlannedOutTx_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PlannedOutTx
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PlannedOutTx) Descriptor() protoreflect.MessageDescriptor {
	return md_PlannedOutTx
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PlannedOutTx) Type() protoreflect.MessageType {
	return _fastReflection_PlannedOutTx_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PlannedOutTx) New() protoreflect.Message {
	return new(fastReflection_PlannedOutTx)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PlannedOutTx) Interface() protoreflect.ProtoMessage {
	return (*PlannedOutTx)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PlannedOutTx) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Chain != "" {
		value := protoreflect.ValueOfString(x.Chain)
		if !f(fd_PlannedOutTx_chain, value) {
			return
		}
	}
	if x.ToAddress != "" {
		value := protoreflect.ValueOfString(x.ToAddress)
		if !f(fd_PlannedOutTx_to_address, value) {
			return
		}
	}
	if x.Coin != nil {
		value := protoreflect.ValueOfMessage(x.Coin.ProtoReflect())
		if !f(fd_PlannedOutTx_coin, value) {
			return
		}
	}
	if x.Refund != false {
		value := protoreflect.ValueOfBool(x.Refund)
		if !f(fd_PlannedOutTx_refund, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PlannedOutTx) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.PlannedOutTx.chain":
		return x.Chain != ""
	case "types.PlannedOutTx.to_address":
		return x.ToAddress != ""
	case "types.PlannedOutTx.coin":
		return x.Coin != nil
	case "types.PlannedOutTx.refund":
		return x.Refund != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PlannedOutTx) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.PlannedOutTx.chain":
		x.Chain = ""
	case "types.PlannedOutTx.to_address":
		x.ToAddress = ""
	case "types.PlannedOutTx.coin":
		x.Coin = nil
	case "types.PlannedOutTx.refund":
		x.Refund = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PlannedOutTx) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.PlannedOutTx.chain":
		value := x.Chain
		return protoreflect.ValueOfString(value)
	case "types.PlannedOutTx.to_address":
		value := x.ToAddress
		return protoreflect.ValueOfString(value)
	case "types.PlannedOutTx.coin":
		value := x.Coin
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.PlannedOutTx.refund":
		value := x.Refund
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PlannedOutTx) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.PlannedOutTx.chain":
		x.Chain = value.Interface().(string)
	case "types.PlannedOutTx.to_address":
		x.ToAddress = value.Interface().(string)
	case "types.PlannedOutTx.coin":
		x.Coin = value.Message().Interface().(*common.Coin)
	case "types.PlannedOutTx.refund":
		x.Refund = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PlannedOutTx) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.PlannedOutTx.coin":
		if x.Coin == nil {
			x.Coin = new(common.Coin)
		}
		return protoreflect.ValueOfMessage(x.Coin.ProtoReflect())
	case "types.PlannedOutTx.chain":
		panic(fmt.Errorf("field chain of message types.PlannedOutTx is not mutable"))
	case "types.PlannedOutTx.to_address":
		panic(fmt.Errorf("field to_address of message types.PlannedOutTx is not mutable"))
	case "types.PlannedOutTx.refund":
		panic(fmt.Errorf("field refund of message types.PlannedOutTx is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PlannedOutTx) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.PlannedOutTx.chain":
		return protoreflect.ValueOfString("")
	case "types.PlannedOutTx.to_address":
		return protoreflect.ValueOfString("")
	case "types.PlannedOutTx.coin":
		m := new(common.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.PlannedOutTx.refund":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.PlannedOutTx"))
		}
		panic(fmt.Errorf("message types.PlannedOutTx does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PlannedOutTx) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.PlannedOutTx", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PlannedOutTx) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PlannedOutTx) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PlannedOutTx) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PlannedOutTx) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PlannedOutTx)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Chain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Coin != nil {
			l = options.Size(x.Coin)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Refund {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PlannedOutTx)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Refund {
			i--
			if x.Refund {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if x.Coin != nil {
			encoded, err := options.Marshal(x.Coin)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ToAddress) > 0 {
			i -= len(x.ToAddress)
			copy(dAtA[i:], x.ToAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Chain) > 0 {
			i -= len(x.Chain)
			copy(dAtA[i:], x.Chain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Chain)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PlannedOutTx)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PlannedOutTx: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PlannedOutTx: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Chain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Coin", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Coin == nil {
					x.Coin = &common.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Coin); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Refund", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Refund = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_InboundObservedStage                        protoreflect.MessageDescriptor
	fd_InboundObservedStage_started                protoreflect.FieldDescriptor
	fd_InboundObservedStage_pre_confirmation_count protoreflect.FieldDescriptor
	fd_InboundObservedStage_final_count            protoreflect.FieldDescriptor
	fd_InboundObservedStage_completed              protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_InboundObservedStage = File_types_query_tx_proto.Messages().ByName("InboundObservedStage")
	fd_InboundObservedStage_started = md_InboundObservedStage.Fields().ByName("started")
	fd_InboundObservedStage_pre_confirmation_count = md_InboundObservedStage.Fields().ByName("pre_confirmation_count")
	fd_InboundObservedStage_final_count = md_InboundObservedStage.Fields().ByName("final_count")
	fd_InboundObservedStage_completed = md_InboundObservedStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_InboundObservedStage)(nil)

type fastReflection_InboundObservedStage InboundObservedStage

func (x *InboundObservedStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InboundObservedStage)(x)
}

func (x *InboundObservedStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InboundObservedStage_messageType fastReflection_InboundObservedStage_messageType
var _ protoreflect.MessageType = fastReflection_InboundObservedStage_messageType{}

type fastReflection_InboundObservedStage_messageType struct{}

func (x fastReflection_InboundObservedStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InboundObservedStage)(nil)
}
func (x fastReflection_InboundObservedStage_messageType) New() protoreflect.Message {
	return new(fastReflection_InboundObservedStage)
}
func (x fastReflection_InboundObservedStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundObservedStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InboundObservedStage) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundObservedStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InboundObservedStage) Type() protoreflect.MessageType {
	return _fastReflection_InboundObservedStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InboundObservedStage) New() protoreflect.Message {
	return new(fastReflection_InboundObservedStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InboundObservedStage) Interface() protoreflect.ProtoMessage {
	return (*InboundObservedStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InboundObservedStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Started != false {
		value := protoreflect.ValueOfBool(x.Started)
		if !f(fd_InboundObservedStage_started, value) {
			return
		}
	}
	if x.PreConfirmationCount != int64(0) {
		value := protoreflect.ValueOfInt64(x.PreConfirmationCount)
		if !f(fd_InboundObservedStage_pre_confirmation_count, value) {
			return
		}
	}
	if x.FinalCount != int64(0) {
		value := protoreflect.ValueOfInt64(x.FinalCount)
		if !f(fd_InboundObservedStage_final_count, value) {
			return
		}
	}
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_InboundObservedStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InboundObservedStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.InboundObservedStage.started":
		return x.Started != false
	case "types.InboundObservedStage.pre_confirmation_count":
		return x.PreConfirmationCount != int64(0)
	case "types.InboundObservedStage.final_count":
		return x.FinalCount != int64(0)
	case "types.InboundObservedStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundObservedStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.InboundObservedStage.started":
		x.Started = false
	case "types.InboundObservedStage.pre_confirmation_count":
		x.PreConfirmationCount = int64(0)
	case "types.InboundObservedStage.final_count":
		x.FinalCount = int64(0)
	case "types.InboundObservedStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InboundObservedStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.InboundObservedStage.started":
		value := x.Started
		return protoreflect.ValueOfBool(value)
	case "types.InboundObservedStage.pre_confirmation_count":
		value := x.PreConfirmationCount
		return protoreflect.ValueOfInt64(value)
	case "types.InboundObservedStage.final_count":
		value := x.FinalCount
		return protoreflect.ValueOfInt64(value)
	case "types.InboundObservedStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundObservedStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.InboundObservedStage.started":
		x.Started = value.Bool()
	case "types.InboundObservedStage.pre_confirmation_count":
		x.PreConfirmationCount = value.Int()
	case "types.InboundObservedStage.final_count":
		x.FinalCount = value.Int()
	case "types.InboundObservedStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundObservedStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundObservedStage.started":
		panic(fmt.Errorf("field started of message types.InboundObservedStage is not mutable"))
	case "types.InboundObservedStage.pre_confirmation_count":
		panic(fmt.Errorf("field pre_confirmation_count of message types.InboundObservedStage is not mutable"))
	case "types.InboundObservedStage.final_count":
		panic(fmt.Errorf("field final_count of message types.InboundObservedStage is not mutable"))
	case "types.InboundObservedStage.completed":
		panic(fmt.Errorf("field completed of message types.InboundObservedStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InboundObservedStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundObservedStage.started":
		return protoreflect.ValueOfBool(false)
	case "types.InboundObservedStage.pre_confirmation_count":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundObservedStage.final_count":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundObservedStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundObservedStage"))
		}
		panic(fmt.Errorf("message types.InboundObservedStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InboundObservedStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.InboundObservedStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InboundObservedStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundObservedStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InboundObservedStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InboundObservedStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InboundObservedStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Started {
			n += 2
		}
		if x.PreConfirmationCount != 0 {
			n += 1 + runtime.Sov(uint64(x.PreConfirmationCount))
		}
		if x.FinalCount != 0 {
			n += 1 + runtime.Sov(uint64(x.FinalCount))
		}
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InboundObservedStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if x.FinalCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinalCount))
			i--
			dAtA[i] = 0x18
		}
		if x.PreConfirmationCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PreConfirmationCount))
			i--
			dAtA[i] = 0x10
		}
		if x.Started {
			i--
			if x.Started {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InboundObservedStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundObservedStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundObservedStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Started", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Started = bool(v != 0)
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreConfirmationCount", wireType)
				}
				x.PreConfirmationCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PreConfirmationCount |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalCount", wireType)
				}
				x.FinalCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinalCount |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_InboundConfirmationCountedStage                                    protoreflect.MessageDescriptor
	fd_InboundConfirmationCountedStage_counting_start_height              protoreflect.FieldDescriptor
	fd_InboundConfirmationCountedStage_chain                              protoreflect.FieldDescriptor
	fd_InboundConfirmationCountedStage_external_observed_height           protoreflect.FieldDescriptor
	fd_InboundConfirmationCountedStage_external_confirmation_delay_height protoreflect.FieldDescriptor
	fd_InboundConfirmationCountedStage_remaining_confirmation_seconds     protoreflect.FieldDescriptor
	fd_InboundConfirmationCountedStage_completed                          protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_InboundConfirmationCountedStage = File_types_query_tx_proto.Messages().ByName("InboundConfirmationCountedStage")
	fd_InboundConfirmationCountedStage_counting_start_height = md_InboundConfirmationCountedStage.Fields().ByName("counting_start_height")
	fd_InboundConfirmationCountedStage_chain = md_InboundConfirmationCountedStage.Fields().ByName("chain")
	fd_InboundConfirmationCountedStage_external_observed_height = md_InboundConfirmationCountedStage.Fields().ByName("external_observed_height")
	fd_InboundConfirmationCountedStage_external_confirmation_delay_height = md_InboundConfirmationCountedStage.Fields().ByName("external_confirmation_delay_height")
	fd_InboundConfirmationCountedStage_remaining_confirmation_seconds = md_InboundConfirmationCountedStage.Fields().ByName("remaining_confirmation_seconds")
	fd_InboundConfirmationCountedStage_completed = md_InboundConfirmationCountedStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_InboundConfirmationCountedStage)(nil)

type fastReflection_InboundConfirmationCountedStage InboundConfirmationCountedStage

func (x *InboundConfirmationCountedStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InboundConfirmationCountedStage)(x)
}

func (x *InboundConfirmationCountedStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InboundConfirmationCountedStage_messageType fastReflection_InboundConfirmationCountedStage_messageType
var _ protoreflect.MessageType = fastReflection_InboundConfirmationCountedStage_messageType{}

type fastReflection_InboundConfirmationCountedStage_messageType struct{}

func (x fastReflection_InboundConfirmationCountedStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InboundConfirmationCountedStage)(nil)
}
func (x fastReflection_InboundConfirmationCountedStage_messageType) New() protoreflect.Message {
	return new(fastReflection_InboundConfirmationCountedStage)
}
func (x fastReflection_InboundConfirmationCountedStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundConfirmationCountedStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InboundConfirmationCountedStage) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundConfirmationCountedStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InboundConfirmationCountedStage) Type() protoreflect.MessageType {
	return _fastReflection_InboundConfirmationCountedStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InboundConfirmationCountedStage) New() protoreflect.Message {
	return new(fastReflection_InboundConfirmationCountedStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InboundConfirmationCountedStage) Interface() protoreflect.ProtoMessage {
	return (*InboundConfirmationCountedStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InboundConfirmationCountedStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CountingStartHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.CountingStartHeight)
		if !f(fd_InboundConfirmationCountedStage_counting_start_height, value) {
			return
		}
	}
	if x.Chain != "" {
		value := protoreflect.ValueOfString(x.Chain)
		if !f(fd_InboundConfirmationCountedStage_chain, value) {
			return
		}
	}
	if x.ExternalObservedHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ExternalObservedHeight)
		if !f(fd_InboundConfirmationCountedStage_external_observed_height, value) {
			return
		}
	}
	if x.ExternalConfirmationDelayHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ExternalConfirmationDelayHeight)
		if !f(fd_InboundConfirmationCountedStage_external_confirmation_delay_height, value) {
			return
		}
	}
	if x.RemainingConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.RemainingConfirmationSeconds)
		if !f(fd_InboundConfirmationCountedStage_remaining_confirmation_seconds, value) {
			return
		}
	}
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_InboundConfirmationCountedStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InboundConfirmationCountedStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		return x.CountingStartHeight != int64(0)
	case "types.InboundConfirmationCountedStage.chain":
		return x.Chain != ""
	case "types.InboundConfirmationCountedStage.external_observed_height":
		return x.ExternalObservedHeight != int64(0)
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		return x.ExternalConfirmationDelayHeight != int64(0)
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		return x.RemainingConfirmationSeconds != int64(0)
	case "types.InboundConfirmationCountedStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundConfirmationCountedStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		x.CountingStartHeight = int64(0)
	case "types.InboundConfirmationCountedStage.chain":
		x.Chain = ""
	case "types.InboundConfirmationCountedStage.external_observed_height":
		x.ExternalObservedHeight = int64(0)
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		x.ExternalConfirmationDelayHeight = int64(0)
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		x.RemainingConfirmationSeconds = int64(0)
	case "types.InboundConfirmationCountedStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InboundConfirmationCountedStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		value := x.CountingStartHeight
		return protoreflect.ValueOfInt64(value)
	case "types.InboundConfirmationCountedStage.chain":
		value := x.Chain
		return protoreflect.ValueOfString(value)
	case "types.InboundConfirmationCountedStage.external_observed_height":
		value := x.ExternalObservedHeight
		return protoreflect.ValueOfInt64(value)
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		value := x.ExternalConfirmationDelayHeight
		return protoreflect.ValueOfInt64(value)
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		value := x.RemainingConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.InboundConfirmationCountedStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundConfirmationCountedStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		x.CountingStartHeight = value.Int()
	case "types.InboundConfirmationCountedStage.chain":
		x.Chain = value.Interface().(string)
	case "types.InboundConfirmationCountedStage.external_observed_height":
		x.ExternalObservedHeight = value.Int()
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		x.ExternalConfirmationDelayHeight = value.Int()
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		x.RemainingConfirmationSeconds = value.Int()
	case "types.InboundConfirmationCountedStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundConfirmationCountedStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		panic(fmt.Errorf("field counting_start_height of message types.InboundConfirmationCountedStage is not mutable"))
	case "types.InboundConfirmationCountedStage.chain":
		panic(fmt.Errorf("field chain of message types.InboundConfirmationCountedStage is not mutable"))
	case "types.InboundConfirmationCountedStage.external_observed_height":
		panic(fmt.Errorf("field external_observed_height of message types.InboundConfirmationCountedStage is not mutable"))
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		panic(fmt.Errorf("field external_confirmation_delay_height of message types.InboundConfirmationCountedStage is not mutable"))
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		panic(fmt.Errorf("field remaining_confirmation_seconds of message types.InboundConfirmationCountedStage is not mutable"))
	case "types.InboundConfirmationCountedStage.completed":
		panic(fmt.Errorf("field completed of message types.InboundConfirmationCountedStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InboundConfirmationCountedStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundConfirmationCountedStage.counting_start_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundConfirmationCountedStage.chain":
		return protoreflect.ValueOfString("")
	case "types.InboundConfirmationCountedStage.external_observed_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundConfirmationCountedStage.external_confirmation_delay_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundConfirmationCountedStage.remaining_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.InboundConfirmationCountedStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundConfirmationCountedStage"))
		}
		panic(fmt.Errorf("message types.InboundConfirmationCountedStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InboundConfirmationCountedStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.InboundConfirmationCountedStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InboundConfirmationCountedStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundConfirmationCountedStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InboundConfirmationCountedStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InboundConfirmationCountedStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InboundConfirmationCountedStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CountingStartHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.CountingStartHeight))
		}
		l = len(x.Chain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ExternalObservedHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ExternalObservedHeight))
		}
		if x.ExternalConfirmationDelayHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ExternalConfirmationDelayHeight))
		}
		if x.RemainingConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.RemainingConfirmationSeconds))
		}
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InboundConfirmationCountedStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.RemainingConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RemainingConfirmationSeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.ExternalConfirmationDelayHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExternalConfirmationDelayHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.ExternalObservedHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExternalObservedHeight))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Chain) > 0 {
			i -= len(x.Chain)
			copy(dAtA[i:], x.Chain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Chain)))
			i--
			dAtA[i] = 0x12
		}
		if x.CountingStartHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CountingStartHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InboundConfirmationCountedStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundConfirmationCountedStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundConfirmationCountedStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CountingStartHeight", wireType)
				}
				x.CountingStartHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CountingStartHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Chain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalObservedHeight", wireType)
				}
				x.ExternalObservedHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExternalObservedHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalConfirmationDelayHeight", wireType)
				}
				x.ExternalConfirmationDelayHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExternalConfirmationDelayHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemainingConfirmationSeconds", wireType)
				}
				x.RemainingConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RemainingConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_InboundFinalisedStage           protoreflect.MessageDescriptor
	fd_InboundFinalisedStage_completed protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_InboundFinalisedStage = File_types_query_tx_proto.Messages().ByName("InboundFinalisedStage")
	fd_InboundFinalisedStage_completed = md_InboundFinalisedStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_InboundFinalisedStage)(nil)

type fastReflection_InboundFinalisedStage InboundFinalisedStage

func (x *InboundFinalisedStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InboundFinalisedStage)(x)
}

func (x *InboundFinalisedStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InboundFinalisedStage_messageType fastReflection_InboundFinalisedStage_messageType
var _ protoreflect.MessageType = fastReflection_InboundFinalisedStage_messageType{}

type fastReflection_InboundFinalisedStage_messageType struct{}

func (x fastReflection_InboundFinalisedStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InboundFinalisedStage)(nil)
}
func (x fastReflection_InboundFinalisedStage_messageType) New() protoreflect.Message {
	return new(fastReflection_InboundFinalisedStage)
}
func (x fastReflection_InboundFinalisedStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundFinalisedStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InboundFinalisedStage) Descriptor() protoreflect.MessageDescriptor {
	return md_InboundFinalisedStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InboundFinalisedStage) Type() protoreflect.MessageType {
	return _fastReflection_InboundFinalisedStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InboundFinalisedStage) New() protoreflect.Message {
	return new(fastReflection_InboundFinalisedStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InboundFinalisedStage) Interface() protoreflect.ProtoMessage {
	return (*InboundFinalisedStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InboundFinalisedStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_InboundFinalisedStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InboundFinalisedStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.InboundFinalisedStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundFinalisedStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.InboundFinalisedStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InboundFinalisedStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.InboundFinalisedStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundFinalisedStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.InboundFinalisedStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundFinalisedStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundFinalisedStage.completed":
		panic(fmt.Errorf("field completed of message types.InboundFinalisedStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InboundFinalisedStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.InboundFinalisedStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.InboundFinalisedStage"))
		}
		panic(fmt.Errorf("message types.InboundFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InboundFinalisedStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.InboundFinalisedStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InboundFinalisedStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InboundFinalisedStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InboundFinalisedStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InboundFinalisedStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InboundFinalisedStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InboundFinalisedStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InboundFinalisedStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundFinalisedStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InboundFinalisedStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SwapStatus           protoreflect.MessageDescriptor
	fd_SwapStatus_pending   protoreflect.FieldDescriptor
	fd_SwapStatus_streaming protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_SwapStatus = File_types_query_tx_proto.Messages().ByName("SwapStatus")
	fd_SwapStatus_pending = md_SwapStatus.Fields().ByName("pending")
	fd_SwapStatus_streaming = md_SwapStatus.Fields().ByName("streaming")
}

var _ protoreflect.Message = (*fastReflection_SwapStatus)(nil)

type fastReflection_SwapStatus SwapStatus

func (x *SwapStatus) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SwapStatus)(x)
}

func (x *SwapStatus) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SwapStatus_messageType fastReflection_SwapStatus_messageType
var _ protoreflect.MessageType = fastReflection_SwapStatus_messageType{}

type fastReflection_SwapStatus_messageType struct{}

func (x fastReflection_SwapStatus_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SwapStatus)(nil)
}
func (x fastReflection_SwapStatus_messageType) New() protoreflect.Message {
	return new(fastReflection_SwapStatus)
}
func (x fastReflection_SwapStatus_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapStatus
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SwapStatus) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapStatus
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SwapStatus) Type() protoreflect.MessageType {
	return _fastReflection_SwapStatus_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SwapStatus) New() protoreflect.Message {
	return new(fastReflection_SwapStatus)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SwapStatus) Interface() protoreflect.ProtoMessage {
	return (*SwapStatus)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SwapStatus) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pending != false {
		value := protoreflect.ValueOfBool(x.Pending)
		if !f(fd_SwapStatus_pending, value) {
			return
		}
	}
	if x.Streaming != nil {
		value := protoreflect.ValueOfMessage(x.Streaming.ProtoReflect())
		if !f(fd_SwapStatus_streaming, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SwapStatus) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.SwapStatus.pending":
		return x.Pending != false
	case "types.SwapStatus.streaming":
		return x.Streaming != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapStatus) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.SwapStatus.pending":
		x.Pending = false
	case "types.SwapStatus.streaming":
		x.Streaming = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SwapStatus) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.SwapStatus.pending":
		value := x.Pending
		return protoreflect.ValueOfBool(value)
	case "types.SwapStatus.streaming":
		value := x.Streaming
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapStatus) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.SwapStatus.pending":
		x.Pending = value.Bool()
	case "types.SwapStatus.streaming":
		x.Streaming = value.Message().Interface().(*StreamingStatus)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapStatus) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.SwapStatus.streaming":
		if x.Streaming == nil {
			x.Streaming = new(StreamingStatus)
		}
		return protoreflect.ValueOfMessage(x.Streaming.ProtoReflect())
	case "types.SwapStatus.pending":
		panic(fmt.Errorf("field pending of message types.SwapStatus is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SwapStatus) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.SwapStatus.pending":
		return protoreflect.ValueOfBool(false)
	case "types.SwapStatus.streaming":
		m := new(StreamingStatus)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapStatus"))
		}
		panic(fmt.Errorf("message types.SwapStatus does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SwapStatus) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.SwapStatus", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SwapStatus) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapStatus) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SwapStatus) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SwapStatus) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SwapStatus)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pending {
			n += 2
		}
		if x.Streaming != nil {
			l = options.Size(x.Streaming)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SwapStatus)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Streaming != nil {
			encoded, err := options.Marshal(x.Streaming)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Pending {
			i--
			if x.Pending {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SwapStatus)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapStatus: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapStatus: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pending", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Pending = bool(v != 0)
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Streaming", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Streaming == nil {
					x.Streaming = &StreamingStatus{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Streaming); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_StreamingStatus          protoreflect.MessageDescriptor
	fd_StreamingStatus_interval protoreflect.FieldDescriptor
	fd_StreamingStatus_quantity protoreflect.FieldDescriptor
	fd_StreamingStatus_count    protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_StreamingStatus = File_types_query_tx_proto.Messages().ByName("StreamingStatus")
	fd_StreamingStatus_interval = md_StreamingStatus.Fields().ByName("interval")
	fd_StreamingStatus_quantity = md_StreamingStatus.Fields().ByName("quantity")
	fd_StreamingStatus_count = md_StreamingStatus.Fields().ByName("count")
}

var _ protoreflect.Message = (*fastReflection_StreamingStatus)(nil)

type fastReflection_StreamingStatus StreamingStatus

func (x *StreamingStatus) ProtoReflect() protoreflect.Message {
	return (*fastReflection_StreamingStatus)(x)
}

func (x *StreamingStatus) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_StreamingStatus_messageType fastReflection_StreamingStatus_messageType
var _ protoreflect.MessageType = fastReflection_StreamingStatus_messageType{}

type fastReflection_StreamingStatus_messageType struct{}

func (x fastReflection_StreamingStatus_messageType) Zero() protoreflect.Message {
	return (*fastReflection_StreamingStatus)(nil)
}
func (x fastReflection_StreamingStatus_messageType) New() protoreflect.Message {
	return new(fastReflection_StreamingStatus)
}
func (x fastReflection_StreamingStatus_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_StreamingStatus
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_StreamingStatus) Descriptor() protoreflect.MessageDescriptor {
	return md_StreamingStatus
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_StreamingStatus) Type() protoreflect.MessageType {
	return _fastReflection_StreamingStatus_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_StreamingStatus) New() protoreflect.Message {
	return new(fastReflection_StreamingStatus)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_StreamingStatus) Interface() protoreflect.ProtoMessage {
	return (*StreamingStatus)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_StreamingStatus) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Interval != int64(0) {
		value := protoreflect.ValueOfInt64(x.Interval)
		if !f(fd_StreamingStatus_interval, value) {
			return
		}
	}
	if x.Quantity != int64(0) {
		value := protoreflect.ValueOfInt64(x.Quantity)
		if !f(fd_StreamingStatus_quantity, value) {
			return
		}
	}
	if x.Count != int64(0) {
		value := protoreflect.ValueOfInt64(x.Count)
		if !f(fd_StreamingStatus_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_StreamingStatus) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.StreamingStatus.interval":
		return x.Interval != int64(0)
	case "types.StreamingStatus.quantity":
		return x.Quantity != int64(0)
	case "types.StreamingStatus.count":
		return x.Count != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StreamingStatus) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.StreamingStatus.interval":
		x.Interval = int64(0)
	case "types.StreamingStatus.quantity":
		x.Quantity = int64(0)
	case "types.StreamingStatus.count":
		x.Count = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_StreamingStatus) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.StreamingStatus.interval":
		value := x.Interval
		return protoreflect.ValueOfInt64(value)
	case "types.StreamingStatus.quantity":
		value := x.Quantity
		return protoreflect.ValueOfInt64(value)
	case "types.StreamingStatus.count":
		value := x.Count
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StreamingStatus) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.StreamingStatus.interval":
		x.Interval = value.Int()
	case "types.StreamingStatus.quantity":
		x.Quantity = value.Int()
	case "types.StreamingStatus.count":
		x.Count = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StreamingStatus) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.StreamingStatus.interval":
		panic(fmt.Errorf("field interval of message types.StreamingStatus is not mutable"))
	case "types.StreamingStatus.quantity":
		panic(fmt.Errorf("field quantity of message types.StreamingStatus is not mutable"))
	case "types.StreamingStatus.count":
		panic(fmt.Errorf("field count of message types.StreamingStatus is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_StreamingStatus) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.StreamingStatus.interval":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.StreamingStatus.quantity":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.StreamingStatus.count":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.StreamingStatus"))
		}
		panic(fmt.Errorf("message types.StreamingStatus does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_StreamingStatus) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.StreamingStatus", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_StreamingStatus) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StreamingStatus) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_StreamingStatus) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_StreamingStatus) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*StreamingStatus)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Interval != 0 {
			n += 1 + runtime.Sov(uint64(x.Interval))
		}
		if x.Quantity != 0 {
			n += 1 + runtime.Sov(uint64(x.Quantity))
		}
		if x.Count != 0 {
			n += 1 + runtime.Sov(uint64(x.Count))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*StreamingStatus)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Count != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Count))
			i--
			dAtA[i] = 0x18
		}
		if x.Quantity != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Quantity))
			i--
			dAtA[i] = 0x10
		}
		if x.Interval != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Interval))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*StreamingStatus)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StreamingStatus: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StreamingStatus: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
				}
				x.Interval = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Interval |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
				}
				x.Quantity = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Quantity |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
				}
				x.Count = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Count |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SwapFinalisedStage           protoreflect.MessageDescriptor
	fd_SwapFinalisedStage_completed protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_SwapFinalisedStage = File_types_query_tx_proto.Messages().ByName("SwapFinalisedStage")
	fd_SwapFinalisedStage_completed = md_SwapFinalisedStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_SwapFinalisedStage)(nil)

type fastReflection_SwapFinalisedStage SwapFinalisedStage

func (x *SwapFinalisedStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SwapFinalisedStage)(x)
}

func (x *SwapFinalisedStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SwapFinalisedStage_messageType fastReflection_SwapFinalisedStage_messageType
var _ protoreflect.MessageType = fastReflection_SwapFinalisedStage_messageType{}

type fastReflection_SwapFinalisedStage_messageType struct{}

func (x fastReflection_SwapFinalisedStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SwapFinalisedStage)(nil)
}
func (x fastReflection_SwapFinalisedStage_messageType) New() protoreflect.Message {
	return new(fastReflection_SwapFinalisedStage)
}
func (x fastReflection_SwapFinalisedStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapFinalisedStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SwapFinalisedStage) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapFinalisedStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SwapFinalisedStage) Type() protoreflect.MessageType {
	return _fastReflection_SwapFinalisedStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SwapFinalisedStage) New() protoreflect.Message {
	return new(fastReflection_SwapFinalisedStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SwapFinalisedStage) Interface() protoreflect.ProtoMessage {
	return (*SwapFinalisedStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SwapFinalisedStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_SwapFinalisedStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SwapFinalisedStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.SwapFinalisedStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapFinalisedStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.SwapFinalisedStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SwapFinalisedStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.SwapFinalisedStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapFinalisedStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.SwapFinalisedStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapFinalisedStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.SwapFinalisedStage.completed":
		panic(fmt.Errorf("field completed of message types.SwapFinalisedStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SwapFinalisedStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.SwapFinalisedStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.SwapFinalisedStage"))
		}
		panic(fmt.Errorf("message types.SwapFinalisedStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SwapFinalisedStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.SwapFinalisedStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SwapFinalisedStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapFinalisedStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SwapFinalisedStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SwapFinalisedStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SwapFinalisedStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SwapFinalisedStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SwapFinalisedStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapFinalisedStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapFinalisedStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_OutboundDelayStage                         protoreflect.MessageDescriptor
	fd_OutboundDelayStage_remaining_delay_blocks  protoreflect.FieldDescriptor
	fd_OutboundDelayStage_remaining_delay_seconds protoreflect.FieldDescriptor
	fd_OutboundDelayStage_completed               protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_OutboundDelayStage = File_types_query_tx_proto.Messages().ByName("OutboundDelayStage")
	fd_OutboundDelayStage_remaining_delay_blocks = md_OutboundDelayStage.Fields().ByName("remaining_delay_blocks")
	fd_OutboundDelayStage_remaining_delay_seconds = md_OutboundDelayStage.Fields().ByName("remaining_delay_seconds")
	fd_OutboundDelayStage_completed = md_OutboundDelayStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_OutboundDelayStage)(nil)

type fastReflection_OutboundDelayStage OutboundDelayStage

func (x *OutboundDelayStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutboundDelayStage)(x)
}

func (x *OutboundDelayStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutboundDelayStage_messageType fastReflection_OutboundDelayStage_messageType
var _ protoreflect.MessageType = fastReflection_OutboundDelayStage_messageType{}

type fastReflection_OutboundDelayStage_messageType struct{}

func (x fastReflection_OutboundDelayStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutboundDelayStage)(nil)
}
func (x fastReflection_OutboundDelayStage_messageType) New() protoreflect.Message {
	return new(fastReflection_OutboundDelayStage)
}
func (x fastReflection_OutboundDelayStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutboundDelayStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutboundDelayStage) Descriptor() protoreflect.MessageDescriptor {
	return md_OutboundDelayStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutboundDelayStage) Type() protoreflect.MessageType {
	return _fastReflection_OutboundDelayStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutboundDelayStage) New() protoreflect.Message {
	return new(fastReflection_OutboundDelayStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutboundDelayStage) Interface() protoreflect.ProtoMessage {
	return (*OutboundDelayStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutboundDelayStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RemainingDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.RemainingDelayBlocks)
		if !f(fd_OutboundDelayStage_remaining_delay_blocks, value) {
			return
		}
	}
	if x.RemainingDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.RemainingDelaySeconds)
		if !f(fd_OutboundDelayStage_remaining_delay_seconds, value) {
			return
		}
	}
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_OutboundDelayStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutboundDelayStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		return x.RemainingDelayBlocks != int64(0)
	case "types.OutboundDelayStage.remaining_delay_seconds":
		return x.RemainingDelaySeconds != int64(0)
	case "types.OutboundDelayStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundDelayStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		x.RemainingDelayBlocks = int64(0)
	case "types.OutboundDelayStage.remaining_delay_seconds":
		x.RemainingDelaySeconds = int64(0)
	case "types.OutboundDelayStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutboundDelayStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		value := x.RemainingDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.OutboundDelayStage.remaining_delay_seconds":
		value := x.RemainingDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.OutboundDelayStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundDelayStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		x.RemainingDelayBlocks = value.Int()
	case "types.OutboundDelayStage.remaining_delay_seconds":
		x.RemainingDelaySeconds = value.Int()
	case "types.OutboundDelayStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundDelayStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		panic(fmt.Errorf("field remaining_delay_blocks of message types.OutboundDelayStage is not mutable"))
	case "types.OutboundDelayStage.remaining_delay_seconds":
		panic(fmt.Errorf("field remaining_delay_seconds of message types.OutboundDelayStage is not mutable"))
	case "types.OutboundDelayStage.completed":
		panic(fmt.Errorf("field completed of message types.OutboundDelayStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutboundDelayStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.OutboundDelayStage.remaining_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.OutboundDelayStage.remaining_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.OutboundDelayStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundDelayStage"))
		}
		panic(fmt.Errorf("message types.OutboundDelayStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutboundDelayStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.OutboundDelayStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutboundDelayStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundDelayStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutboundDelayStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutboundDelayStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutboundDelayStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.RemainingDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.RemainingDelayBlocks))
		}
		if x.RemainingDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.RemainingDelaySeconds))
		}
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutboundDelayStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if x.RemainingDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RemainingDelaySeconds))
			i--
			dAtA[i] = 0x10
		}
		if x.RemainingDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RemainingDelayBlocks))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutboundDelayStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutboundDelayStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutboundDelayStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemainingDelayBlocks", wireType)
				}
				x.RemainingDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RemainingDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemainingDelaySeconds", wireType)
				}
				x.RemainingDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RemainingDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_OutboundSignedStage                           protoreflect.MessageDescriptor
	fd_OutboundSignedStage_scheduled_outbound_height protoreflect.FieldDescriptor
	fd_OutboundSignedStage_blocks_since_scheduled    protoreflect.FieldDescriptor
	fd_OutboundSignedStage_completed                 protoreflect.FieldDescriptor
)

func init() {
	file_types_query_tx_proto_init()
	md_OutboundSignedStage = File_types_query_tx_proto.Messages().ByName("OutboundSignedStage")
	fd_OutboundSignedStage_scheduled_outbound_height = md_OutboundSignedStage.Fields().ByName("scheduled_outbound_height")
	fd_OutboundSignedStage_blocks_since_scheduled = md_OutboundSignedStage.Fields().ByName("blocks_since_scheduled")
	fd_OutboundSignedStage_completed = md_OutboundSignedStage.Fields().ByName("completed")
}

var _ protoreflect.Message = (*fastReflection_OutboundSignedStage)(nil)

type fastReflection_OutboundSignedStage OutboundSignedStage

func (x *OutboundSignedStage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutboundSignedStage)(x)
}

func (x *OutboundSignedStage) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutboundSignedStage_messageType fastReflection_OutboundSignedStage_messageType
var _ protoreflect.MessageType = fastReflection_OutboundSignedStage_messageType{}

type fastReflection_OutboundSignedStage_messageType struct{}

func (x fastReflection_OutboundSignedStage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutboundSignedStage)(nil)
}
func (x fastReflection_OutboundSignedStage_messageType) New() protoreflect.Message {
	return new(fastReflection_OutboundSignedStage)
}
func (x fastReflection_OutboundSignedStage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutboundSignedStage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutboundSignedStage) Descriptor() protoreflect.MessageDescriptor {
	return md_OutboundSignedStage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutboundSignedStage) Type() protoreflect.MessageType {
	return _fastReflection_OutboundSignedStage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutboundSignedStage) New() protoreflect.Message {
	return new(fastReflection_OutboundSignedStage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutboundSignedStage) Interface() protoreflect.ProtoMessage {
	return (*OutboundSignedStage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutboundSignedStage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ScheduledOutboundHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ScheduledOutboundHeight)
		if !f(fd_OutboundSignedStage_scheduled_outbound_height, value) {
			return
		}
	}
	if x.BlocksSinceScheduled != nil {
		value := protoreflect.ValueOfMessage(x.BlocksSinceScheduled.ProtoReflect())
		if !f(fd_OutboundSignedStage_blocks_since_scheduled, value) {
			return
		}
	}
	if x.Completed != false {
		value := protoreflect.ValueOfBool(x.Completed)
		if !f(fd_OutboundSignedStage_completed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutboundSignedStage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.OutboundSignedStage.scheduled_outbound_height":
		return x.ScheduledOutboundHeight != int64(0)
	case "types.OutboundSignedStage.blocks_since_scheduled":
		return x.BlocksSinceScheduled != nil
	case "types.OutboundSignedStage.completed":
		return x.Completed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundSignedStage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.OutboundSignedStage.scheduled_outbound_height":
		x.ScheduledOutboundHeight = int64(0)
	case "types.OutboundSignedStage.blocks_since_scheduled":
		x.BlocksSinceScheduled = nil
	case "types.OutboundSignedStage.completed":
		x.Completed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutboundSignedStage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.OutboundSignedStage.scheduled_outbound_height":
		value := x.ScheduledOutboundHeight
		return protoreflect.ValueOfInt64(value)
	case "types.OutboundSignedStage.blocks_since_scheduled":
		value := x.BlocksSinceScheduled
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.OutboundSignedStage.completed":
		value := x.Completed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundSignedStage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.OutboundSignedStage.scheduled_outbound_height":
		x.ScheduledOutboundHeight = value.Int()
	case "types.OutboundSignedStage.blocks_since_scheduled":
		x.BlocksSinceScheduled = value.Message().Interface().(*ProtoInt64)
	case "types.OutboundSignedStage.completed":
		x.Completed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundSignedStage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.OutboundSignedStage.blocks_since_scheduled":
		if x.BlocksSinceScheduled == nil {
			x.BlocksSinceScheduled = new(ProtoInt64)
		}
		return protoreflect.ValueOfMessage(x.BlocksSinceScheduled.ProtoReflect())
	case "types.OutboundSignedStage.scheduled_outbound_height":
		panic(fmt.Errorf("field scheduled_outbound_height of message types.OutboundSignedStage is not mutable"))
	case "types.OutboundSignedStage.completed":
		panic(fmt.Errorf("field completed of message types.OutboundSignedStage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutboundSignedStage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.OutboundSignedStage.scheduled_outbound_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.OutboundSignedStage.blocks_since_scheduled":
		m := new(ProtoInt64)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.OutboundSignedStage.completed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.OutboundSignedStage"))
		}
		panic(fmt.Errorf("message types.OutboundSignedStage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutboundSignedStage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.OutboundSignedStage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutboundSignedStage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutboundSignedStage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutboundSignedStage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutboundSignedStage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutboundSignedStage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ScheduledOutboundHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ScheduledOutboundHeight))
		}
		if x.BlocksSinceScheduled != nil {
			l = options.Size(x.BlocksSinceScheduled)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Completed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutboundSignedStage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Completed {
			i--
			if x.Completed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if x.BlocksSinceScheduled != nil {
			encoded, err := options.Marshal(x.BlocksSinceScheduled)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.ScheduledOutboundHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ScheduledOutboundHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutboundSignedStage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutboundSignedStage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutboundSignedStage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ScheduledOutboundHeight", wireType)
				}
				x.ScheduledOutboundHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ScheduledOutboundHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlocksSinceScheduled", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlocksSinceScheduled == nil {
					x.BlocksSinceScheduled = &ProtoInt64{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlocksSinceScheduled); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Completed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/query_tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryTxStagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryTxStagesRequest) Reset() {
	*x = QueryTxStagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxStagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxStagesRequest) ProtoMessage() {}

// Deprecated: Use QueryTxStagesRequest.ProtoReflect.Descriptor instead.
func (*QueryTxStagesRequest) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTxStagesRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryTxStagesRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryTxStagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundObserved            *InboundObservedStage            `protobuf:"bytes,1,opt,name=inbound_observed,json=inboundObserved,proto3" json:"inbound_observed,omitempty"`
	InboundConfirmationCounted *InboundConfirmationCountedStage `protobuf:"bytes,2,opt,name=inbound_confirmation_counted,json=inboundConfirmationCounted,proto3" json:"inbound_confirmation_counted,omitempty"`
	InboundFinalised           *InboundFinalisedStage           `protobuf:"bytes,3,opt,name=inbound_finalised,json=inboundFinalised,proto3" json:"inbound_finalised,omitempty"`
	SwapStatus                 *SwapStatus                      `protobuf:"bytes,4,opt,name=swap_status,json=swapStatus,proto3" json:"swap_status,omitempty"`
	SwapFinalised              *SwapFinalisedStage              `protobuf:"bytes,5,opt,name=swap_finalised,json=swapFinalised,proto3" json:"swap_finalised,omitempty"`
	OutboundDelay              *OutboundDelayStage              `protobuf:"bytes,6,opt,name=outbound_delay,json=outboundDelay,proto3" json:"outbound_delay,omitempty"`
	OutboundSigned             *OutboundSignedStage             `protobuf:"bytes,7,opt,name=outbound_signed,json=outboundSigned,proto3" json:"outbound_signed,omitempty"`
}

func (x *QueryTxStagesResponse) Reset() {
	*x = QueryTxStagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxStagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxStagesResponse) ProtoMessage() {}

// Deprecated: Use QueryTxStagesResponse.ProtoReflect.Descriptor instead.
func (*QueryTxStagesResponse) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTxStagesResponse) GetInboundObserved() *InboundObservedStage {
	if x != nil {
		return x.InboundObserved
	}
	return nil
}

func (x *QueryTxStagesResponse) GetInboundConfirmationCounted() *InboundConfirmationCountedStage {
	if x != nil {
		return x.InboundConfirmationCounted
	}
	return nil
}

func (x *QueryTxStagesResponse) GetInboundFinalised() *InboundFinalisedStage {
	if x != nil {
		return x.InboundFinalised
	}
	return nil
}

func (x *QueryTxStagesResponse) GetSwapStatus() *SwapStatus {
	if x != nil {
		return x.SwapStatus
	}
	return nil
}

func (x *QueryTxStagesResponse) GetSwapFinalised() *SwapFinalisedStage {
	if x != nil {
		return x.SwapFinalised
	}
	return nil
}

func (x *QueryTxStagesResponse) GetOutboundDelay() *OutboundDelayStage {
	if x != nil {
		return x.OutboundDelay
	}
	return nil
}

func (x *QueryTxStagesResponse) GetOutboundSigned() *OutboundSignedStage {
	if x != nil {
		return x.OutboundSigned
	}
	return nil
}

type QueryTxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryTxStatusRequest) Reset() {
	*x = QueryTxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxStatusRequest) ProtoMessage() {}

// Deprecated: Use QueryTxStatusRequest.ProtoReflect.Descriptor instead.
func (*QueryTxStatusRequest) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{2}
}

func (x *QueryTxStatusRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryTxStatusRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryTxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx            *common.Tx             `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	PlannedOutTxs []*PlannedOutTx        `protobuf:"bytes,2,rep,name=planned_out_txs,json=plannedOutTxs,proto3" json:"planned_out_txs,omitempty"`
	OutTxs        []*common.Tx           `protobuf:"bytes,3,rep,name=out_txs,json=outTxs,proto3" json:"out_txs,omitempty"`
	Stages        *QueryTxStagesResponse `protobuf:"bytes,4,opt,name=stages,proto3" json:"stages,omitempty"`
}

func (x *QueryTxStatusResponse) Reset() {
	*x = QueryTxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxStatusResponse) ProtoMessage() {}

// Deprecated: Use QueryTxStatusResponse.ProtoReflect.Descriptor instead.
func (*QueryTxStatusResponse) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{3}
}

func (x *QueryTxStatusResponse) GetTx() *common.Tx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *QueryTxStatusResponse) GetPlannedOutTxs() []*PlannedOutTx {
	if x != nil {
		return x.PlannedOutTxs
	}
	return nil
}

func (x *QueryTxStatusResponse) GetOutTxs() []*common.Tx {
	if x != nil {
		return x.OutTxs
	}
	return nil
}

func (x *QueryTxStatusResponse) GetStages() *QueryTxStagesResponse {
	if x != nil {
		return x.Stages
	}
	return nil
}

type QueryTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryTxRequest) Reset() {
	*x = QueryTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxRequest) ProtoMessage() {}

// Deprecated: Use QueryTxRequest.ProtoReflect.Descriptor instead.
func (*QueryTxRequest) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{4}
}

func (x *QueryTxRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryTxRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObservedTx *QueryObservedTx `protobuf:"bytes,1,opt,name=observed_tx,json=observedTx,proto3" json:"observed_tx,omitempty"`
	// the thorchain height at which the inbound reached consensus
	ConsensusHeight int64 `protobuf:"varint,2,opt,name=consensus_height,json=consensusHeight,proto3" json:"consensus_height,omitempty"`
	// the thorchain height at which the outbound was finalised
	FinalisedHeight int64 `protobuf:"varint,3,opt,name=finalised_height,json=finalisedHeight,proto3" json:"finalised_height,omitempty"`
	// the thorchain height for which the outbound was scheduled
	OutboundHeight int64             `protobuf:"varint,4,opt,name=outbound_height,json=outboundHeight,proto3" json:"outbound_height,omitempty"`
	KeysignMetric  *TssKeysignMetric `protobuf:"bytes,5,opt,name=keysign_metric,json=keysignMetric,proto3" json:"keysign_metric,omitempty"`
}

func (x *QueryTxResponse) Reset() {
	*x = QueryTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxResponse) ProtoMessage() {}

// Deprecated: Use QueryTxResponse.ProtoReflect.Descriptor instead.
func (*QueryTxResponse) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{5}
}

func (x *QueryTxResponse) GetObservedTx() *QueryObservedTx {
	if x != nil {
		return x.ObservedTx
	}
	return nil
}

func (x *QueryTxResponse) GetConsensusHeight() int64 {
	if x != nil {
		return x.ConsensusHeight
	}
	return 0
}

func (x *QueryTxResponse) GetFinalisedHeight() int64 {
	if x != nil {
		return x.FinalisedHeight
	}
	return 0
}

func (x *QueryTxResponse) GetOutboundHeight() int64 {
	if x != nil {
		return x.OutboundHeight
	}
	return 0
}

func (x *QueryTxResponse) GetKeysignMetric() *TssKeysignMetric {
	if x != nil {
		return x.KeysignMetric
	}
	return nil
}

// Same as ObservedTx, but changes block_height and finalise_height (openapi spec)
type QueryObservedTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx                    *common.Tx `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Status                string     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	OutHashes             []string   `protobuf:"bytes,3,rep,name=out_hashes,json=outHashes,proto3" json:"out_hashes,omitempty"`
	BlockHeight           int64      `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Signers               []string   `protobuf:"bytes,5,rep,name=signers,proto3" json:"signers,omitempty"`
	ObservedPubKey        string     `protobuf:"bytes,6,opt,name=observed_pub_key,json=observedPubKey,proto3" json:"observed_pub_key,omitempty"`
	KeysignMs             int64      `protobuf:"varint,7,opt,name=keysign_ms,json=keysignMs,proto3" json:"keysign_ms,omitempty"`
	FinaliseHeight        int64      `protobuf:"varint,8,opt,name=finalise_height,json=finaliseHeight,proto3" json:"finalise_height,omitempty"`
	Aggregator            string     `protobuf:"bytes,9,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	AggregatorTarget      string     `protobuf:"bytes,10,opt,name=aggregator_target,json=aggregatorTarget,proto3" json:"aggregator_target,omitempty"`
	AggregatorTargetLimit string     `protobuf:"bytes,11,opt,name=aggregator_target_limit,json=aggregatorTargetLimit,proto3" json:"aggregator_target_limit,omitempty"`
}

func (x *QueryObservedTx) Reset() {
	*x = QueryObservedTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryObservedTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryObservedTx) ProtoMessage() {}

// Deprecated: Use QueryObservedTx.ProtoReflect.Descriptor instead.
func (*QueryObservedTx) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{6}
}

func (x *QueryObservedTx) GetTx() *common.Tx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *QueryObservedTx) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QueryObservedTx) GetOutHashes() []string {
	if x != nil {
		return x.OutHashes
	}
	return nil
}

func (x *QueryObservedTx) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *QueryObservedTx) GetSigners() []string {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *QueryObservedTx) GetObservedPubKey() string {
	if x != nil {
		return x.ObservedPubKey
	}
	return ""
}

func (x *QueryObservedTx) GetKeysignMs() int64 {
	if x != nil {
		return x.KeysignMs
	}
	return 0
}

func (x *QueryObservedTx) GetFinaliseHeight() int64 {
	if x != nil {
		return x.FinaliseHeight
	}
	return 0
}

func (x *QueryObservedTx) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *QueryObservedTx) GetAggregatorTarget() string {
	if x != nil {
		return x.AggregatorTarget
	}
	return ""
}

func (x *QueryObservedTx) GetAggregatorTargetLimit() string {
	if x != nil {
		return x.AggregatorTargetLimit
	}
	return ""
}

// Same as ObservedTxVoter, but changes height (openapi spec)
type QueryObservedTxVoter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId            string             `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Tx              *QueryObservedTx   `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	Height          int64              `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Txs             []*QueryObservedTx `protobuf:"bytes,4,rep,name=txs,proto3" json:"txs,omitempty"`
	Actions         []*TxOutItem       `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	OutTxs          []*common.Tx       `protobuf:"bytes,6,rep,name=out_txs,json=outTxs,proto3" json:"out_txs,omitempty"`
	FinalisedHeight int64              `protobuf:"varint,7,opt,name=finalised_height,json=finalisedHeight,proto3" json:"finalised_height,omitempty"`
	UpdatedVault    bool               `protobuf:"varint,8,opt,name=updated_vault,json=updatedVault,proto3" json:"updated_vault,omitempty"`
	Reverted        bool               `protobuf:"varint,9,opt,name=reverted,proto3" json:"reverted,omitempty"`
	OutboundHeight  int64              `protobuf:"varint,10,opt,name=outbound_height,json=outboundHeight,proto3" json:"outbound_height,omitempty"`
}

func (x *QueryObservedTxVoter) Reset() {
	*x = QueryObservedTxVoter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryObservedTxVoter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryObservedTxVoter) ProtoMessage() {}

// Deprecated: Use QueryObservedTxVoter.ProtoReflect.Descriptor instead.
func (*QueryObservedTxVoter) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{7}
}

func (x *QueryObservedTxVoter) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryObservedTxVoter) GetTx() *QueryObservedTx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *QueryObservedTxVoter) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *QueryObservedTxVoter) GetTxs() []*QueryObservedTx {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *QueryObservedTxVoter) GetActions() []*TxOutItem {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *QueryObservedTxVoter) GetOutTxs() []*common.Tx {
	if x != nil {
		return x.OutTxs
	}
	return nil
}

func (x *QueryObservedTxVoter) GetFinalisedHeight() int64 {
	if x != nil {
		return x.FinalisedHeight
	}
	return 0
}

func (x *QueryObservedTxVoter) GetUpdatedVault() bool {
	if x != nil {
		return x.UpdatedVault
	}
	return false
}

func (x *QueryObservedTxVoter) GetReverted() bool {
	if x != nil {
		return x.Reverted
	}
	return false
}

func (x *QueryObservedTxVoter) GetOutboundHeight() int64 {
	if x != nil {
		return x.OutboundHeight
	}
	return 0
}

type QueryTxVotersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryTxVotersRequest) Reset() {
	*x = QueryTxVotersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxVotersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxVotersRequest) ProtoMessage() {}

// Deprecated: Use QueryTxVotersRequest.ProtoReflect.Descriptor instead.
func (*QueryTxVotersRequest) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{8}
}

func (x *QueryTxVotersRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryTxVotersRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type PlannedOutTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     string       `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	ToAddress string       `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Coin      *common.Coin `protobuf:"bytes,3,opt,name=coin,proto3" json:"coin,omitempty"`
	// returns true if the planned transaction has a refund memo
	Refund bool `protobuf:"varint,4,opt,name=refund,proto3" json:"refund,omitempty"`
}

func (x *PlannedOutTx) Reset() {
	*x = PlannedOutTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedOutTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedOutTx) ProtoMessage() {}

// Deprecated: Use PlannedOutTx.ProtoReflect.Descriptor instead.
func (*PlannedOutTx) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{9}
}

func (x *PlannedOutTx) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *PlannedOutTx) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *PlannedOutTx) GetCoin() *common.Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *PlannedOutTx) GetRefund() bool {
	if x != nil {
		return x.Refund
	}
	return false
}

type InboundObservedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// returns true if any nodes have observed the transaction (to be deprecated in favour of counts)
	Started bool `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	// number of signers for pre-confirmation-counting observations
	PreConfirmationCount int64 `protobuf:"varint,2,opt,name=pre_confirmation_count,json=preConfirmationCount,proto3" json:"pre_confirmation_count,omitempty"`
	// number of signers for final observations, after any confirmation counting complete
	FinalCount int64 `protobuf:"varint,3,opt,name=final_count,json=finalCount,proto3" json:"final_count,omitempty"`
	// returns true if no transaction observation remains to be done
	Completed bool `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *InboundObservedStage) Reset() {
	*x = InboundObservedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundObservedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundObservedStage) ProtoMessage() {}

// Deprecated: Use InboundObservedStage.ProtoReflect.Descriptor instead.
func (*InboundObservedStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{10}
}

func (x *InboundObservedStage) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *InboundObservedStage) GetPreConfirmationCount() int64 {
	if x != nil {
		return x.PreConfirmationCount
	}
	return 0
}

func (x *InboundObservedStage) GetFinalCount() int64 {
	if x != nil {
		return x.FinalCount
	}
	return 0
}

func (x *InboundObservedStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type InboundConfirmationCountedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the THORChain block height when confirmation counting began
	CountingStartHeight int64 `protobuf:"varint,1,opt,name=counting_start_height,json=countingStartHeight,proto3" json:"counting_start_height,omitempty"`
	// the external source chain for which confirmation counting takes place
	Chain string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	// the block height on the external source chain when the transaction was observed
	ExternalObservedHeight int64 `protobuf:"varint,3,opt,name=external_observed_height,json=externalObservedHeight,proto3" json:"external_observed_height,omitempty"`
	// the block height on the external source chain when confirmation counting will be complete
	ExternalConfirmationDelayHeight int64 `protobuf:"varint,4,opt,name=external_confirmation_delay_height,json=externalConfirmationDelayHeight,proto3" json:"external_confirmation_delay_height,omitempty"`
	// the estimated remaining seconds before confirmation counting completes
	RemainingConfirmationSeconds int64 `protobuf:"varint,5,opt,name=remaining_confirmation_seconds,json=remainingConfirmationSeconds,proto3" json:"remaining_confirmation_seconds,omitempty"`
	// returns true if no transaction confirmation counting remains to be done
	Completed bool `protobuf:"varint,6,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *InboundConfirmationCountedStage) Reset() {
	*x = InboundConfirmationCountedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundConfirmationCountedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundConfirmationCountedStage) ProtoMessage() {}

// Deprecated: Use InboundConfirmationCountedStage.ProtoReflect.Descriptor instead.
func (*InboundConfirmationCountedStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{11}
}

func (x *InboundConfirmationCountedStage) GetCountingStartHeight() int64 {
	if x != nil {
		return x.CountingStartHeight
	}
	return 0
}

func (x *InboundConfirmationCountedStage) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *InboundConfirmationCountedStage) GetExternalObservedHeight() int64 {
	if x != nil {
		return x.ExternalObservedHeight
	}
	return 0
}

func (x *InboundConfirmationCountedStage) GetExternalConfirmationDelayHeight() int64 {
	if x != nil {
		return x.ExternalConfirmationDelayHeight
	}
	return 0
}

func (x *InboundConfirmationCountedStage) GetRemainingConfirmationSeconds() int64 {
	if x != nil {
		return x.RemainingConfirmationSeconds
	}
	return 0
}

func (x *InboundConfirmationCountedStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type InboundFinalisedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// returns true if the inbound transaction has been finalised (THORChain agreeing it exists)
	Completed bool `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *InboundFinalisedStage) Reset() {
	*x = InboundFinalisedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundFinalisedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundFinalisedStage) ProtoMessage() {}

// Deprecated: Use InboundFinalisedStage.ProtoReflect.Descriptor instead.
func (*InboundFinalisedStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{12}
}

func (x *InboundFinalisedStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type SwapStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// true when awaiting a swap
	Pending   bool             `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	Streaming *StreamingStatus `protobuf:"bytes,2,opt,name=streaming,proto3" json:"streaming,omitempty"`
}

func (x *SwapStatus) Reset() {
	*x = SwapStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapStatus) ProtoMessage() {}

// Deprecated: Use SwapStatus.ProtoReflect.Descriptor instead.
func (*SwapStatus) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{13}
}

func (x *SwapStatus) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *SwapStatus) GetStreaming() *StreamingStatus {
	if x != nil {
		return x.Streaming
	}
	return nil
}

type StreamingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how often each swap is made, in blocks
	Interval int64 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// the total number of swaps in a streaming swaps
	Quantity int64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// the amount of swap attempts so far
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StreamingStatus) Reset() {
	*x = StreamingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingStatus) ProtoMessage() {}

// Deprecated: Use StreamingStatus.ProtoReflect.Descriptor instead.
func (*StreamingStatus) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{14}
}

func (x *StreamingStatus) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *StreamingStatus) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *StreamingStatus) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SwapFinalisedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (to be deprecated in favor of swap_status) returns true if an inbound transaction's swap (successful or refunded) is no longer pending
	Completed bool `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *SwapFinalisedStage) Reset() {
	*x = SwapFinalisedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapFinalisedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapFinalisedStage) ProtoMessage() {}

// Deprecated: Use SwapFinalisedStage.ProtoReflect.Descriptor instead.
func (*SwapFinalisedStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{15}
}

func (x *SwapFinalisedStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type OutboundDelayStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the number of remaining THORChain blocks the outbound will be delayed
	RemainingDelayBlocks int64 `protobuf:"varint,1,opt,name=remaining_delay_blocks,json=remainingDelayBlocks,proto3" json:"remaining_delay_blocks,omitempty"`
	// the estimated remaining seconds of the outbound delay before it will be sent
	RemainingDelaySeconds int64 `protobuf:"varint,2,opt,name=remaining_delay_seconds,json=remainingDelaySeconds,proto3" json:"remaining_delay_seconds,omitempty"`
	// returns true if no transaction outbound delay remains
	Completed bool `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *OutboundDelayStage) Reset() {
	*x = OutboundDelayStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundDelayStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundDelayStage) ProtoMessage() {}

// Deprecated: Use OutboundDelayStage.ProtoReflect.Descriptor instead.
func (*OutboundDelayStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{16}
}

func (x *OutboundDelayStage) GetRemainingDelayBlocks() int64 {
	if x != nil {
		return x.RemainingDelayBlocks
	}
	return 0
}

func (x *OutboundDelayStage) GetRemainingDelaySeconds() int64 {
	if x != nil {
		return x.RemainingDelaySeconds
	}
	return 0
}

func (x *OutboundDelayStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type OutboundSignedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// THORChain height for which the external outbound is scheduled
	ScheduledOutboundHeight int64 `protobuf:"varint,1,opt,name=scheduled_outbound_height,json=scheduledOutboundHeight,proto3" json:"scheduled_outbound_height,omitempty"`
	// THORChain blocks since the scheduled outbound height
	BlocksSinceScheduled *ProtoInt64 `protobuf:"bytes,2,opt,name=blocks_since_scheduled,json=blocksSinceScheduled,proto3" json:"blocks_since_scheduled,omitempty"`
	// returns true if an external transaction has been signed and broadcast (and observed in its mempool)
	Completed bool `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *OutboundSignedStage) Reset() {
	*x = OutboundSignedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundSignedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundSignedStage) ProtoMessage() {}

// Deprecated: Use OutboundSignedStage.ProtoReflect.Descriptor instead.
func (*OutboundSignedStage) Descriptor() ([]byte, []int) {
	return file_types_query_tx_proto_rawDescGZIP(), []int{17}
}

func (x *OutboundSignedStage) GetScheduledOutboundHeight() int64 {
	if x != nil {
		return x.ScheduledOutboundHeight
	}
	return 0
}

func (x *OutboundSignedStage) GetBlocksSinceScheduled() *ProtoInt64 {
	if x != nil {
		return x.BlocksSinceScheduled
	}
	return nil
}

func (x *OutboundSignedStage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

var File_types_query_tx_proto protoreflect.FileDescriptor

var file_types_query_tx_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x69, 0x73,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x78, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xab, 0x04, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x42, 0x18, 0xc8,
	0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x10, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x1c, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x1a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x64, 0x12, 0x49, 0x0a, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x10, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x0b, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x73, 0x77, 0x61, 0x70, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x73, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x90, 0x02, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x78, 0x52, 0x02, 0x74, 0x78, 0x12, 0x3b, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x54, 0x78, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x54,
	0x78, 0x73, 0x12, 0x58, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x42,
	0x33, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x2b, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68,
	0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x78, 0x73, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x73, 0x12, 0x44, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0xc8, 0xde, 0x1f, 0x00,
	0xea, 0xde, 0x1f, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x3d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0xb2, 0x02, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x5f, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x54, 0x78, 0x42, 0x13, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x0b, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x54, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x73, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x54, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x42, 0x12, 0xea, 0xde, 0x1f, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0xd2, 0x04, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x54, 0x78, 0x12, 0x26, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x78, 0x42, 0x0a, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x02, 0x74, 0x78, 0x52, 0x02,
	0x74, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x75, 0x74, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x26, 0xea, 0xde, 0x1f, 0x22, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x5c,
	0x0a, 0x10, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0xfa, 0xde, 0x1f, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x30, 0xea, 0xde, 0x1f, 0x2c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x56, 0x0a, 0x17, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x16, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x52, 0x15, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb4, 0x04, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x54, 0x78, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x38, 0xe2, 0xde, 0x1f, 0x04, 0x54, 0x78, 0x49, 0x44, 0xfa, 0xde, 0x1f,
	0x2c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76,
	0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x49, 0x44, 0x52, 0x04, 0x74,
	0x78, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x54, 0x78, 0x42, 0x0a, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f,
	0x02, 0x74, 0x78, 0x52, 0x02, 0x74, 0x78, 0x12, 0x36, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1e, 0xea, 0xde, 0x1f, 0x1a, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x35, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x54, 0x78, 0x42, 0x0b, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x03, 0x74, 0x78,
	0x73, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x54, 0x78, 0x4f, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0f, 0xc8, 0xde, 0x1f, 0x00, 0xea,
	0xde, 0x1f, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x78,
	0x42, 0x33, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x2b, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74,
	0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x78, 0x73, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73,
	0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x43, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x54, 0x78, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xea,
	0xde, 0x1f, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x74,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x0b, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x89, 0x03, 0x0a, 0x1f, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x38,
	0x0a, 0x18, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4b, 0x0a, 0x22, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x68, 0x0a, 0x1e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x22, 0xea,
	0xde, 0x1f, 0x1e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x1c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x15,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0x69, 0x0a, 0x0a, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x86, 0x01,
	0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xea,
	0xde, 0x1f, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x53, 0x77, 0x61, 0x70, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x13,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x5f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x47, 0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0xea, 0xde, 0x1f,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x7d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x42, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02,
	0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xca, 0x02, 0x05, 0x54,
	0x79, 0x70, 0x65, 0x73, 0xe2, 0x02, 0x11, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73,
	0xc8, 0xe2, 0x1e, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_query_tx_proto_rawDescOnce sync.Once
	file_types_query_tx_proto_rawDescData = file_types_query_tx_proto_rawDesc
)

func file_types_query_tx_proto_rawDescGZIP() []byte {
	file_types_query_tx_proto_rawDescOnce.Do(func() {
		file_types_query_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_query_tx_proto_rawDescData)
	})
	return file_types_query_tx_proto_rawDescData
}

var file_types_query_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_types_query_tx_proto_goTypes = []interface{}{
	(*QueryTxStagesRequest)(nil),            // 0: types.QueryTxStagesRequest
	(*QueryTxStagesResponse)(nil),           // 1: types.QueryTxStagesResponse
	(*QueryTxStatusRequest)(nil),            // 2: types.QueryTxStatusRequest
	(*QueryTxStatusResponse)(nil),           // 3: types.QueryTxStatusResponse
	(*QueryTxRequest)(nil),                  // 4: types.QueryTxRequest
	(*QueryTxResponse)(nil),                 // 5: types.QueryTxResponse
	(*QueryObservedTx)(nil),                 // 6: types.QueryObservedTx
	(*QueryObservedTxVoter)(nil),            // 7: types.QueryObservedTxVoter
	(*QueryTxVotersRequest)(nil),            // 8: types.QueryTxVotersRequest
	(*PlannedOutTx)(nil),                    // 9: types.PlannedOutTx
	(*InboundObservedStage)(nil),            // 10: types.InboundObservedStage
	(*InboundConfirmationCountedStage)(nil), // 11: types.InboundConfirmationCountedStage
	(*InboundFinalisedStage)(nil),           // 12: types.InboundFinalisedStage
	(*SwapStatus)(nil),                      // 13: types.SwapStatus
	(*StreamingStatus)(nil),                 // 14: types.StreamingStatus
	(*SwapFinalisedStage)(nil),              // 15: types.SwapFinalisedStage
	(*OutboundDelayStage)(nil),              // 16: types.OutboundDelayStage
	(*OutboundSignedStage)(nil),             // 17: types.OutboundSignedStage
	(*common.Tx)(nil),                       // 18: common.Tx
	(*TssKeysignMetric)(nil),                // 19: types.TssKeysignMetric
	(*TxOutItem)(nil),                       // 20: types.TxOutItem
	(*common.Coin)(nil),                     // 21: common.Coin
	(*ProtoInt64)(nil),                      // 22: types.ProtoInt64
}
var file_types_query_tx_proto_depIdxs = []int32{
	10, // 0: types.QueryTxStagesResponse.inbound_observed:type_name -> types.InboundObservedStage
	11, // 1: types.QueryTxStagesResponse.inbound_confirmation_counted:type_name -> types.InboundConfirmationCountedStage
	12, // 2: types.QueryTxStagesResponse.inbound_finalised:type_name -> types.InboundFinalisedStage
	13, // 3: types.QueryTxStagesResponse.swap_status:type_name -> types.SwapStatus
	15, // 4: types.QueryTxStagesResponse.swap_finalised:type_name -> types.SwapFinalisedStage
	16, // 5: types.QueryTxStagesResponse.outbound_delay:type_name -> types.OutboundDelayStage
	17, // 6: types.QueryTxStagesResponse.outbound_signed:type_name -> types.OutboundSignedStage
	18, // 7: types.QueryTxStatusResponse.tx:type_name -> common.Tx
	9,  // 8: types.QueryTxStatusResponse.planned_out_txs:type_name -> types.PlannedOutTx
	18, // 9: types.QueryTxStatusResponse.out_txs:type_name -> common.Tx
	1,  // 10: types.QueryTxStatusResponse.stages:type_name -> types.QueryTxStagesResponse
	6,  // 11: types.QueryTxResponse.observed_tx:type_name -> types.QueryObservedTx
	19, // 12: types.QueryTxResponse.keysign_metric:type_name -> types.TssKeysignMetric
	18, // 13: types.QueryObservedTx.tx:type_name -> common.Tx
	6,  // 14: types.QueryObservedTxVoter.tx:type_name -> types.QueryObservedTx
	6,  // 15: types.QueryObservedTxVoter.txs:type_name -> types.QueryObservedTx
	20, // 16: types.QueryObservedTxVoter.actions:type_name -> types.TxOutItem
	18, // 17: types.QueryObservedTxVoter.out_txs:type_name -> common.Tx
	21, // 18: types.PlannedOutTx.coin:type_name -> common.Coin
	14, // 19: types.SwapStatus.streaming:type_name -> types.StreamingStatus
	22, // 20: types.OutboundSignedStage.blocks_since_scheduled:type_name -> types.ProtoInt64
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_types_query_tx_proto_init() }
func file_types_query_tx_proto_init() {
	if File_types_query_tx_proto != nil {
		return
	}
	file_types_query_vault_proto_init()
	file_types_type_tss_metric_proto_init()
	file_types_type_tx_out_proto_init()
	file_types_type_observed_tx_proto_init()
	file_types_misc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_query_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxStagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxStagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryObservedTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryObservedTxVoter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxVotersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedOutTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundObservedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundConfirmationCountedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundFinalisedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapFinalisedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundDelayStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundSignedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_query_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_query_tx_proto_goTypes,
		DependencyIndexes: file_types_query_tx_proto_depIdxs,
		MessageInfos:      file_types_query_tx_proto_msgTypes,
	}.Build()
	File_types_query_tx_proto = out.File
	file_types_query_tx_proto_rawDesc = nil
	file_types_query_tx_proto_goTypes = nil
	file_types_query_tx_proto_depIdxs = nil
}
