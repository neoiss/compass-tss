// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryStreamingSwapRequest        protoreflect.MessageDescriptor
	fd_QueryStreamingSwapRequest_tx_id  protoreflect.FieldDescriptor
	fd_QueryStreamingSwapRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_streaming_swap_proto_init()
	md_QueryStreamingSwapRequest = File_types_query_streaming_swap_proto.Messages().ByName("QueryStreamingSwapRequest")
	fd_QueryStreamingSwapRequest_tx_id = md_QueryStreamingSwapRequest.Fields().ByName("tx_id")
	fd_QueryStreamingSwapRequest_height = md_QueryStreamingSwapRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryStreamingSwapRequest)(nil)

type fastReflection_QueryStreamingSwapRequest QueryStreamingSwapRequest

func (x *QueryStreamingSwapRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapRequest)(x)
}

func (x *QueryStreamingSwapRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_streaming_swap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryStreamingSwapRequest_messageType fastReflection_QueryStreamingSwapRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryStreamingSwapRequest_messageType{}

type fastReflection_QueryStreamingSwapRequest_messageType struct{}

func (x fastReflection_QueryStreamingSwapRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapRequest)(nil)
}
func (x fastReflection_QueryStreamingSwapRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapRequest)
}
func (x fastReflection_QueryStreamingSwapRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryStreamingSwapRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryStreamingSwapRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryStreamingSwapRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryStreamingSwapRequest) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryStreamingSwapRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryStreamingSwapRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryStreamingSwapRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryStreamingSwapRequest_tx_id, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryStreamingSwapRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryStreamingSwapRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		return x.TxId != ""
	case "types.QueryStreamingSwapRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		x.TxId = ""
	case "types.QueryStreamingSwapRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryStreamingSwapRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryStreamingSwapRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryStreamingSwapRequest is not mutable"))
	case "types.QueryStreamingSwapRequest.height":
		panic(fmt.Errorf("field height of message types.QueryStreamingSwapRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryStreamingSwapRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapRequest.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryStreamingSwapRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryStreamingSwapRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryStreamingSwapRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryStreamingSwapRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryStreamingSwapRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryStreamingSwapRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryStreamingSwapResponse_13_list)(nil)

type _QueryStreamingSwapResponse_13_list struct {
	list *[]int64
}

func (x *_QueryStreamingSwapResponse_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryStreamingSwapResponse_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfInt64((*x.list)[i])
}

func (x *_QueryStreamingSwapResponse_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Int()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryStreamingSwapResponse_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Int()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryStreamingSwapResponse_13_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryStreamingSwapResponse at list field FailedSwaps as it is not of Message kind"))
}

func (x *_QueryStreamingSwapResponse_13_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryStreamingSwapResponse_13_list) NewElement() protoreflect.Value {
	v := int64(0)
	return protoreflect.ValueOfInt64(v)
}

func (x *_QueryStreamingSwapResponse_13_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryStreamingSwapResponse_14_list)(nil)

type _QueryStreamingSwapResponse_14_list struct {
	list *[]string
}

func (x *_QueryStreamingSwapResponse_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryStreamingSwapResponse_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryStreamingSwapResponse_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryStreamingSwapResponse_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryStreamingSwapResponse_14_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryStreamingSwapResponse at list field FailedSwapReasons as it is not of Message kind"))
}

func (x *_QueryStreamingSwapResponse_14_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryStreamingSwapResponse_14_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryStreamingSwapResponse_14_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryStreamingSwapResponse                     protoreflect.MessageDescriptor
	fd_QueryStreamingSwapResponse_tx_id               protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_interval            protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_quantity            protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_count               protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_last_height         protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_trade_target        protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_source_asset        protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_target_asset        protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_destination         protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_deposit             protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_in                  protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_out                 protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_failed_swaps        protoreflect.FieldDescriptor
	fd_QueryStreamingSwapResponse_failed_swap_reasons protoreflect.FieldDescriptor
)

func init() {
	file_types_query_streaming_swap_proto_init()
	md_QueryStreamingSwapResponse = File_types_query_streaming_swap_proto.Messages().ByName("QueryStreamingSwapResponse")
	fd_QueryStreamingSwapResponse_tx_id = md_QueryStreamingSwapResponse.Fields().ByName("tx_id")
	fd_QueryStreamingSwapResponse_interval = md_QueryStreamingSwapResponse.Fields().ByName("interval")
	fd_QueryStreamingSwapResponse_quantity = md_QueryStreamingSwapResponse.Fields().ByName("quantity")
	fd_QueryStreamingSwapResponse_count = md_QueryStreamingSwapResponse.Fields().ByName("count")
	fd_QueryStreamingSwapResponse_last_height = md_QueryStreamingSwapResponse.Fields().ByName("last_height")
	fd_QueryStreamingSwapResponse_trade_target = md_QueryStreamingSwapResponse.Fields().ByName("trade_target")
	fd_QueryStreamingSwapResponse_source_asset = md_QueryStreamingSwapResponse.Fields().ByName("source_asset")
	fd_QueryStreamingSwapResponse_target_asset = md_QueryStreamingSwapResponse.Fields().ByName("target_asset")
	fd_QueryStreamingSwapResponse_destination = md_QueryStreamingSwapResponse.Fields().ByName("destination")
	fd_QueryStreamingSwapResponse_deposit = md_QueryStreamingSwapResponse.Fields().ByName("deposit")
	fd_QueryStreamingSwapResponse_in = md_QueryStreamingSwapResponse.Fields().ByName("in")
	fd_QueryStreamingSwapResponse_out = md_QueryStreamingSwapResponse.Fields().ByName("out")
	fd_QueryStreamingSwapResponse_failed_swaps = md_QueryStreamingSwapResponse.Fields().ByName("failed_swaps")
	fd_QueryStreamingSwapResponse_failed_swap_reasons = md_QueryStreamingSwapResponse.Fields().ByName("failed_swap_reasons")
}

var _ protoreflect.Message = (*fastReflection_QueryStreamingSwapResponse)(nil)

type fastReflection_QueryStreamingSwapResponse QueryStreamingSwapResponse

func (x *QueryStreamingSwapResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapResponse)(x)
}

func (x *QueryStreamingSwapResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_streaming_swap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryStreamingSwapResponse_messageType fastReflection_QueryStreamingSwapResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryStreamingSwapResponse_messageType{}

type fastReflection_QueryStreamingSwapResponse_messageType struct{}

func (x fastReflection_QueryStreamingSwapResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapResponse)(nil)
}
func (x fastReflection_QueryStreamingSwapResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapResponse)
}
func (x fastReflection_QueryStreamingSwapResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryStreamingSwapResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryStreamingSwapResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryStreamingSwapResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryStreamingSwapResponse) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryStreamingSwapResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryStreamingSwapResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryStreamingSwapResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxId != "" {
		value := protoreflect.ValueOfString(x.TxId)
		if !f(fd_QueryStreamingSwapResponse_tx_id, value) {
			return
		}
	}
	if x.Interval != int64(0) {
		value := protoreflect.ValueOfInt64(x.Interval)
		if !f(fd_QueryStreamingSwapResponse_interval, value) {
			return
		}
	}
	if x.Quantity != int64(0) {
		value := protoreflect.ValueOfInt64(x.Quantity)
		if !f(fd_QueryStreamingSwapResponse_quantity, value) {
			return
		}
	}
	if x.Count != int64(0) {
		value := protoreflect.ValueOfInt64(x.Count)
		if !f(fd_QueryStreamingSwapResponse_count, value) {
			return
		}
	}
	if x.LastHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastHeight)
		if !f(fd_QueryStreamingSwapResponse_last_height, value) {
			return
		}
	}
	if x.TradeTarget != "" {
		value := protoreflect.ValueOfString(x.TradeTarget)
		if !f(fd_QueryStreamingSwapResponse_trade_target, value) {
			return
		}
	}
	if x.SourceAsset != "" {
		value := protoreflect.ValueOfString(x.SourceAsset)
		if !f(fd_QueryStreamingSwapResponse_source_asset, value) {
			return
		}
	}
	if x.TargetAsset != "" {
		value := protoreflect.ValueOfString(x.TargetAsset)
		if !f(fd_QueryStreamingSwapResponse_target_asset, value) {
			return
		}
	}
	if x.Destination != "" {
		value := protoreflect.ValueOfString(x.Destination)
		if !f(fd_QueryStreamingSwapResponse_destination, value) {
			return
		}
	}
	if x.Deposit != "" {
		value := protoreflect.ValueOfString(x.Deposit)
		if !f(fd_QueryStreamingSwapResponse_deposit, value) {
			return
		}
	}
	if x.In != "" {
		value := protoreflect.ValueOfString(x.In)
		if !f(fd_QueryStreamingSwapResponse_in, value) {
			return
		}
	}
	if x.Out != "" {
		value := protoreflect.ValueOfString(x.Out)
		if !f(fd_QueryStreamingSwapResponse_out, value) {
			return
		}
	}
	if len(x.FailedSwaps) != 0 {
		value := protoreflect.ValueOfList(&_QueryStreamingSwapResponse_13_list{list: &x.FailedSwaps})
		if !f(fd_QueryStreamingSwapResponse_failed_swaps, value) {
			return
		}
	}
	if len(x.FailedSwapReasons) != 0 {
		value := protoreflect.ValueOfList(&_QueryStreamingSwapResponse_14_list{list: &x.FailedSwapReasons})
		if !f(fd_QueryStreamingSwapResponse_failed_swap_reasons, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryStreamingSwapResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryStreamingSwapResponse.tx_id":
		return x.TxId != ""
	case "types.QueryStreamingSwapResponse.interval":
		return x.Interval != int64(0)
	case "types.QueryStreamingSwapResponse.quantity":
		return x.Quantity != int64(0)
	case "types.QueryStreamingSwapResponse.count":
		return x.Count != int64(0)
	case "types.QueryStreamingSwapResponse.last_height":
		return x.LastHeight != int64(0)
	case "types.QueryStreamingSwapResponse.trade_target":
		return x.TradeTarget != ""
	case "types.QueryStreamingSwapResponse.source_asset":
		return x.SourceAsset != ""
	case "types.QueryStreamingSwapResponse.target_asset":
		return x.TargetAsset != ""
	case "types.QueryStreamingSwapResponse.destination":
		return x.Destination != ""
	case "types.QueryStreamingSwapResponse.deposit":
		return x.Deposit != ""
	case "types.QueryStreamingSwapResponse.in":
		return x.In != ""
	case "types.QueryStreamingSwapResponse.out":
		return x.Out != ""
	case "types.QueryStreamingSwapResponse.failed_swaps":
		return len(x.FailedSwaps) != 0
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		return len(x.FailedSwapReasons) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapResponse.tx_id":
		x.TxId = ""
	case "types.QueryStreamingSwapResponse.interval":
		x.Interval = int64(0)
	case "types.QueryStreamingSwapResponse.quantity":
		x.Quantity = int64(0)
	case "types.QueryStreamingSwapResponse.count":
		x.Count = int64(0)
	case "types.QueryStreamingSwapResponse.last_height":
		x.LastHeight = int64(0)
	case "types.QueryStreamingSwapResponse.trade_target":
		x.TradeTarget = ""
	case "types.QueryStreamingSwapResponse.source_asset":
		x.SourceAsset = ""
	case "types.QueryStreamingSwapResponse.target_asset":
		x.TargetAsset = ""
	case "types.QueryStreamingSwapResponse.destination":
		x.Destination = ""
	case "types.QueryStreamingSwapResponse.deposit":
		x.Deposit = ""
	case "types.QueryStreamingSwapResponse.in":
		x.In = ""
	case "types.QueryStreamingSwapResponse.out":
		x.Out = ""
	case "types.QueryStreamingSwapResponse.failed_swaps":
		x.FailedSwaps = nil
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		x.FailedSwapReasons = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryStreamingSwapResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryStreamingSwapResponse.tx_id":
		value := x.TxId
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.interval":
		value := x.Interval
		return protoreflect.ValueOfInt64(value)
	case "types.QueryStreamingSwapResponse.quantity":
		value := x.Quantity
		return protoreflect.ValueOfInt64(value)
	case "types.QueryStreamingSwapResponse.count":
		value := x.Count
		return protoreflect.ValueOfInt64(value)
	case "types.QueryStreamingSwapResponse.last_height":
		value := x.LastHeight
		return protoreflect.ValueOfInt64(value)
	case "types.QueryStreamingSwapResponse.trade_target":
		value := x.TradeTarget
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.source_asset":
		value := x.SourceAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.target_asset":
		value := x.TargetAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.destination":
		value := x.Destination
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.deposit":
		value := x.Deposit
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.in":
		value := x.In
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.out":
		value := x.Out
		return protoreflect.ValueOfString(value)
	case "types.QueryStreamingSwapResponse.failed_swaps":
		if len(x.FailedSwaps) == 0 {
			return protoreflect.ValueOfList(&_QueryStreamingSwapResponse_13_list{})
		}
		listValue := &_QueryStreamingSwapResponse_13_list{list: &x.FailedSwaps}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		if len(x.FailedSwapReasons) == 0 {
			return protoreflect.ValueOfList(&_QueryStreamingSwapResponse_14_list{})
		}
		listValue := &_QueryStreamingSwapResponse_14_list{list: &x.FailedSwapReasons}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapResponse.tx_id":
		x.TxId = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.interval":
		x.Interval = value.Int()
	case "types.QueryStreamingSwapResponse.quantity":
		x.Quantity = value.Int()
	case "types.QueryStreamingSwapResponse.count":
		x.Count = value.Int()
	case "types.QueryStreamingSwapResponse.last_height":
		x.LastHeight = value.Int()
	case "types.QueryStreamingSwapResponse.trade_target":
		x.TradeTarget = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.source_asset":
		x.SourceAsset = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.target_asset":
		x.TargetAsset = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.destination":
		x.Destination = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.deposit":
		x.Deposit = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.in":
		x.In = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.out":
		x.Out = value.Interface().(string)
	case "types.QueryStreamingSwapResponse.failed_swaps":
		lv := value.List()
		clv := lv.(*_QueryStreamingSwapResponse_13_list)
		x.FailedSwaps = *clv.list
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		lv := value.List()
		clv := lv.(*_QueryStreamingSwapResponse_14_list)
		x.FailedSwapReasons = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapResponse.failed_swaps":
		if x.FailedSwaps == nil {
			x.FailedSwaps = []int64{}
		}
		value := &_QueryStreamingSwapResponse_13_list{list: &x.FailedSwaps}
		return protoreflect.ValueOfList(value)
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		if x.FailedSwapReasons == nil {
			x.FailedSwapReasons = []string{}
		}
		value := &_QueryStreamingSwapResponse_14_list{list: &x.FailedSwapReasons}
		return protoreflect.ValueOfList(value)
	case "types.QueryStreamingSwapResponse.tx_id":
		panic(fmt.Errorf("field tx_id of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.interval":
		panic(fmt.Errorf("field interval of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.quantity":
		panic(fmt.Errorf("field quantity of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.count":
		panic(fmt.Errorf("field count of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.last_height":
		panic(fmt.Errorf("field last_height of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.trade_target":
		panic(fmt.Errorf("field trade_target of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.source_asset":
		panic(fmt.Errorf("field source_asset of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.target_asset":
		panic(fmt.Errorf("field target_asset of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.destination":
		panic(fmt.Errorf("field destination of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.deposit":
		panic(fmt.Errorf("field deposit of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.in":
		panic(fmt.Errorf("field in of message types.QueryStreamingSwapResponse is not mutable"))
	case "types.QueryStreamingSwapResponse.out":
		panic(fmt.Errorf("field out of message types.QueryStreamingSwapResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryStreamingSwapResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapResponse.tx_id":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.interval":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryStreamingSwapResponse.quantity":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryStreamingSwapResponse.count":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryStreamingSwapResponse.last_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryStreamingSwapResponse.trade_target":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.source_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.target_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.destination":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.deposit":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.in":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.out":
		return protoreflect.ValueOfString("")
	case "types.QueryStreamingSwapResponse.failed_swaps":
		list := []int64{}
		return protoreflect.ValueOfList(&_QueryStreamingSwapResponse_13_list{list: &list})
	case "types.QueryStreamingSwapResponse.failed_swap_reasons":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryStreamingSwapResponse_14_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryStreamingSwapResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryStreamingSwapResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryStreamingSwapResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryStreamingSwapResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryStreamingSwapResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryStreamingSwapResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Interval != 0 {
			n += 1 + runtime.Sov(uint64(x.Interval))
		}
		if x.Quantity != 0 {
			n += 1 + runtime.Sov(uint64(x.Quantity))
		}
		if x.Count != 0 {
			n += 1 + runtime.Sov(uint64(x.Count))
		}
		if x.LastHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.LastHeight))
		}
		l = len(x.TradeTarget)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SourceAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TargetAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Destination)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Deposit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.In)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Out)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.FailedSwaps) > 0 {
			l = 0
			for _, e := range x.FailedSwaps {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.FailedSwapReasons) > 0 {
			for _, s := range x.FailedSwapReasons {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.FailedSwapReasons) > 0 {
			for iNdEx := len(x.FailedSwapReasons) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.FailedSwapReasons[iNdEx])
				copy(dAtA[i:], x.FailedSwapReasons[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FailedSwapReasons[iNdEx])))
				i--
				dAtA[i] = 0x72
			}
		}
		if len(x.FailedSwaps) > 0 {
			var pksize2 int
			for _, num := range x.FailedSwaps {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num1 := range x.FailedSwaps {
				num := uint64(num1)
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.Out) > 0 {
			i -= len(x.Out)
			copy(dAtA[i:], x.Out)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Out)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.In) > 0 {
			i -= len(x.In)
			copy(dAtA[i:], x.In)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.In)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Deposit) > 0 {
			i -= len(x.Deposit)
			copy(dAtA[i:], x.Deposit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Deposit)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Destination) > 0 {
			i -= len(x.Destination)
			copy(dAtA[i:], x.Destination)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Destination)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.TargetAsset) > 0 {
			i -= len(x.TargetAsset)
			copy(dAtA[i:], x.TargetAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TargetAsset)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.SourceAsset) > 0 {
			i -= len(x.SourceAsset)
			copy(dAtA[i:], x.SourceAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SourceAsset)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.TradeTarget) > 0 {
			i -= len(x.TradeTarget)
			copy(dAtA[i:], x.TradeTarget)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TradeTarget)))
			i--
			dAtA[i] = 0x32
		}
		if x.LastHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastHeight))
			i--
			dAtA[i] = 0x28
		}
		if x.Count != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Count))
			i--
			dAtA[i] = 0x20
		}
		if x.Quantity != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Quantity))
			i--
			dAtA[i] = 0x18
		}
		if x.Interval != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Interval))
			i--
			dAtA[i] = 0x10
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
				}
				x.Interval = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Interval |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
				}
				x.Quantity = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Quantity |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
				}
				x.Count = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Count |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastHeight", wireType)
				}
				x.LastHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TradeTarget", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TradeTarget = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SourceAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SourceAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TargetAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TargetAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Destination = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Deposit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field In", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.In = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Out", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Out = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType == 0 {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.FailedSwaps = append(x.FailedSwaps, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.FailedSwaps) == 0 {
						x.FailedSwaps = make([]int64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v int64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= int64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.FailedSwaps = append(x.FailedSwaps, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FailedSwaps", wireType)
				}
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FailedSwapReasons", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FailedSwapReasons = append(x.FailedSwapReasons, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryStreamingSwapsRequest        protoreflect.MessageDescriptor
	fd_QueryStreamingSwapsRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_streaming_swap_proto_init()
	md_QueryStreamingSwapsRequest = File_types_query_streaming_swap_proto.Messages().ByName("QueryStreamingSwapsRequest")
	fd_QueryStreamingSwapsRequest_height = md_QueryStreamingSwapsRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryStreamingSwapsRequest)(nil)

type fastReflection_QueryStreamingSwapsRequest QueryStreamingSwapsRequest

func (x *QueryStreamingSwapsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapsRequest)(x)
}

func (x *QueryStreamingSwapsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_streaming_swap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryStreamingSwapsRequest_messageType fastReflection_QueryStreamingSwapsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryStreamingSwapsRequest_messageType{}

type fastReflection_QueryStreamingSwapsRequest_messageType struct{}

func (x fastReflection_QueryStreamingSwapsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapsRequest)(nil)
}
func (x fastReflection_QueryStreamingSwapsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapsRequest)
}
func (x fastReflection_QueryStreamingSwapsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryStreamingSwapsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryStreamingSwapsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryStreamingSwapsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryStreamingSwapsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryStreamingSwapsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryStreamingSwapsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryStreamingSwapsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryStreamingSwapsRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryStreamingSwapsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryStreamingSwapsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		panic(fmt.Errorf("field height of message types.QueryStreamingSwapsRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryStreamingSwapsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsRequest"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryStreamingSwapsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryStreamingSwapsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryStreamingSwapsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryStreamingSwapsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryStreamingSwapsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryStreamingSwapsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryStreamingSwapsResponse_1_list)(nil)

type _QueryStreamingSwapsResponse_1_list struct {
	list *[]*QueryStreamingSwapResponse
}

func (x *_QueryStreamingSwapsResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryStreamingSwapsResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryStreamingSwapsResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryStreamingSwapResponse)
	(*x.list)[i] = concreteValue
}

func (x *_QueryStreamingSwapsResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryStreamingSwapResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryStreamingSwapsResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(QueryStreamingSwapResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryStreamingSwapsResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryStreamingSwapsResponse_1_list) NewElement() protoreflect.Value {
	v := new(QueryStreamingSwapResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryStreamingSwapsResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryStreamingSwapsResponse                 protoreflect.MessageDescriptor
	fd_QueryStreamingSwapsResponse_streaming_swaps protoreflect.FieldDescriptor
)

func init() {
	file_types_query_streaming_swap_proto_init()
	md_QueryStreamingSwapsResponse = File_types_query_streaming_swap_proto.Messages().ByName("QueryStreamingSwapsResponse")
	fd_QueryStreamingSwapsResponse_streaming_swaps = md_QueryStreamingSwapsResponse.Fields().ByName("streaming_swaps")
}

var _ protoreflect.Message = (*fastReflection_QueryStreamingSwapsResponse)(nil)

type fastReflection_QueryStreamingSwapsResponse QueryStreamingSwapsResponse

func (x *QueryStreamingSwapsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapsResponse)(x)
}

func (x *QueryStreamingSwapsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_streaming_swap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryStreamingSwapsResponse_messageType fastReflection_QueryStreamingSwapsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryStreamingSwapsResponse_messageType{}

type fastReflection_QueryStreamingSwapsResponse_messageType struct{}

func (x fastReflection_QueryStreamingSwapsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryStreamingSwapsResponse)(nil)
}
func (x fastReflection_QueryStreamingSwapsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapsResponse)
}
func (x fastReflection_QueryStreamingSwapsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryStreamingSwapsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryStreamingSwapsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryStreamingSwapsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryStreamingSwapsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryStreamingSwapsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryStreamingSwapsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryStreamingSwapsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryStreamingSwapsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryStreamingSwapsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.StreamingSwaps) != 0 {
		value := protoreflect.ValueOfList(&_QueryStreamingSwapsResponse_1_list{list: &x.StreamingSwaps})
		if !f(fd_QueryStreamingSwapsResponse_streaming_swaps, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryStreamingSwapsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		return len(x.StreamingSwaps) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		x.StreamingSwaps = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryStreamingSwapsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		if len(x.StreamingSwaps) == 0 {
			return protoreflect.ValueOfList(&_QueryStreamingSwapsResponse_1_list{})
		}
		listValue := &_QueryStreamingSwapsResponse_1_list{list: &x.StreamingSwaps}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		lv := value.List()
		clv := lv.(*_QueryStreamingSwapsResponse_1_list)
		x.StreamingSwaps = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		if x.StreamingSwaps == nil {
			x.StreamingSwaps = []*QueryStreamingSwapResponse{}
		}
		value := &_QueryStreamingSwapsResponse_1_list{list: &x.StreamingSwaps}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryStreamingSwapsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryStreamingSwapsResponse.streaming_swaps":
		list := []*QueryStreamingSwapResponse{}
		return protoreflect.ValueOfList(&_QueryStreamingSwapsResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryStreamingSwapsResponse"))
		}
		panic(fmt.Errorf("message types.QueryStreamingSwapsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryStreamingSwapsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryStreamingSwapsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryStreamingSwapsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryStreamingSwapsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryStreamingSwapsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryStreamingSwapsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryStreamingSwapsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.StreamingSwaps) > 0 {
			for _, e := range x.StreamingSwaps {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.StreamingSwaps) > 0 {
			for iNdEx := len(x.StreamingSwaps) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StreamingSwaps[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryStreamingSwapsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryStreamingSwapsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwaps", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StreamingSwaps = append(x.StreamingSwaps, &QueryStreamingSwapResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StreamingSwaps[len(x.StreamingSwaps)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/query_streaming_swap.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryStreamingSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryStreamingSwapRequest) Reset() {
	*x = QueryStreamingSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_streaming_swap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStreamingSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStreamingSwapRequest) ProtoMessage() {}

// Deprecated: Use QueryStreamingSwapRequest.ProtoReflect.Descriptor instead.
func (*QueryStreamingSwapRequest) Descriptor() ([]byte, []int) {
	return file_types_query_streaming_swap_proto_rawDescGZIP(), []int{0}
}

func (x *QueryStreamingSwapRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryStreamingSwapRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryStreamingSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the hash of a transaction
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// how often each swap is made, in blocks
	Interval int64 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// the total number of swaps in a streaming swaps
	Quantity int64 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// the amount of swap attempts so far
	Count int64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// the block height of the latest swap
	LastHeight int64 `protobuf:"varint,5,opt,name=last_height,json=lastHeight,proto3" json:"last_height,omitempty"`
	// the total number of tokens the swapper wants to receive of the output asset
	TradeTarget string `protobuf:"bytes,6,opt,name=trade_target,json=tradeTarget,proto3" json:"trade_target,omitempty"`
	// the asset to be swapped from
	SourceAsset string `protobuf:"bytes,7,opt,name=source_asset,json=sourceAsset,proto3" json:"source_asset,omitempty"`
	// the asset to be swapped to
	TargetAsset string `protobuf:"bytes,8,opt,name=target_asset,json=targetAsset,proto3" json:"target_asset,omitempty"`
	// the destination address to receive the swap output
	Destination string `protobuf:"bytes,9,opt,name=destination,proto3" json:"destination,omitempty"`
	// the number of input tokens the swapper has deposited
	Deposit string `protobuf:"bytes,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	// the amount of input tokens that have been swapped so far
	In string `protobuf:"bytes,11,opt,name=in,proto3" json:"in,omitempty"`
	// the amount of output tokens that have been swapped so far
	Out string `protobuf:"bytes,12,opt,name=out,proto3" json:"out,omitempty"`
	// the list of swap indexes that failed
	FailedSwaps []int64 `protobuf:"varint,13,rep,packed,name=failed_swaps,json=failedSwaps,proto3" json:"failed_swaps,omitempty"`
	// the list of reasons that sub-swaps have failed
	FailedSwapReasons []string `protobuf:"bytes,14,rep,name=failed_swap_reasons,json=failedSwapReasons,proto3" json:"failed_swap_reasons,omitempty"`
}

func (x *QueryStreamingSwapResponse) Reset() {
	*x = QueryStreamingSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_streaming_swap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStreamingSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStreamingSwapResponse) ProtoMessage() {}

// Deprecated: Use QueryStreamingSwapResponse.ProtoReflect.Descriptor instead.
func (*QueryStreamingSwapResponse) Descriptor() ([]byte, []int) {
	return file_types_query_streaming_swap_proto_rawDescGZIP(), []int{1}
}

func (x *QueryStreamingSwapResponse) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *QueryStreamingSwapResponse) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *QueryStreamingSwapResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryStreamingSwapResponse) GetLastHeight() int64 {
	if x != nil {
		return x.LastHeight
	}
	return 0
}

func (x *QueryStreamingSwapResponse) GetTradeTarget() string {
	if x != nil {
		return x.TradeTarget
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetSourceAsset() string {
	if x != nil {
		return x.SourceAsset
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetTargetAsset() string {
	if x != nil {
		return x.TargetAsset
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *QueryStreamingSwapResponse) GetFailedSwaps() []int64 {
	if x != nil {
		return x.FailedSwaps
	}
	return nil
}

func (x *QueryStreamingSwapResponse) GetFailedSwapReasons() []string {
	if x != nil {
		return x.FailedSwapReasons
	}
	return nil
}

type QueryStreamingSwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryStreamingSwapsRequest) Reset() {
	*x = QueryStreamingSwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_streaming_swap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStreamingSwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStreamingSwapsRequest) ProtoMessage() {}

// Deprecated: Use QueryStreamingSwapsRequest.ProtoReflect.Descriptor instead.
func (*QueryStreamingSwapsRequest) Descriptor() ([]byte, []int) {
	return file_types_query_streaming_swap_proto_rawDescGZIP(), []int{2}
}

func (x *QueryStreamingSwapsRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryStreamingSwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamingSwaps []*QueryStreamingSwapResponse `protobuf:"bytes,1,rep,name=streaming_swaps,json=streamingSwaps,proto3" json:"streaming_swaps,omitempty"`
}

func (x *QueryStreamingSwapsResponse) Reset() {
	*x = QueryStreamingSwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_streaming_swap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStreamingSwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStreamingSwapsResponse) ProtoMessage() {}

// Deprecated: Use QueryStreamingSwapsResponse.ProtoReflect.Descriptor instead.
func (*QueryStreamingSwapsResponse) Descriptor() ([]byte, []int) {
	return file_types_query_streaming_swap_proto_rawDescGZIP(), []int{3}
}

func (x *QueryStreamingSwapsResponse) GetStreamingSwaps() []*QueryStreamingSwapResponse {
	if x != nil {
		return x.StreamingSwaps
	}
	return nil
}

var File_types_query_streaming_swap_proto protoreflect.FileDescriptor

var file_types_query_streaming_swap_proto_rawDesc = []byte{
	0x0a, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x48, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xea, 0x03, 0x0a, 0x1a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xea, 0xde,
	0x1f, 0x02, 0x69, 0x6e, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x75, 0x74, 0x52, 0x03,
	0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x77,
	0x61, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x69, 0x0a, 0x1b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77,
	0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x73, 0x42, 0x88, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2a, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f,
	0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x54,
	0x58, 0x58, 0xaa, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xca, 0x02, 0x05, 0x54, 0x79, 0x70,
	0x65, 0x73, 0xe2, 0x02, 0x11, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xc8, 0xe2,
	0x1e, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_query_streaming_swap_proto_rawDescOnce sync.Once
	file_types_query_streaming_swap_proto_rawDescData = file_types_query_streaming_swap_proto_rawDesc
)

func file_types_query_streaming_swap_proto_rawDescGZIP() []byte {
	file_types_query_streaming_swap_proto_rawDescOnce.Do(func() {
		file_types_query_streaming_swap_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_query_streaming_swap_proto_rawDescData)
	})
	return file_types_query_streaming_swap_proto_rawDescData
}

var file_types_query_streaming_swap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_types_query_streaming_swap_proto_goTypes = []interface{}{
	(*QueryStreamingSwapRequest)(nil),   // 0: types.QueryStreamingSwapRequest
	(*QueryStreamingSwapResponse)(nil),  // 1: types.QueryStreamingSwapResponse
	(*QueryStreamingSwapsRequest)(nil),  // 2: types.QueryStreamingSwapsRequest
	(*QueryStreamingSwapsResponse)(nil), // 3: types.QueryStreamingSwapsResponse
}
var file_types_query_streaming_swap_proto_depIdxs = []int32{
	1, // 0: types.QueryStreamingSwapsResponse.streaming_swaps:type_name -> types.QueryStreamingSwapResponse
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_types_query_streaming_swap_proto_init() }
func file_types_query_streaming_swap_proto_init() {
	if File_types_query_streaming_swap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_query_streaming_swap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStreamingSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_streaming_swap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStreamingSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_streaming_swap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStreamingSwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_streaming_swap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStreamingSwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_query_streaming_swap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_query_streaming_swap_proto_goTypes,
		DependencyIndexes: file_types_query_streaming_swap_proto_depIdxs,
		MessageInfos:      file_types_query_streaming_swap_proto_msgTypes,
	}.Build()
	File_types_query_streaming_swap_proto = out.File
	file_types_query_streaming_swap_proto_rawDesc = nil
	file_types_query_streaming_swap_proto_goTypes = nil
	file_types_query_streaming_swap_proto_depIdxs = nil
}
