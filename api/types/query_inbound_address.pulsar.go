// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryInboundAddressResponse                         protoreflect.MessageDescriptor
	fd_QueryInboundAddressResponse_chain                   protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_pub_key                 protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_address                 protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_router                  protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_halted                  protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_global_trading_paused   protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_chain_trading_paused    protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_chain_lp_actions_paused protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_observed_fee_rate       protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_gas_rate                protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_gas_rate_units          protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_outbound_tx_size        protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_outbound_fee            protoreflect.FieldDescriptor
	fd_QueryInboundAddressResponse_dust_threshold          protoreflect.FieldDescriptor
)

func init() {
	file_types_query_inbound_address_proto_init()
	md_QueryInboundAddressResponse = File_types_query_inbound_address_proto.Messages().ByName("QueryInboundAddressResponse")
	fd_QueryInboundAddressResponse_chain = md_QueryInboundAddressResponse.Fields().ByName("chain")
	fd_QueryInboundAddressResponse_pub_key = md_QueryInboundAddressResponse.Fields().ByName("pub_key")
	fd_QueryInboundAddressResponse_address = md_QueryInboundAddressResponse.Fields().ByName("address")
	fd_QueryInboundAddressResponse_router = md_QueryInboundAddressResponse.Fields().ByName("router")
	fd_QueryInboundAddressResponse_halted = md_QueryInboundAddressResponse.Fields().ByName("halted")
	fd_QueryInboundAddressResponse_global_trading_paused = md_QueryInboundAddressResponse.Fields().ByName("global_trading_paused")
	fd_QueryInboundAddressResponse_chain_trading_paused = md_QueryInboundAddressResponse.Fields().ByName("chain_trading_paused")
	fd_QueryInboundAddressResponse_chain_lp_actions_paused = md_QueryInboundAddressResponse.Fields().ByName("chain_lp_actions_paused")
	fd_QueryInboundAddressResponse_observed_fee_rate = md_QueryInboundAddressResponse.Fields().ByName("observed_fee_rate")
	fd_QueryInboundAddressResponse_gas_rate = md_QueryInboundAddressResponse.Fields().ByName("gas_rate")
	fd_QueryInboundAddressResponse_gas_rate_units = md_QueryInboundAddressResponse.Fields().ByName("gas_rate_units")
	fd_QueryInboundAddressResponse_outbound_tx_size = md_QueryInboundAddressResponse.Fields().ByName("outbound_tx_size")
	fd_QueryInboundAddressResponse_outbound_fee = md_QueryInboundAddressResponse.Fields().ByName("outbound_fee")
	fd_QueryInboundAddressResponse_dust_threshold = md_QueryInboundAddressResponse.Fields().ByName("dust_threshold")
}

var _ protoreflect.Message = (*fastReflection_QueryInboundAddressResponse)(nil)

type fastReflection_QueryInboundAddressResponse QueryInboundAddressResponse

func (x *QueryInboundAddressResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressResponse)(x)
}

func (x *QueryInboundAddressResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_inbound_address_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryInboundAddressResponse_messageType fastReflection_QueryInboundAddressResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryInboundAddressResponse_messageType{}

type fastReflection_QueryInboundAddressResponse_messageType struct{}

func (x fastReflection_QueryInboundAddressResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressResponse)(nil)
}
func (x fastReflection_QueryInboundAddressResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressResponse)
}
func (x fastReflection_QueryInboundAddressResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryInboundAddressResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryInboundAddressResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryInboundAddressResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryInboundAddressResponse) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryInboundAddressResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryInboundAddressResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryInboundAddressResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Chain != "" {
		value := protoreflect.ValueOfString(x.Chain)
		if !f(fd_QueryInboundAddressResponse_chain, value) {
			return
		}
	}
	if x.PubKey != "" {
		value := protoreflect.ValueOfString(x.PubKey)
		if !f(fd_QueryInboundAddressResponse_pub_key, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryInboundAddressResponse_address, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryInboundAddressResponse_router, value) {
			return
		}
	}
	if x.Halted != false {
		value := protoreflect.ValueOfBool(x.Halted)
		if !f(fd_QueryInboundAddressResponse_halted, value) {
			return
		}
	}
	if x.GlobalTradingPaused != false {
		value := protoreflect.ValueOfBool(x.GlobalTradingPaused)
		if !f(fd_QueryInboundAddressResponse_global_trading_paused, value) {
			return
		}
	}
	if x.ChainTradingPaused != false {
		value := protoreflect.ValueOfBool(x.ChainTradingPaused)
		if !f(fd_QueryInboundAddressResponse_chain_trading_paused, value) {
			return
		}
	}
	if x.ChainLpActionsPaused != false {
		value := protoreflect.ValueOfBool(x.ChainLpActionsPaused)
		if !f(fd_QueryInboundAddressResponse_chain_lp_actions_paused, value) {
			return
		}
	}
	if x.ObservedFeeRate != "" {
		value := protoreflect.ValueOfString(x.ObservedFeeRate)
		if !f(fd_QueryInboundAddressResponse_observed_fee_rate, value) {
			return
		}
	}
	if x.GasRate != "" {
		value := protoreflect.ValueOfString(x.GasRate)
		if !f(fd_QueryInboundAddressResponse_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryInboundAddressResponse_gas_rate_units, value) {
			return
		}
	}
	if x.OutboundTxSize != "" {
		value := protoreflect.ValueOfString(x.OutboundTxSize)
		if !f(fd_QueryInboundAddressResponse_outbound_tx_size, value) {
			return
		}
	}
	if x.OutboundFee != "" {
		value := protoreflect.ValueOfString(x.OutboundFee)
		if !f(fd_QueryInboundAddressResponse_outbound_fee, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryInboundAddressResponse_dust_threshold, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryInboundAddressResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		return x.Chain != ""
	case "types.QueryInboundAddressResponse.pub_key":
		return x.PubKey != ""
	case "types.QueryInboundAddressResponse.address":
		return x.Address != ""
	case "types.QueryInboundAddressResponse.router":
		return x.Router != ""
	case "types.QueryInboundAddressResponse.halted":
		return x.Halted != false
	case "types.QueryInboundAddressResponse.global_trading_paused":
		return x.GlobalTradingPaused != false
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		return x.ChainTradingPaused != false
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		return x.ChainLpActionsPaused != false
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		return x.ObservedFeeRate != ""
	case "types.QueryInboundAddressResponse.gas_rate":
		return x.GasRate != ""
	case "types.QueryInboundAddressResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		return x.OutboundTxSize != ""
	case "types.QueryInboundAddressResponse.outbound_fee":
		return x.OutboundFee != ""
	case "types.QueryInboundAddressResponse.dust_threshold":
		return x.DustThreshold != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		x.Chain = ""
	case "types.QueryInboundAddressResponse.pub_key":
		x.PubKey = ""
	case "types.QueryInboundAddressResponse.address":
		x.Address = ""
	case "types.QueryInboundAddressResponse.router":
		x.Router = ""
	case "types.QueryInboundAddressResponse.halted":
		x.Halted = false
	case "types.QueryInboundAddressResponse.global_trading_paused":
		x.GlobalTradingPaused = false
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		x.ChainTradingPaused = false
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		x.ChainLpActionsPaused = false
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		x.ObservedFeeRate = ""
	case "types.QueryInboundAddressResponse.gas_rate":
		x.GasRate = ""
	case "types.QueryInboundAddressResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		x.OutboundTxSize = ""
	case "types.QueryInboundAddressResponse.outbound_fee":
		x.OutboundFee = ""
	case "types.QueryInboundAddressResponse.dust_threshold":
		x.DustThreshold = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryInboundAddressResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		value := x.Chain
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.pub_key":
		value := x.PubKey
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.halted":
		value := x.Halted
		return protoreflect.ValueOfBool(value)
	case "types.QueryInboundAddressResponse.global_trading_paused":
		value := x.GlobalTradingPaused
		return protoreflect.ValueOfBool(value)
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		value := x.ChainTradingPaused
		return protoreflect.ValueOfBool(value)
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		value := x.ChainLpActionsPaused
		return protoreflect.ValueOfBool(value)
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		value := x.ObservedFeeRate
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.gas_rate":
		value := x.GasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		value := x.OutboundTxSize
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.outbound_fee":
		value := x.OutboundFee
		return protoreflect.ValueOfString(value)
	case "types.QueryInboundAddressResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		x.Chain = value.Interface().(string)
	case "types.QueryInboundAddressResponse.pub_key":
		x.PubKey = value.Interface().(string)
	case "types.QueryInboundAddressResponse.address":
		x.Address = value.Interface().(string)
	case "types.QueryInboundAddressResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryInboundAddressResponse.halted":
		x.Halted = value.Bool()
	case "types.QueryInboundAddressResponse.global_trading_paused":
		x.GlobalTradingPaused = value.Bool()
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		x.ChainTradingPaused = value.Bool()
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		x.ChainLpActionsPaused = value.Bool()
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		x.ObservedFeeRate = value.Interface().(string)
	case "types.QueryInboundAddressResponse.gas_rate":
		x.GasRate = value.Interface().(string)
	case "types.QueryInboundAddressResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		x.OutboundTxSize = value.Interface().(string)
	case "types.QueryInboundAddressResponse.outbound_fee":
		x.OutboundFee = value.Interface().(string)
	case "types.QueryInboundAddressResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		panic(fmt.Errorf("field chain of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.pub_key":
		panic(fmt.Errorf("field pub_key of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.address":
		panic(fmt.Errorf("field address of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.router":
		panic(fmt.Errorf("field router of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.halted":
		panic(fmt.Errorf("field halted of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.global_trading_paused":
		panic(fmt.Errorf("field global_trading_paused of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		panic(fmt.Errorf("field chain_trading_paused of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		panic(fmt.Errorf("field chain_lp_actions_paused of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		panic(fmt.Errorf("field observed_fee_rate of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.gas_rate":
		panic(fmt.Errorf("field gas_rate of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		panic(fmt.Errorf("field outbound_tx_size of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.outbound_fee":
		panic(fmt.Errorf("field outbound_fee of message types.QueryInboundAddressResponse is not mutable"))
	case "types.QueryInboundAddressResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryInboundAddressResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryInboundAddressResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressResponse.chain":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.pub_key":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.address":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.halted":
		return protoreflect.ValueOfBool(false)
	case "types.QueryInboundAddressResponse.global_trading_paused":
		return protoreflect.ValueOfBool(false)
	case "types.QueryInboundAddressResponse.chain_trading_paused":
		return protoreflect.ValueOfBool(false)
	case "types.QueryInboundAddressResponse.chain_lp_actions_paused":
		return protoreflect.ValueOfBool(false)
	case "types.QueryInboundAddressResponse.observed_fee_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.outbound_tx_size":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.outbound_fee":
		return protoreflect.ValueOfString("")
	case "types.QueryInboundAddressResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryInboundAddressResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryInboundAddressResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryInboundAddressResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryInboundAddressResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryInboundAddressResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryInboundAddressResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Chain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PubKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Halted {
			n += 2
		}
		if x.GlobalTradingPaused {
			n += 2
		}
		if x.ChainTradingPaused {
			n += 2
		}
		if x.ChainLpActionsPaused {
			n += 2
		}
		l = len(x.ObservedFeeRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OutboundTxSize)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OutboundFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObservedFeeRate) > 0 {
			i -= len(x.ObservedFeeRate)
			copy(dAtA[i:], x.ObservedFeeRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObservedFeeRate)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.OutboundFee) > 0 {
			i -= len(x.OutboundFee)
			copy(dAtA[i:], x.OutboundFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OutboundFee)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.OutboundTxSize) > 0 {
			i -= len(x.OutboundTxSize)
			copy(dAtA[i:], x.OutboundTxSize)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OutboundTxSize)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.GasRate) > 0 {
			i -= len(x.GasRate)
			copy(dAtA[i:], x.GasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRate)))
			i--
			dAtA[i] = 0x4a
		}
		if x.ChainLpActionsPaused {
			i--
			if x.ChainLpActionsPaused {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.ChainTradingPaused {
			i--
			if x.ChainTradingPaused {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if x.GlobalTradingPaused {
			i--
			if x.GlobalTradingPaused {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.Halted {
			i--
			if x.Halted {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PubKey) > 0 {
			i -= len(x.PubKey)
			copy(dAtA[i:], x.PubKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKey)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Chain) > 0 {
			i -= len(x.Chain)
			copy(dAtA[i:], x.Chain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Chain)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Chain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Halted", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Halted = bool(v != 0)
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GlobalTradingPaused", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.GlobalTradingPaused = bool(v != 0)
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainTradingPaused", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.ChainTradingPaused = bool(v != 0)
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainLpActionsPaused", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.ChainLpActionsPaused = bool(v != 0)
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObservedFeeRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObservedFeeRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundTxSize", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutboundTxSize = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutboundFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryInboundAddressesRequest        protoreflect.MessageDescriptor
	fd_QueryInboundAddressesRequest_height protoreflect.FieldDescriptor
)

func init() {
	file_types_query_inbound_address_proto_init()
	md_QueryInboundAddressesRequest = File_types_query_inbound_address_proto.Messages().ByName("QueryInboundAddressesRequest")
	fd_QueryInboundAddressesRequest_height = md_QueryInboundAddressesRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryInboundAddressesRequest)(nil)

type fastReflection_QueryInboundAddressesRequest QueryInboundAddressesRequest

func (x *QueryInboundAddressesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressesRequest)(x)
}

func (x *QueryInboundAddressesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_inbound_address_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryInboundAddressesRequest_messageType fastReflection_QueryInboundAddressesRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryInboundAddressesRequest_messageType{}

type fastReflection_QueryInboundAddressesRequest_messageType struct{}

func (x fastReflection_QueryInboundAddressesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressesRequest)(nil)
}
func (x fastReflection_QueryInboundAddressesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressesRequest)
}
func (x fastReflection_QueryInboundAddressesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryInboundAddressesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryInboundAddressesRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryInboundAddressesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryInboundAddressesRequest) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryInboundAddressesRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryInboundAddressesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryInboundAddressesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryInboundAddressesRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryInboundAddressesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryInboundAddressesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		panic(fmt.Errorf("field height of message types.QueryInboundAddressesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryInboundAddressesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressesRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesRequest"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryInboundAddressesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryInboundAddressesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryInboundAddressesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryInboundAddressesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryInboundAddressesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryInboundAddressesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryInboundAddressesResponse_1_list)(nil)

type _QueryInboundAddressesResponse_1_list struct {
	list *[]*QueryInboundAddressResponse
}

func (x *_QueryInboundAddressesResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryInboundAddressesResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryInboundAddressesResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryInboundAddressResponse)
	(*x.list)[i] = concreteValue
}

func (x *_QueryInboundAddressesResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryInboundAddressResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryInboundAddressesResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(QueryInboundAddressResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryInboundAddressesResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryInboundAddressesResponse_1_list) NewElement() protoreflect.Value {
	v := new(QueryInboundAddressResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryInboundAddressesResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryInboundAddressesResponse                   protoreflect.MessageDescriptor
	fd_QueryInboundAddressesResponse_inbound_addresses protoreflect.FieldDescriptor
)

func init() {
	file_types_query_inbound_address_proto_init()
	md_QueryInboundAddressesResponse = File_types_query_inbound_address_proto.Messages().ByName("QueryInboundAddressesResponse")
	fd_QueryInboundAddressesResponse_inbound_addresses = md_QueryInboundAddressesResponse.Fields().ByName("inbound_addresses")
}

var _ protoreflect.Message = (*fastReflection_QueryInboundAddressesResponse)(nil)

type fastReflection_QueryInboundAddressesResponse QueryInboundAddressesResponse

func (x *QueryInboundAddressesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressesResponse)(x)
}

func (x *QueryInboundAddressesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_inbound_address_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryInboundAddressesResponse_messageType fastReflection_QueryInboundAddressesResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryInboundAddressesResponse_messageType{}

type fastReflection_QueryInboundAddressesResponse_messageType struct{}

func (x fastReflection_QueryInboundAddressesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryInboundAddressesResponse)(nil)
}
func (x fastReflection_QueryInboundAddressesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressesResponse)
}
func (x fastReflection_QueryInboundAddressesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryInboundAddressesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryInboundAddressesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryInboundAddressesResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryInboundAddressesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryInboundAddressesResponse) New() protoreflect.Message {
	return new(fastReflection_QueryInboundAddressesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryInboundAddressesResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryInboundAddressesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryInboundAddressesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.InboundAddresses) != 0 {
		value := protoreflect.ValueOfList(&_QueryInboundAddressesResponse_1_list{list: &x.InboundAddresses})
		if !f(fd_QueryInboundAddressesResponse_inbound_addresses, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryInboundAddressesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		return len(x.InboundAddresses) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		x.InboundAddresses = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryInboundAddressesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		if len(x.InboundAddresses) == 0 {
			return protoreflect.ValueOfList(&_QueryInboundAddressesResponse_1_list{})
		}
		listValue := &_QueryInboundAddressesResponse_1_list{list: &x.InboundAddresses}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		lv := value.List()
		clv := lv.(*_QueryInboundAddressesResponse_1_list)
		x.InboundAddresses = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		if x.InboundAddresses == nil {
			x.InboundAddresses = []*QueryInboundAddressResponse{}
		}
		value := &_QueryInboundAddressesResponse_1_list{list: &x.InboundAddresses}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryInboundAddressesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryInboundAddressesResponse.inbound_addresses":
		list := []*QueryInboundAddressResponse{}
		return protoreflect.ValueOfList(&_QueryInboundAddressesResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryInboundAddressesResponse"))
		}
		panic(fmt.Errorf("message types.QueryInboundAddressesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryInboundAddressesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryInboundAddressesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryInboundAddressesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryInboundAddressesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryInboundAddressesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryInboundAddressesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryInboundAddressesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.InboundAddresses) > 0 {
			for _, e := range x.InboundAddresses {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.InboundAddresses) > 0 {
			for iNdEx := len(x.InboundAddresses) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InboundAddresses[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryInboundAddressesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryInboundAddressesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddresses", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddresses = append(x.InboundAddresses, &QueryInboundAddressResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InboundAddresses[len(x.InboundAddresses)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/query_inbound_address.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryInboundAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	PubKey  string `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Router  string `protobuf:"bytes,4,opt,name=router,proto3" json:"router,omitempty"`
	// Returns true if trading is unavailable for this chain, either because trading is halted globally or specifically for this chain
	Halted bool `protobuf:"varint,5,opt,name=halted,proto3" json:"halted,omitempty"`
	// Returns true if trading is paused globally
	GlobalTradingPaused bool `protobuf:"varint,6,opt,name=global_trading_paused,json=globalTradingPaused,proto3" json:"global_trading_paused,omitempty"`
	// Returns true if trading is paused for this chain
	ChainTradingPaused bool `protobuf:"varint,7,opt,name=chain_trading_paused,json=chainTradingPaused,proto3" json:"chain_trading_paused,omitempty"`
	// Returns true if LP actions are paused for this chain
	ChainLpActionsPaused bool `protobuf:"varint,8,opt,name=chain_lp_actions_paused,json=chainLpActionsPaused,proto3" json:"chain_lp_actions_paused,omitempty"`
	// The chain's observed fee rate in 1e8 format, before the 1.5x that makes an outbound more likely to have a sufficient gas rate.  Used by validators to check whether they need to report a fee change.
	ObservedFeeRate string `protobuf:"bytes,14,opt,name=observed_fee_rate,json=observedFeeRate,proto3" json:"observed_fee_rate,omitempty"`
	// The minimum fee rate used by vaults to send outbound TXs. The actual fee rate may be higher. For EVM chains this is returned in gwei (1e9).
	GasRate string `protobuf:"bytes,9,opt,name=gas_rate,json=gasRate,proto3" json:"gas_rate,omitempty"`
	// Units of the gas_rate.
	GasRateUnits string `protobuf:"bytes,10,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// Avg size of outbound TXs on each chain. For UTXO chains it may be larger than average, as it takes into account vault consolidation txs, which can have many vouts
	OutboundTxSize string `protobuf:"bytes,11,opt,name=outbound_tx_size,json=outboundTxSize,proto3" json:"outbound_tx_size,omitempty"`
	// The total outbound fee charged to the user for outbound txs in the gas asset of the chain.
	OutboundFee string `protobuf:"bytes,12,opt,name=outbound_fee,json=outboundFee,proto3" json:"outbound_fee,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,13,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
}

func (x *QueryInboundAddressResponse) Reset() {
	*x = QueryInboundAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_inbound_address_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInboundAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInboundAddressResponse) ProtoMessage() {}

// Deprecated: Use QueryInboundAddressResponse.ProtoReflect.Descriptor instead.
func (*QueryInboundAddressResponse) Descriptor() ([]byte, []int) {
	return file_types_query_inbound_address_proto_rawDescGZIP(), []int{0}
}

func (x *QueryInboundAddressResponse) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetHalted() bool {
	if x != nil {
		return x.Halted
	}
	return false
}

func (x *QueryInboundAddressResponse) GetGlobalTradingPaused() bool {
	if x != nil {
		return x.GlobalTradingPaused
	}
	return false
}

func (x *QueryInboundAddressResponse) GetChainTradingPaused() bool {
	if x != nil {
		return x.ChainTradingPaused
	}
	return false
}

func (x *QueryInboundAddressResponse) GetChainLpActionsPaused() bool {
	if x != nil {
		return x.ChainLpActionsPaused
	}
	return false
}

func (x *QueryInboundAddressResponse) GetObservedFeeRate() string {
	if x != nil {
		return x.ObservedFeeRate
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetGasRate() string {
	if x != nil {
		return x.GasRate
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetOutboundTxSize() string {
	if x != nil {
		return x.OutboundTxSize
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetOutboundFee() string {
	if x != nil {
		return x.OutboundFee
	}
	return ""
}

func (x *QueryInboundAddressResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

type QueryInboundAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryInboundAddressesRequest) Reset() {
	*x = QueryInboundAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_inbound_address_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInboundAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInboundAddressesRequest) ProtoMessage() {}

// Deprecated: Use QueryInboundAddressesRequest.ProtoReflect.Descriptor instead.
func (*QueryInboundAddressesRequest) Descriptor() ([]byte, []int) {
	return file_types_query_inbound_address_proto_rawDescGZIP(), []int{1}
}

func (x *QueryInboundAddressesRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryInboundAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundAddresses []*QueryInboundAddressResponse `protobuf:"bytes,1,rep,name=inbound_addresses,json=inboundAddresses,proto3" json:"inbound_addresses,omitempty"`
}

func (x *QueryInboundAddressesResponse) Reset() {
	*x = QueryInboundAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_inbound_address_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInboundAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInboundAddressesResponse) ProtoMessage() {}

// Deprecated: Use QueryInboundAddressesResponse.ProtoReflect.Descriptor instead.
func (*QueryInboundAddressesResponse) Descriptor() ([]byte, []int) {
	return file_types_query_inbound_address_proto_rawDescGZIP(), []int{2}
}

func (x *QueryInboundAddressesResponse) GetInboundAddresses() []*QueryInboundAddressResponse {
	if x != nil {
		return x.InboundAddresses
	}
	return nil
}

var File_types_query_inbound_address_proto protoreflect.FileDescriptor

var file_types_query_inbound_address_proto_rawDesc = []byte{
	0x0a, 0x21, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf2, 0x04, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x06, 0x68, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x68, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x52, 0x06, 0x68,
	0x61, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x52,
	0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x18, 0xea, 0xde, 0x1f, 0x14, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x52, 0x12, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64,
	0x12, 0x52, 0x0a, 0x17, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x70, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x1b, 0xea, 0xde, 0x1f, 0x17, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x70, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x52, 0x14,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x70, 0x0a,
	0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42,
	0x89, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x54, 0x79,
	0x70, 0x65, 0x73, 0xca, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xe2, 0x02, 0x11, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xc8, 0xe2, 0x1e, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_types_query_inbound_address_proto_rawDescOnce sync.Once
	file_types_query_inbound_address_proto_rawDescData = file_types_query_inbound_address_proto_rawDesc
)

func file_types_query_inbound_address_proto_rawDescGZIP() []byte {
	file_types_query_inbound_address_proto_rawDescOnce.Do(func() {
		file_types_query_inbound_address_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_query_inbound_address_proto_rawDescData)
	})
	return file_types_query_inbound_address_proto_rawDescData
}

var file_types_query_inbound_address_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_types_query_inbound_address_proto_goTypes = []interface{}{
	(*QueryInboundAddressResponse)(nil),   // 0: types.QueryInboundAddressResponse
	(*QueryInboundAddressesRequest)(nil),  // 1: types.QueryInboundAddressesRequest
	(*QueryInboundAddressesResponse)(nil), // 2: types.QueryInboundAddressesResponse
}
var file_types_query_inbound_address_proto_depIdxs = []int32{
	0, // 0: types.QueryInboundAddressesResponse.inbound_addresses:type_name -> types.QueryInboundAddressResponse
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_types_query_inbound_address_proto_init() }
func file_types_query_inbound_address_proto_init() {
	if File_types_query_inbound_address_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_query_inbound_address_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInboundAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_inbound_address_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInboundAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_inbound_address_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInboundAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_query_inbound_address_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_query_inbound_address_proto_goTypes,
		DependencyIndexes: file_types_query_inbound_address_proto_depIdxs,
		MessageInfos:      file_types_query_inbound_address_proto_msgTypes,
	}.Build()
	File_types_query_inbound_address_proto = out.File
	file_types_query_inbound_address_proto_rawDesc = nil
	file_types_query_inbound_address_proto_goTypes = nil
	file_types_query_inbound_address_proto_depIdxs = nil
}
