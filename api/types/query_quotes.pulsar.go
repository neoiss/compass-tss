// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_QueryQuoteSwapRequest_9_list)(nil)

type _QueryQuoteSwapRequest_9_list struct {
	list *[]string
}

func (x *_QueryQuoteSwapRequest_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteSwapRequest_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteSwapRequest_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteSwapRequest_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteSwapRequest_9_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteSwapRequest at list field Affiliate as it is not of Message kind"))
}

func (x *_QueryQuoteSwapRequest_9_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteSwapRequest_9_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteSwapRequest_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryQuoteSwapRequest_10_list)(nil)

type _QueryQuoteSwapRequest_10_list struct {
	list *[]string
}

func (x *_QueryQuoteSwapRequest_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteSwapRequest_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteSwapRequest_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteSwapRequest_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteSwapRequest_10_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteSwapRequest at list field AffiliateBps as it is not of Message kind"))
}

func (x *_QueryQuoteSwapRequest_10_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteSwapRequest_10_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteSwapRequest_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryQuoteSwapRequest                         protoreflect.MessageDescriptor
	fd_QueryQuoteSwapRequest_from_asset              protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_to_asset                protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_amount                  protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_streaming_interval      protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_streaming_quantity      protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_destination             protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_tolerance_bps           protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_refund_address          protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_affiliate               protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_affiliate_bps           protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_height                  protoreflect.FieldDescriptor
	fd_QueryQuoteSwapRequest_liquidity_tolerance_bps protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSwapRequest = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSwapRequest")
	fd_QueryQuoteSwapRequest_from_asset = md_QueryQuoteSwapRequest.Fields().ByName("from_asset")
	fd_QueryQuoteSwapRequest_to_asset = md_QueryQuoteSwapRequest.Fields().ByName("to_asset")
	fd_QueryQuoteSwapRequest_amount = md_QueryQuoteSwapRequest.Fields().ByName("amount")
	fd_QueryQuoteSwapRequest_streaming_interval = md_QueryQuoteSwapRequest.Fields().ByName("streaming_interval")
	fd_QueryQuoteSwapRequest_streaming_quantity = md_QueryQuoteSwapRequest.Fields().ByName("streaming_quantity")
	fd_QueryQuoteSwapRequest_destination = md_QueryQuoteSwapRequest.Fields().ByName("destination")
	fd_QueryQuoteSwapRequest_tolerance_bps = md_QueryQuoteSwapRequest.Fields().ByName("tolerance_bps")
	fd_QueryQuoteSwapRequest_refund_address = md_QueryQuoteSwapRequest.Fields().ByName("refund_address")
	fd_QueryQuoteSwapRequest_affiliate = md_QueryQuoteSwapRequest.Fields().ByName("affiliate")
	fd_QueryQuoteSwapRequest_affiliate_bps = md_QueryQuoteSwapRequest.Fields().ByName("affiliate_bps")
	fd_QueryQuoteSwapRequest_height = md_QueryQuoteSwapRequest.Fields().ByName("height")
	fd_QueryQuoteSwapRequest_liquidity_tolerance_bps = md_QueryQuoteSwapRequest.Fields().ByName("liquidity_tolerance_bps")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSwapRequest)(nil)

type fastReflection_QueryQuoteSwapRequest QueryQuoteSwapRequest

func (x *QueryQuoteSwapRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSwapRequest)(x)
}

func (x *QueryQuoteSwapRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSwapRequest_messageType fastReflection_QueryQuoteSwapRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSwapRequest_messageType{}

type fastReflection_QueryQuoteSwapRequest_messageType struct{}

func (x fastReflection_QueryQuoteSwapRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSwapRequest)(nil)
}
func (x fastReflection_QueryQuoteSwapRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSwapRequest)
}
func (x fastReflection_QueryQuoteSwapRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSwapRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSwapRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSwapRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSwapRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSwapRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSwapRequest) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSwapRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSwapRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSwapRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSwapRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FromAsset != "" {
		value := protoreflect.ValueOfString(x.FromAsset)
		if !f(fd_QueryQuoteSwapRequest_from_asset, value) {
			return
		}
	}
	if x.ToAsset != "" {
		value := protoreflect.ValueOfString(x.ToAsset)
		if !f(fd_QueryQuoteSwapRequest_to_asset, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_QueryQuoteSwapRequest_amount, value) {
			return
		}
	}
	if x.StreamingInterval != "" {
		value := protoreflect.ValueOfString(x.StreamingInterval)
		if !f(fd_QueryQuoteSwapRequest_streaming_interval, value) {
			return
		}
	}
	if x.StreamingQuantity != "" {
		value := protoreflect.ValueOfString(x.StreamingQuantity)
		if !f(fd_QueryQuoteSwapRequest_streaming_quantity, value) {
			return
		}
	}
	if x.Destination != "" {
		value := protoreflect.ValueOfString(x.Destination)
		if !f(fd_QueryQuoteSwapRequest_destination, value) {
			return
		}
	}
	if x.ToleranceBps != "" {
		value := protoreflect.ValueOfString(x.ToleranceBps)
		if !f(fd_QueryQuoteSwapRequest_tolerance_bps, value) {
			return
		}
	}
	if x.RefundAddress != "" {
		value := protoreflect.ValueOfString(x.RefundAddress)
		if !f(fd_QueryQuoteSwapRequest_refund_address, value) {
			return
		}
	}
	if len(x.Affiliate) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteSwapRequest_9_list{list: &x.Affiliate})
		if !f(fd_QueryQuoteSwapRequest_affiliate, value) {
			return
		}
	}
	if len(x.AffiliateBps) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteSwapRequest_10_list{list: &x.AffiliateBps})
		if !f(fd_QueryQuoteSwapRequest_affiliate_bps, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryQuoteSwapRequest_height, value) {
			return
		}
	}
	if x.LiquidityToleranceBps != "" {
		value := protoreflect.ValueOfString(x.LiquidityToleranceBps)
		if !f(fd_QueryQuoteSwapRequest_liquidity_tolerance_bps, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSwapRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSwapRequest.from_asset":
		return x.FromAsset != ""
	case "types.QueryQuoteSwapRequest.to_asset":
		return x.ToAsset != ""
	case "types.QueryQuoteSwapRequest.amount":
		return x.Amount != ""
	case "types.QueryQuoteSwapRequest.streaming_interval":
		return x.StreamingInterval != ""
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		return x.StreamingQuantity != ""
	case "types.QueryQuoteSwapRequest.destination":
		return x.Destination != ""
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		return x.ToleranceBps != ""
	case "types.QueryQuoteSwapRequest.refund_address":
		return x.RefundAddress != ""
	case "types.QueryQuoteSwapRequest.affiliate":
		return len(x.Affiliate) != 0
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		return len(x.AffiliateBps) != 0
	case "types.QueryQuoteSwapRequest.height":
		return x.Height != ""
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		return x.LiquidityToleranceBps != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSwapRequest.from_asset":
		x.FromAsset = ""
	case "types.QueryQuoteSwapRequest.to_asset":
		x.ToAsset = ""
	case "types.QueryQuoteSwapRequest.amount":
		x.Amount = ""
	case "types.QueryQuoteSwapRequest.streaming_interval":
		x.StreamingInterval = ""
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		x.StreamingQuantity = ""
	case "types.QueryQuoteSwapRequest.destination":
		x.Destination = ""
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		x.ToleranceBps = ""
	case "types.QueryQuoteSwapRequest.refund_address":
		x.RefundAddress = ""
	case "types.QueryQuoteSwapRequest.affiliate":
		x.Affiliate = nil
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		x.AffiliateBps = nil
	case "types.QueryQuoteSwapRequest.height":
		x.Height = ""
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		x.LiquidityToleranceBps = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSwapRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSwapRequest.from_asset":
		value := x.FromAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.to_asset":
		value := x.ToAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.streaming_interval":
		value := x.StreamingInterval
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		value := x.StreamingQuantity
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.destination":
		value := x.Destination
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		value := x.ToleranceBps
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.refund_address":
		value := x.RefundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.affiliate":
		if len(x.Affiliate) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteSwapRequest_9_list{})
		}
		listValue := &_QueryQuoteSwapRequest_9_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		if len(x.AffiliateBps) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteSwapRequest_10_list{})
		}
		listValue := &_QueryQuoteSwapRequest_10_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteSwapRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		value := x.LiquidityToleranceBps
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSwapRequest.from_asset":
		x.FromAsset = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.to_asset":
		x.ToAsset = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.amount":
		x.Amount = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.streaming_interval":
		x.StreamingInterval = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		x.StreamingQuantity = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.destination":
		x.Destination = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		x.ToleranceBps = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.refund_address":
		x.RefundAddress = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.affiliate":
		lv := value.List()
		clv := lv.(*_QueryQuoteSwapRequest_9_list)
		x.Affiliate = *clv.list
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		lv := value.List()
		clv := lv.(*_QueryQuoteSwapRequest_10_list)
		x.AffiliateBps = *clv.list
	case "types.QueryQuoteSwapRequest.height":
		x.Height = value.Interface().(string)
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		x.LiquidityToleranceBps = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSwapRequest.affiliate":
		if x.Affiliate == nil {
			x.Affiliate = []string{}
		}
		value := &_QueryQuoteSwapRequest_9_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		if x.AffiliateBps == nil {
			x.AffiliateBps = []string{}
		}
		value := &_QueryQuoteSwapRequest_10_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteSwapRequest.from_asset":
		panic(fmt.Errorf("field from_asset of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.to_asset":
		panic(fmt.Errorf("field to_asset of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.amount":
		panic(fmt.Errorf("field amount of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.streaming_interval":
		panic(fmt.Errorf("field streaming_interval of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		panic(fmt.Errorf("field streaming_quantity of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.destination":
		panic(fmt.Errorf("field destination of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		panic(fmt.Errorf("field tolerance_bps of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.refund_address":
		panic(fmt.Errorf("field refund_address of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.height":
		panic(fmt.Errorf("field height of message types.QueryQuoteSwapRequest is not mutable"))
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		panic(fmt.Errorf("field liquidity_tolerance_bps of message types.QueryQuoteSwapRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSwapRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSwapRequest.from_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.to_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.amount":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.streaming_interval":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.streaming_quantity":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.destination":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.tolerance_bps":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.refund_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.affiliate":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteSwapRequest_9_list{list: &list})
	case "types.QueryQuoteSwapRequest.affiliate_bps":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteSwapRequest_10_list{list: &list})
	case "types.QueryQuoteSwapRequest.height":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapRequest.liquidity_tolerance_bps":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSwapRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSwapRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSwapRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSwapRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSwapRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSwapRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FromAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StreamingInterval)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StreamingQuantity)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Destination)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToleranceBps)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RefundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Affiliate) > 0 {
			for _, s := range x.Affiliate {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AffiliateBps) > 0 {
			for _, s := range x.AffiliateBps {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LiquidityToleranceBps)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSwapRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LiquidityToleranceBps) > 0 {
			i -= len(x.LiquidityToleranceBps)
			copy(dAtA[i:], x.LiquidityToleranceBps)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LiquidityToleranceBps)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.AffiliateBps) > 0 {
			for iNdEx := len(x.AffiliateBps) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.AffiliateBps[iNdEx])
				copy(dAtA[i:], x.AffiliateBps[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AffiliateBps[iNdEx])))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.Affiliate) > 0 {
			for iNdEx := len(x.Affiliate) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Affiliate[iNdEx])
				copy(dAtA[i:], x.Affiliate[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Affiliate[iNdEx])))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.RefundAddress) > 0 {
			i -= len(x.RefundAddress)
			copy(dAtA[i:], x.RefundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RefundAddress)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ToleranceBps) > 0 {
			i -= len(x.ToleranceBps)
			copy(dAtA[i:], x.ToleranceBps)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToleranceBps)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Destination) > 0 {
			i -= len(x.Destination)
			copy(dAtA[i:], x.Destination)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Destination)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.StreamingQuantity) > 0 {
			i -= len(x.StreamingQuantity)
			copy(dAtA[i:], x.StreamingQuantity)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StreamingQuantity)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.StreamingInterval) > 0 {
			i -= len(x.StreamingInterval)
			copy(dAtA[i:], x.StreamingInterval)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StreamingInterval)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ToAsset) > 0 {
			i -= len(x.ToAsset)
			copy(dAtA[i:], x.ToAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToAsset)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FromAsset) > 0 {
			i -= len(x.FromAsset)
			copy(dAtA[i:], x.FromAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromAsset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSwapRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSwapRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSwapRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingInterval", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StreamingInterval = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingQuantity", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StreamingQuantity = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Destination = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToleranceBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToleranceBps = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RefundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RefundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Affiliate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Affiliate = append(x.Affiliate, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AffiliateBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AffiliateBps = append(x.AffiliateBps, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LiquidityToleranceBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LiquidityToleranceBps = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteSwapResponse                              protoreflect.MessageDescriptor
	fd_QueryQuoteSwapResponse_inbound_address              protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_inbound_confirmation_blocks  protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_inbound_confirmation_seconds protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_outbound_delay_blocks        protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_outbound_delay_seconds       protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_fees                         protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_router                       protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_expiry                       protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_warning                      protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_notes                        protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_dust_threshold               protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_recommended_min_amount_in    protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_recommended_gas_rate         protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_gas_rate_units               protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_memo                         protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_expected_amount_out          protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_max_streaming_quantity       protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_streaming_swap_blocks        protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_streaming_swap_seconds       protoreflect.FieldDescriptor
	fd_QueryQuoteSwapResponse_total_swap_seconds           protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSwapResponse = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSwapResponse")
	fd_QueryQuoteSwapResponse_inbound_address = md_QueryQuoteSwapResponse.Fields().ByName("inbound_address")
	fd_QueryQuoteSwapResponse_inbound_confirmation_blocks = md_QueryQuoteSwapResponse.Fields().ByName("inbound_confirmation_blocks")
	fd_QueryQuoteSwapResponse_inbound_confirmation_seconds = md_QueryQuoteSwapResponse.Fields().ByName("inbound_confirmation_seconds")
	fd_QueryQuoteSwapResponse_outbound_delay_blocks = md_QueryQuoteSwapResponse.Fields().ByName("outbound_delay_blocks")
	fd_QueryQuoteSwapResponse_outbound_delay_seconds = md_QueryQuoteSwapResponse.Fields().ByName("outbound_delay_seconds")
	fd_QueryQuoteSwapResponse_fees = md_QueryQuoteSwapResponse.Fields().ByName("fees")
	fd_QueryQuoteSwapResponse_router = md_QueryQuoteSwapResponse.Fields().ByName("router")
	fd_QueryQuoteSwapResponse_expiry = md_QueryQuoteSwapResponse.Fields().ByName("expiry")
	fd_QueryQuoteSwapResponse_warning = md_QueryQuoteSwapResponse.Fields().ByName("warning")
	fd_QueryQuoteSwapResponse_notes = md_QueryQuoteSwapResponse.Fields().ByName("notes")
	fd_QueryQuoteSwapResponse_dust_threshold = md_QueryQuoteSwapResponse.Fields().ByName("dust_threshold")
	fd_QueryQuoteSwapResponse_recommended_min_amount_in = md_QueryQuoteSwapResponse.Fields().ByName("recommended_min_amount_in")
	fd_QueryQuoteSwapResponse_recommended_gas_rate = md_QueryQuoteSwapResponse.Fields().ByName("recommended_gas_rate")
	fd_QueryQuoteSwapResponse_gas_rate_units = md_QueryQuoteSwapResponse.Fields().ByName("gas_rate_units")
	fd_QueryQuoteSwapResponse_memo = md_QueryQuoteSwapResponse.Fields().ByName("memo")
	fd_QueryQuoteSwapResponse_expected_amount_out = md_QueryQuoteSwapResponse.Fields().ByName("expected_amount_out")
	fd_QueryQuoteSwapResponse_max_streaming_quantity = md_QueryQuoteSwapResponse.Fields().ByName("max_streaming_quantity")
	fd_QueryQuoteSwapResponse_streaming_swap_blocks = md_QueryQuoteSwapResponse.Fields().ByName("streaming_swap_blocks")
	fd_QueryQuoteSwapResponse_streaming_swap_seconds = md_QueryQuoteSwapResponse.Fields().ByName("streaming_swap_seconds")
	fd_QueryQuoteSwapResponse_total_swap_seconds = md_QueryQuoteSwapResponse.Fields().ByName("total_swap_seconds")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSwapResponse)(nil)

type fastReflection_QueryQuoteSwapResponse QueryQuoteSwapResponse

func (x *QueryQuoteSwapResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSwapResponse)(x)
}

func (x *QueryQuoteSwapResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSwapResponse_messageType fastReflection_QueryQuoteSwapResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSwapResponse_messageType{}

type fastReflection_QueryQuoteSwapResponse_messageType struct{}

func (x fastReflection_QueryQuoteSwapResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSwapResponse)(nil)
}
func (x fastReflection_QueryQuoteSwapResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSwapResponse)
}
func (x fastReflection_QueryQuoteSwapResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSwapResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSwapResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSwapResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSwapResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSwapResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSwapResponse) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSwapResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSwapResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSwapResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSwapResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundAddress != "" {
		value := protoreflect.ValueOfString(x.InboundAddress)
		if !f(fd_QueryQuoteSwapResponse_inbound_address, value) {
			return
		}
	}
	if x.InboundConfirmationBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationBlocks)
		if !f(fd_QueryQuoteSwapResponse_inbound_confirmation_blocks, value) {
			return
		}
	}
	if x.InboundConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationSeconds)
		if !f(fd_QueryQuoteSwapResponse_inbound_confirmation_seconds, value) {
			return
		}
	}
	if x.OutboundDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelayBlocks)
		if !f(fd_QueryQuoteSwapResponse_outbound_delay_blocks, value) {
			return
		}
	}
	if x.OutboundDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelaySeconds)
		if !f(fd_QueryQuoteSwapResponse_outbound_delay_seconds, value) {
			return
		}
	}
	if x.Fees != nil {
		value := protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
		if !f(fd_QueryQuoteSwapResponse_fees, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryQuoteSwapResponse_router, value) {
			return
		}
	}
	if x.Expiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.Expiry)
		if !f(fd_QueryQuoteSwapResponse_expiry, value) {
			return
		}
	}
	if x.Warning != "" {
		value := protoreflect.ValueOfString(x.Warning)
		if !f(fd_QueryQuoteSwapResponse_warning, value) {
			return
		}
	}
	if x.Notes != "" {
		value := protoreflect.ValueOfString(x.Notes)
		if !f(fd_QueryQuoteSwapResponse_notes, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryQuoteSwapResponse_dust_threshold, value) {
			return
		}
	}
	if x.RecommendedMinAmountIn != "" {
		value := protoreflect.ValueOfString(x.RecommendedMinAmountIn)
		if !f(fd_QueryQuoteSwapResponse_recommended_min_amount_in, value) {
			return
		}
	}
	if x.RecommendedGasRate != "" {
		value := protoreflect.ValueOfString(x.RecommendedGasRate)
		if !f(fd_QueryQuoteSwapResponse_recommended_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryQuoteSwapResponse_gas_rate_units, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_QueryQuoteSwapResponse_memo, value) {
			return
		}
	}
	if x.ExpectedAmountOut != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountOut)
		if !f(fd_QueryQuoteSwapResponse_expected_amount_out, value) {
			return
		}
	}
	if x.MaxStreamingQuantity != int64(0) {
		value := protoreflect.ValueOfInt64(x.MaxStreamingQuantity)
		if !f(fd_QueryQuoteSwapResponse_max_streaming_quantity, value) {
			return
		}
	}
	if x.StreamingSwapBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapBlocks)
		if !f(fd_QueryQuoteSwapResponse_streaming_swap_blocks, value) {
			return
		}
	}
	if x.StreamingSwapSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapSeconds)
		if !f(fd_QueryQuoteSwapResponse_streaming_swap_seconds, value) {
			return
		}
	}
	if x.TotalSwapSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalSwapSeconds)
		if !f(fd_QueryQuoteSwapResponse_total_swap_seconds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSwapResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSwapResponse.inbound_address":
		return x.InboundAddress != ""
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		return x.InboundConfirmationBlocks != int64(0)
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		return x.InboundConfirmationSeconds != int64(0)
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		return x.OutboundDelayBlocks != int64(0)
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		return x.OutboundDelaySeconds != int64(0)
	case "types.QueryQuoteSwapResponse.fees":
		return x.Fees != nil
	case "types.QueryQuoteSwapResponse.router":
		return x.Router != ""
	case "types.QueryQuoteSwapResponse.expiry":
		return x.Expiry != int64(0)
	case "types.QueryQuoteSwapResponse.warning":
		return x.Warning != ""
	case "types.QueryQuoteSwapResponse.notes":
		return x.Notes != ""
	case "types.QueryQuoteSwapResponse.dust_threshold":
		return x.DustThreshold != ""
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		return x.RecommendedMinAmountIn != ""
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		return x.RecommendedGasRate != ""
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryQuoteSwapResponse.memo":
		return x.Memo != ""
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		return x.ExpectedAmountOut != ""
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		return x.MaxStreamingQuantity != int64(0)
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		return x.StreamingSwapBlocks != int64(0)
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		return x.StreamingSwapSeconds != int64(0)
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		return x.TotalSwapSeconds != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSwapResponse.inbound_address":
		x.InboundAddress = ""
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = int64(0)
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = int64(0)
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = int64(0)
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = int64(0)
	case "types.QueryQuoteSwapResponse.fees":
		x.Fees = nil
	case "types.QueryQuoteSwapResponse.router":
		x.Router = ""
	case "types.QueryQuoteSwapResponse.expiry":
		x.Expiry = int64(0)
	case "types.QueryQuoteSwapResponse.warning":
		x.Warning = ""
	case "types.QueryQuoteSwapResponse.notes":
		x.Notes = ""
	case "types.QueryQuoteSwapResponse.dust_threshold":
		x.DustThreshold = ""
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = ""
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		x.RecommendedGasRate = ""
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryQuoteSwapResponse.memo":
		x.Memo = ""
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		x.ExpectedAmountOut = ""
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		x.MaxStreamingQuantity = int64(0)
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = int64(0)
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = int64(0)
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		x.TotalSwapSeconds = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSwapResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSwapResponse.inbound_address":
		value := x.InboundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		value := x.InboundConfirmationBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		value := x.InboundConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		value := x.OutboundDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		value := x.OutboundDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.fees":
		value := x.Fees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryQuoteSwapResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.expiry":
		value := x.Expiry
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.warning":
		value := x.Warning
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.notes":
		value := x.Notes
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		value := x.RecommendedMinAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		value := x.RecommendedGasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		value := x.ExpectedAmountOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		value := x.MaxStreamingQuantity
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		value := x.StreamingSwapBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		value := x.StreamingSwapSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		value := x.TotalSwapSeconds
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSwapResponse.inbound_address":
		x.InboundAddress = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = value.Int()
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = value.Int()
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = value.Int()
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = value.Int()
	case "types.QueryQuoteSwapResponse.fees":
		x.Fees = value.Message().Interface().(*QuoteFees)
	case "types.QueryQuoteSwapResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.expiry":
		x.Expiry = value.Int()
	case "types.QueryQuoteSwapResponse.warning":
		x.Warning = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.notes":
		x.Notes = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		x.RecommendedGasRate = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.memo":
		x.Memo = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		x.ExpectedAmountOut = value.Interface().(string)
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		x.MaxStreamingQuantity = value.Int()
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = value.Int()
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = value.Int()
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		x.TotalSwapSeconds = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSwapResponse.fees":
		if x.Fees == nil {
			x.Fees = new(QuoteFees)
		}
		return protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
	case "types.QueryQuoteSwapResponse.inbound_address":
		panic(fmt.Errorf("field inbound_address of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		panic(fmt.Errorf("field inbound_confirmation_blocks of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		panic(fmt.Errorf("field inbound_confirmation_seconds of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		panic(fmt.Errorf("field outbound_delay_blocks of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		panic(fmt.Errorf("field outbound_delay_seconds of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.router":
		panic(fmt.Errorf("field router of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.expiry":
		panic(fmt.Errorf("field expiry of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.warning":
		panic(fmt.Errorf("field warning of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.notes":
		panic(fmt.Errorf("field notes of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		panic(fmt.Errorf("field recommended_min_amount_in of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		panic(fmt.Errorf("field recommended_gas_rate of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.memo":
		panic(fmt.Errorf("field memo of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		panic(fmt.Errorf("field expected_amount_out of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		panic(fmt.Errorf("field max_streaming_quantity of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		panic(fmt.Errorf("field streaming_swap_blocks of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		panic(fmt.Errorf("field streaming_swap_seconds of message types.QueryQuoteSwapResponse is not mutable"))
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		panic(fmt.Errorf("field total_swap_seconds of message types.QueryQuoteSwapResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSwapResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSwapResponse.inbound_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.inbound_confirmation_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.inbound_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.outbound_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.outbound_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.fees":
		m := new(QuoteFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryQuoteSwapResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.expiry":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.warning":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.notes":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.recommended_min_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.recommended_gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.memo":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.expected_amount_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSwapResponse.max_streaming_quantity":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.streaming_swap_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.streaming_swap_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSwapResponse.total_swap_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSwapResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSwapResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSwapResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSwapResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSwapResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSwapResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSwapResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSwapResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSwapResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InboundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationBlocks))
		}
		if x.InboundConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationSeconds))
		}
		if x.OutboundDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelayBlocks))
		}
		if x.OutboundDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelaySeconds))
		}
		if x.Fees != nil {
			l = options.Size(x.Fees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiry != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiry))
		}
		l = len(x.Warning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Notes)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedMinAmountIn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedGasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountOut)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.MaxStreamingQuantity != 0 {
			n += 2 + runtime.Sov(uint64(x.MaxStreamingQuantity))
		}
		if x.StreamingSwapBlocks != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapBlocks))
		}
		if x.StreamingSwapSeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapSeconds))
		}
		if x.TotalSwapSeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.TotalSwapSeconds))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSwapResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalSwapSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalSwapSeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa0
		}
		if x.StreamingSwapSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapSeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x98
		}
		if x.StreamingSwapBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapBlocks))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x90
		}
		if x.MaxStreamingQuantity != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxStreamingQuantity))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if len(x.ExpectedAmountOut) > 0 {
			i -= len(x.ExpectedAmountOut)
			copy(dAtA[i:], x.ExpectedAmountOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountOut)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.RecommendedGasRate) > 0 {
			i -= len(x.RecommendedGasRate)
			copy(dAtA[i:], x.RecommendedGasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedGasRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.RecommendedMinAmountIn) > 0 {
			i -= len(x.RecommendedMinAmountIn)
			copy(dAtA[i:], x.RecommendedMinAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedMinAmountIn)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Notes) > 0 {
			i -= len(x.Notes)
			copy(dAtA[i:], x.Notes)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Notes)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Warning) > 0 {
			i -= len(x.Warning)
			copy(dAtA[i:], x.Warning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Warning)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Expiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiry))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fees != nil {
			encoded, err := options.Marshal(x.Fees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.OutboundDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelaySeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.OutboundDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelayBlocks))
			i--
			dAtA[i] = 0x20
		}
		if x.InboundConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationSeconds))
			i--
			dAtA[i] = 0x18
		}
		if x.InboundConfirmationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationBlocks))
			i--
			dAtA[i] = 0x10
		}
		if len(x.InboundAddress) > 0 {
			i -= len(x.InboundAddress)
			copy(dAtA[i:], x.InboundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InboundAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSwapResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSwapResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSwapResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationBlocks", wireType)
				}
				x.InboundConfirmationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationSeconds", wireType)
				}
				x.InboundConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelayBlocks", wireType)
				}
				x.OutboundDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelaySeconds", wireType)
				}
				x.OutboundDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fees == nil {
					x.Fees = &QuoteFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
				}
				x.Expiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Warning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Warning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Notes = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedMinAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedMinAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedGasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedGasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxStreamingQuantity", wireType)
				}
				x.MaxStreamingQuantity = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxStreamingQuantity |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 18:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapBlocks", wireType)
				}
				x.StreamingSwapBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 19:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapSeconds", wireType)
				}
				x.StreamingSwapSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 20:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalSwapSeconds", wireType)
				}
				x.TotalSwapSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalSwapSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryQuoteSaverDepositRequest_3_list)(nil)

type _QueryQuoteSaverDepositRequest_3_list struct {
	list *[]string
}

func (x *_QueryQuoteSaverDepositRequest_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteSaverDepositRequest_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteSaverDepositRequest_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteSaverDepositRequest_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteSaverDepositRequest_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteSaverDepositRequest at list field Affiliate as it is not of Message kind"))
}

func (x *_QueryQuoteSaverDepositRequest_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteSaverDepositRequest_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteSaverDepositRequest_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryQuoteSaverDepositRequest_4_list)(nil)

type _QueryQuoteSaverDepositRequest_4_list struct {
	list *[]string
}

func (x *_QueryQuoteSaverDepositRequest_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteSaverDepositRequest_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteSaverDepositRequest_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteSaverDepositRequest_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteSaverDepositRequest_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteSaverDepositRequest at list field AffiliateBps as it is not of Message kind"))
}

func (x *_QueryQuoteSaverDepositRequest_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteSaverDepositRequest_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteSaverDepositRequest_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryQuoteSaverDepositRequest               protoreflect.MessageDescriptor
	fd_QueryQuoteSaverDepositRequest_asset         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositRequest_amount        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositRequest_affiliate     protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositRequest_affiliate_bps protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositRequest_height        protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSaverDepositRequest = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSaverDepositRequest")
	fd_QueryQuoteSaverDepositRequest_asset = md_QueryQuoteSaverDepositRequest.Fields().ByName("asset")
	fd_QueryQuoteSaverDepositRequest_amount = md_QueryQuoteSaverDepositRequest.Fields().ByName("amount")
	fd_QueryQuoteSaverDepositRequest_affiliate = md_QueryQuoteSaverDepositRequest.Fields().ByName("affiliate")
	fd_QueryQuoteSaverDepositRequest_affiliate_bps = md_QueryQuoteSaverDepositRequest.Fields().ByName("affiliate_bps")
	fd_QueryQuoteSaverDepositRequest_height = md_QueryQuoteSaverDepositRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSaverDepositRequest)(nil)

type fastReflection_QueryQuoteSaverDepositRequest QueryQuoteSaverDepositRequest

func (x *QueryQuoteSaverDepositRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverDepositRequest)(x)
}

func (x *QueryQuoteSaverDepositRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSaverDepositRequest_messageType fastReflection_QueryQuoteSaverDepositRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSaverDepositRequest_messageType{}

type fastReflection_QueryQuoteSaverDepositRequest_messageType struct{}

func (x fastReflection_QueryQuoteSaverDepositRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverDepositRequest)(nil)
}
func (x fastReflection_QueryQuoteSaverDepositRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverDepositRequest)
}
func (x fastReflection_QueryQuoteSaverDepositRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverDepositRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverDepositRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSaverDepositRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSaverDepositRequest) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverDepositRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSaverDepositRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Asset != "" {
		value := protoreflect.ValueOfString(x.Asset)
		if !f(fd_QueryQuoteSaverDepositRequest_asset, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_QueryQuoteSaverDepositRequest_amount, value) {
			return
		}
	}
	if len(x.Affiliate) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_3_list{list: &x.Affiliate})
		if !f(fd_QueryQuoteSaverDepositRequest_affiliate, value) {
			return
		}
	}
	if len(x.AffiliateBps) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_4_list{list: &x.AffiliateBps})
		if !f(fd_QueryQuoteSaverDepositRequest_affiliate_bps, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryQuoteSaverDepositRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositRequest.asset":
		return x.Asset != ""
	case "types.QueryQuoteSaverDepositRequest.amount":
		return x.Amount != ""
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		return len(x.Affiliate) != 0
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		return len(x.AffiliateBps) != 0
	case "types.QueryQuoteSaverDepositRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositRequest.asset":
		x.Asset = ""
	case "types.QueryQuoteSaverDepositRequest.amount":
		x.Amount = ""
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		x.Affiliate = nil
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		x.AffiliateBps = nil
	case "types.QueryQuoteSaverDepositRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSaverDepositRequest.asset":
		value := x.Asset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositRequest.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		if len(x.Affiliate) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_3_list{})
		}
		listValue := &_QueryQuoteSaverDepositRequest_3_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		if len(x.AffiliateBps) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_4_list{})
		}
		listValue := &_QueryQuoteSaverDepositRequest_4_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteSaverDepositRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositRequest.asset":
		x.Asset = value.Interface().(string)
	case "types.QueryQuoteSaverDepositRequest.amount":
		x.Amount = value.Interface().(string)
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		lv := value.List()
		clv := lv.(*_QueryQuoteSaverDepositRequest_3_list)
		x.Affiliate = *clv.list
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		lv := value.List()
		clv := lv.(*_QueryQuoteSaverDepositRequest_4_list)
		x.AffiliateBps = *clv.list
	case "types.QueryQuoteSaverDepositRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		if x.Affiliate == nil {
			x.Affiliate = []string{}
		}
		value := &_QueryQuoteSaverDepositRequest_3_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		if x.AffiliateBps == nil {
			x.AffiliateBps = []string{}
		}
		value := &_QueryQuoteSaverDepositRequest_4_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteSaverDepositRequest.asset":
		panic(fmt.Errorf("field asset of message types.QueryQuoteSaverDepositRequest is not mutable"))
	case "types.QueryQuoteSaverDepositRequest.amount":
		panic(fmt.Errorf("field amount of message types.QueryQuoteSaverDepositRequest is not mutable"))
	case "types.QueryQuoteSaverDepositRequest.height":
		panic(fmt.Errorf("field height of message types.QueryQuoteSaverDepositRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSaverDepositRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositRequest.asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositRequest.amount":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositRequest.affiliate":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_3_list{list: &list})
	case "types.QueryQuoteSaverDepositRequest.affiliate_bps":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteSaverDepositRequest_4_list{list: &list})
	case "types.QueryQuoteSaverDepositRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSaverDepositRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSaverDepositRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSaverDepositRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSaverDepositRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSaverDepositRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSaverDepositRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Asset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Affiliate) > 0 {
			for _, s := range x.Affiliate {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AffiliateBps) > 0 {
			for _, s := range x.AffiliateBps {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverDepositRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.AffiliateBps) > 0 {
			for iNdEx := len(x.AffiliateBps) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.AffiliateBps[iNdEx])
				copy(dAtA[i:], x.AffiliateBps[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AffiliateBps[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Affiliate) > 0 {
			for iNdEx := len(x.Affiliate) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Affiliate[iNdEx])
				copy(dAtA[i:], x.Affiliate[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Affiliate[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Asset) > 0 {
			i -= len(x.Asset)
			copy(dAtA[i:], x.Asset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Asset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverDepositRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverDepositRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverDepositRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Asset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Affiliate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Affiliate = append(x.Affiliate, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AffiliateBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AffiliateBps = append(x.AffiliateBps, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteSaverDepositResponse                              protoreflect.MessageDescriptor
	fd_QueryQuoteSaverDepositResponse_inbound_address              protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_inbound_confirmation_blocks  protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_inbound_confirmation_seconds protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_outbound_delay_blocks        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_outbound_delay_seconds       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_fees                         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_router                       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_expiry                       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_warning                      protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_notes                        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_dust_threshold               protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_recommended_min_amount_in    protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_recommended_gas_rate         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_gas_rate_units               protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_memo                         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_expected_amount_out          protoreflect.FieldDescriptor
	fd_QueryQuoteSaverDepositResponse_expected_amount_deposit      protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSaverDepositResponse = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSaverDepositResponse")
	fd_QueryQuoteSaverDepositResponse_inbound_address = md_QueryQuoteSaverDepositResponse.Fields().ByName("inbound_address")
	fd_QueryQuoteSaverDepositResponse_inbound_confirmation_blocks = md_QueryQuoteSaverDepositResponse.Fields().ByName("inbound_confirmation_blocks")
	fd_QueryQuoteSaverDepositResponse_inbound_confirmation_seconds = md_QueryQuoteSaverDepositResponse.Fields().ByName("inbound_confirmation_seconds")
	fd_QueryQuoteSaverDepositResponse_outbound_delay_blocks = md_QueryQuoteSaverDepositResponse.Fields().ByName("outbound_delay_blocks")
	fd_QueryQuoteSaverDepositResponse_outbound_delay_seconds = md_QueryQuoteSaverDepositResponse.Fields().ByName("outbound_delay_seconds")
	fd_QueryQuoteSaverDepositResponse_fees = md_QueryQuoteSaverDepositResponse.Fields().ByName("fees")
	fd_QueryQuoteSaverDepositResponse_router = md_QueryQuoteSaverDepositResponse.Fields().ByName("router")
	fd_QueryQuoteSaverDepositResponse_expiry = md_QueryQuoteSaverDepositResponse.Fields().ByName("expiry")
	fd_QueryQuoteSaverDepositResponse_warning = md_QueryQuoteSaverDepositResponse.Fields().ByName("warning")
	fd_QueryQuoteSaverDepositResponse_notes = md_QueryQuoteSaverDepositResponse.Fields().ByName("notes")
	fd_QueryQuoteSaverDepositResponse_dust_threshold = md_QueryQuoteSaverDepositResponse.Fields().ByName("dust_threshold")
	fd_QueryQuoteSaverDepositResponse_recommended_min_amount_in = md_QueryQuoteSaverDepositResponse.Fields().ByName("recommended_min_amount_in")
	fd_QueryQuoteSaverDepositResponse_recommended_gas_rate = md_QueryQuoteSaverDepositResponse.Fields().ByName("recommended_gas_rate")
	fd_QueryQuoteSaverDepositResponse_gas_rate_units = md_QueryQuoteSaverDepositResponse.Fields().ByName("gas_rate_units")
	fd_QueryQuoteSaverDepositResponse_memo = md_QueryQuoteSaverDepositResponse.Fields().ByName("memo")
	fd_QueryQuoteSaverDepositResponse_expected_amount_out = md_QueryQuoteSaverDepositResponse.Fields().ByName("expected_amount_out")
	fd_QueryQuoteSaverDepositResponse_expected_amount_deposit = md_QueryQuoteSaverDepositResponse.Fields().ByName("expected_amount_deposit")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSaverDepositResponse)(nil)

type fastReflection_QueryQuoteSaverDepositResponse QueryQuoteSaverDepositResponse

func (x *QueryQuoteSaverDepositResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverDepositResponse)(x)
}

func (x *QueryQuoteSaverDepositResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSaverDepositResponse_messageType fastReflection_QueryQuoteSaverDepositResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSaverDepositResponse_messageType{}

type fastReflection_QueryQuoteSaverDepositResponse_messageType struct{}

func (x fastReflection_QueryQuoteSaverDepositResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverDepositResponse)(nil)
}
func (x fastReflection_QueryQuoteSaverDepositResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverDepositResponse)
}
func (x fastReflection_QueryQuoteSaverDepositResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverDepositResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverDepositResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSaverDepositResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSaverDepositResponse) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverDepositResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSaverDepositResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundAddress != "" {
		value := protoreflect.ValueOfString(x.InboundAddress)
		if !f(fd_QueryQuoteSaverDepositResponse_inbound_address, value) {
			return
		}
	}
	if x.InboundConfirmationBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationBlocks)
		if !f(fd_QueryQuoteSaverDepositResponse_inbound_confirmation_blocks, value) {
			return
		}
	}
	if x.InboundConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationSeconds)
		if !f(fd_QueryQuoteSaverDepositResponse_inbound_confirmation_seconds, value) {
			return
		}
	}
	if x.OutboundDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelayBlocks)
		if !f(fd_QueryQuoteSaverDepositResponse_outbound_delay_blocks, value) {
			return
		}
	}
	if x.OutboundDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelaySeconds)
		if !f(fd_QueryQuoteSaverDepositResponse_outbound_delay_seconds, value) {
			return
		}
	}
	if x.Fees != nil {
		value := protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
		if !f(fd_QueryQuoteSaverDepositResponse_fees, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryQuoteSaverDepositResponse_router, value) {
			return
		}
	}
	if x.Expiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.Expiry)
		if !f(fd_QueryQuoteSaverDepositResponse_expiry, value) {
			return
		}
	}
	if x.Warning != "" {
		value := protoreflect.ValueOfString(x.Warning)
		if !f(fd_QueryQuoteSaverDepositResponse_warning, value) {
			return
		}
	}
	if x.Notes != "" {
		value := protoreflect.ValueOfString(x.Notes)
		if !f(fd_QueryQuoteSaverDepositResponse_notes, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryQuoteSaverDepositResponse_dust_threshold, value) {
			return
		}
	}
	if x.RecommendedMinAmountIn != "" {
		value := protoreflect.ValueOfString(x.RecommendedMinAmountIn)
		if !f(fd_QueryQuoteSaverDepositResponse_recommended_min_amount_in, value) {
			return
		}
	}
	if x.RecommendedGasRate != "" {
		value := protoreflect.ValueOfString(x.RecommendedGasRate)
		if !f(fd_QueryQuoteSaverDepositResponse_recommended_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryQuoteSaverDepositResponse_gas_rate_units, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_QueryQuoteSaverDepositResponse_memo, value) {
			return
		}
	}
	if x.ExpectedAmountOut != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountOut)
		if !f(fd_QueryQuoteSaverDepositResponse_expected_amount_out, value) {
			return
		}
	}
	if x.ExpectedAmountDeposit != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountDeposit)
		if !f(fd_QueryQuoteSaverDepositResponse_expected_amount_deposit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		return x.InboundAddress != ""
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		return x.InboundConfirmationBlocks != int64(0)
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		return x.InboundConfirmationSeconds != int64(0)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		return x.OutboundDelayBlocks != int64(0)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		return x.OutboundDelaySeconds != int64(0)
	case "types.QueryQuoteSaverDepositResponse.fees":
		return x.Fees != nil
	case "types.QueryQuoteSaverDepositResponse.router":
		return x.Router != ""
	case "types.QueryQuoteSaverDepositResponse.expiry":
		return x.Expiry != int64(0)
	case "types.QueryQuoteSaverDepositResponse.warning":
		return x.Warning != ""
	case "types.QueryQuoteSaverDepositResponse.notes":
		return x.Notes != ""
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		return x.DustThreshold != ""
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		return x.RecommendedMinAmountIn != ""
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		return x.RecommendedGasRate != ""
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryQuoteSaverDepositResponse.memo":
		return x.Memo != ""
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		return x.ExpectedAmountOut != ""
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		return x.ExpectedAmountDeposit != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		x.InboundAddress = ""
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = int64(0)
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = int64(0)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = int64(0)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = int64(0)
	case "types.QueryQuoteSaverDepositResponse.fees":
		x.Fees = nil
	case "types.QueryQuoteSaverDepositResponse.router":
		x.Router = ""
	case "types.QueryQuoteSaverDepositResponse.expiry":
		x.Expiry = int64(0)
	case "types.QueryQuoteSaverDepositResponse.warning":
		x.Warning = ""
	case "types.QueryQuoteSaverDepositResponse.notes":
		x.Notes = ""
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		x.DustThreshold = ""
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = ""
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		x.RecommendedGasRate = ""
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryQuoteSaverDepositResponse.memo":
		x.Memo = ""
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		x.ExpectedAmountOut = ""
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		x.ExpectedAmountDeposit = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		value := x.InboundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		value := x.InboundConfirmationBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		value := x.InboundConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		value := x.OutboundDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		value := x.OutboundDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverDepositResponse.fees":
		value := x.Fees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryQuoteSaverDepositResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.expiry":
		value := x.Expiry
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverDepositResponse.warning":
		value := x.Warning
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.notes":
		value := x.Notes
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		value := x.RecommendedMinAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		value := x.RecommendedGasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		value := x.ExpectedAmountOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		value := x.ExpectedAmountDeposit
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		x.InboundAddress = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = value.Int()
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = value.Int()
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = value.Int()
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = value.Int()
	case "types.QueryQuoteSaverDepositResponse.fees":
		x.Fees = value.Message().Interface().(*QuoteFees)
	case "types.QueryQuoteSaverDepositResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.expiry":
		x.Expiry = value.Int()
	case "types.QueryQuoteSaverDepositResponse.warning":
		x.Warning = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.notes":
		x.Notes = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		x.RecommendedGasRate = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.memo":
		x.Memo = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		x.ExpectedAmountOut = value.Interface().(string)
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		x.ExpectedAmountDeposit = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositResponse.fees":
		if x.Fees == nil {
			x.Fees = new(QuoteFees)
		}
		return protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		panic(fmt.Errorf("field inbound_address of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		panic(fmt.Errorf("field inbound_confirmation_blocks of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		panic(fmt.Errorf("field inbound_confirmation_seconds of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		panic(fmt.Errorf("field outbound_delay_blocks of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		panic(fmt.Errorf("field outbound_delay_seconds of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.router":
		panic(fmt.Errorf("field router of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.expiry":
		panic(fmt.Errorf("field expiry of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.warning":
		panic(fmt.Errorf("field warning of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.notes":
		panic(fmt.Errorf("field notes of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		panic(fmt.Errorf("field recommended_min_amount_in of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		panic(fmt.Errorf("field recommended_gas_rate of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.memo":
		panic(fmt.Errorf("field memo of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		panic(fmt.Errorf("field expected_amount_out of message types.QueryQuoteSaverDepositResponse is not mutable"))
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		panic(fmt.Errorf("field expected_amount_deposit of message types.QueryQuoteSaverDepositResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSaverDepositResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverDepositResponse.inbound_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverDepositResponse.inbound_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverDepositResponse.outbound_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverDepositResponse.fees":
		m := new(QuoteFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryQuoteSaverDepositResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.expiry":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverDepositResponse.warning":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.notes":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.recommended_min_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.recommended_gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.memo":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.expected_amount_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverDepositResponse.expected_amount_deposit":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverDepositResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverDepositResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSaverDepositResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSaverDepositResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSaverDepositResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverDepositResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSaverDepositResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSaverDepositResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSaverDepositResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InboundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationBlocks))
		}
		if x.InboundConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationSeconds))
		}
		if x.OutboundDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelayBlocks))
		}
		if x.OutboundDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelaySeconds))
		}
		if x.Fees != nil {
			l = options.Size(x.Fees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiry != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiry))
		}
		l = len(x.Warning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Notes)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedMinAmountIn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedGasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountOut)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountDeposit)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverDepositResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ExpectedAmountDeposit) > 0 {
			i -= len(x.ExpectedAmountDeposit)
			copy(dAtA[i:], x.ExpectedAmountDeposit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountDeposit)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.ExpectedAmountOut) > 0 {
			i -= len(x.ExpectedAmountOut)
			copy(dAtA[i:], x.ExpectedAmountOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountOut)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.RecommendedGasRate) > 0 {
			i -= len(x.RecommendedGasRate)
			copy(dAtA[i:], x.RecommendedGasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedGasRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.RecommendedMinAmountIn) > 0 {
			i -= len(x.RecommendedMinAmountIn)
			copy(dAtA[i:], x.RecommendedMinAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedMinAmountIn)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Notes) > 0 {
			i -= len(x.Notes)
			copy(dAtA[i:], x.Notes)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Notes)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Warning) > 0 {
			i -= len(x.Warning)
			copy(dAtA[i:], x.Warning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Warning)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Expiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiry))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fees != nil {
			encoded, err := options.Marshal(x.Fees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.OutboundDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelaySeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.OutboundDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelayBlocks))
			i--
			dAtA[i] = 0x20
		}
		if x.InboundConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationSeconds))
			i--
			dAtA[i] = 0x18
		}
		if x.InboundConfirmationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationBlocks))
			i--
			dAtA[i] = 0x10
		}
		if len(x.InboundAddress) > 0 {
			i -= len(x.InboundAddress)
			copy(dAtA[i:], x.InboundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InboundAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverDepositResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverDepositResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationBlocks", wireType)
				}
				x.InboundConfirmationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationSeconds", wireType)
				}
				x.InboundConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelayBlocks", wireType)
				}
				x.OutboundDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelaySeconds", wireType)
				}
				x.OutboundDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fees == nil {
					x.Fees = &QuoteFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
				}
				x.Expiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Warning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Warning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Notes = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedMinAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedMinAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedGasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedGasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountDeposit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountDeposit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteSaverWithdrawRequest              protoreflect.MessageDescriptor
	fd_QueryQuoteSaverWithdrawRequest_asset        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawRequest_address      protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawRequest_withdraw_bps protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawRequest_height       protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSaverWithdrawRequest = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSaverWithdrawRequest")
	fd_QueryQuoteSaverWithdrawRequest_asset = md_QueryQuoteSaverWithdrawRequest.Fields().ByName("asset")
	fd_QueryQuoteSaverWithdrawRequest_address = md_QueryQuoteSaverWithdrawRequest.Fields().ByName("address")
	fd_QueryQuoteSaverWithdrawRequest_withdraw_bps = md_QueryQuoteSaverWithdrawRequest.Fields().ByName("withdraw_bps")
	fd_QueryQuoteSaverWithdrawRequest_height = md_QueryQuoteSaverWithdrawRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSaverWithdrawRequest)(nil)

type fastReflection_QueryQuoteSaverWithdrawRequest QueryQuoteSaverWithdrawRequest

func (x *QueryQuoteSaverWithdrawRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverWithdrawRequest)(x)
}

func (x *QueryQuoteSaverWithdrawRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSaverWithdrawRequest_messageType fastReflection_QueryQuoteSaverWithdrawRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSaverWithdrawRequest_messageType{}

type fastReflection_QueryQuoteSaverWithdrawRequest_messageType struct{}

func (x fastReflection_QueryQuoteSaverWithdrawRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverWithdrawRequest)(nil)
}
func (x fastReflection_QueryQuoteSaverWithdrawRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverWithdrawRequest)
}
func (x fastReflection_QueryQuoteSaverWithdrawRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverWithdrawRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverWithdrawRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSaverWithdrawRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverWithdrawRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSaverWithdrawRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Asset != "" {
		value := protoreflect.ValueOfString(x.Asset)
		if !f(fd_QueryQuoteSaverWithdrawRequest_asset, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryQuoteSaverWithdrawRequest_address, value) {
			return
		}
	}
	if x.WithdrawBps != "" {
		value := protoreflect.ValueOfString(x.WithdrawBps)
		if !f(fd_QueryQuoteSaverWithdrawRequest_withdraw_bps, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryQuoteSaverWithdrawRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		return x.Asset != ""
	case "types.QueryQuoteSaverWithdrawRequest.address":
		return x.Address != ""
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		return x.WithdrawBps != ""
	case "types.QueryQuoteSaverWithdrawRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		x.Asset = ""
	case "types.QueryQuoteSaverWithdrawRequest.address":
		x.Address = ""
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		x.WithdrawBps = ""
	case "types.QueryQuoteSaverWithdrawRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		value := x.Asset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		value := x.WithdrawBps
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		x.Asset = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawRequest.address":
		x.Address = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		x.WithdrawBps = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		panic(fmt.Errorf("field asset of message types.QueryQuoteSaverWithdrawRequest is not mutable"))
	case "types.QueryQuoteSaverWithdrawRequest.address":
		panic(fmt.Errorf("field address of message types.QueryQuoteSaverWithdrawRequest is not mutable"))
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		panic(fmt.Errorf("field withdraw_bps of message types.QueryQuoteSaverWithdrawRequest is not mutable"))
	case "types.QueryQuoteSaverWithdrawRequest.height":
		panic(fmt.Errorf("field height of message types.QueryQuoteSaverWithdrawRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawRequest.asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawRequest.address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawRequest.withdraw_bps":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSaverWithdrawRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSaverWithdrawRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Asset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WithdrawBps)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.WithdrawBps) > 0 {
			i -= len(x.WithdrawBps)
			copy(dAtA[i:], x.WithdrawBps)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WithdrawBps)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Asset) > 0 {
			i -= len(x.Asset)
			copy(dAtA[i:], x.Asset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Asset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverWithdrawRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverWithdrawRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Asset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithdrawBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WithdrawBps = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteSaverWithdrawResponse                              protoreflect.MessageDescriptor
	fd_QueryQuoteSaverWithdrawResponse_inbound_address              protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_blocks  protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_seconds protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_outbound_delay_blocks        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_outbound_delay_seconds       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_fees                         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_router                       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_expiry                       protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_warning                      protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_notes                        protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_dust_threshold               protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_recommended_min_amount_in    protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_recommended_gas_rate         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_gas_rate_units               protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_memo                         protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_dust_amount                  protoreflect.FieldDescriptor
	fd_QueryQuoteSaverWithdrawResponse_expected_amount_out          protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteSaverWithdrawResponse = File_types_query_quotes_proto.Messages().ByName("QueryQuoteSaverWithdrawResponse")
	fd_QueryQuoteSaverWithdrawResponse_inbound_address = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("inbound_address")
	fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_blocks = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("inbound_confirmation_blocks")
	fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_seconds = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("inbound_confirmation_seconds")
	fd_QueryQuoteSaverWithdrawResponse_outbound_delay_blocks = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("outbound_delay_blocks")
	fd_QueryQuoteSaverWithdrawResponse_outbound_delay_seconds = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("outbound_delay_seconds")
	fd_QueryQuoteSaverWithdrawResponse_fees = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("fees")
	fd_QueryQuoteSaverWithdrawResponse_router = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("router")
	fd_QueryQuoteSaverWithdrawResponse_expiry = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("expiry")
	fd_QueryQuoteSaverWithdrawResponse_warning = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("warning")
	fd_QueryQuoteSaverWithdrawResponse_notes = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("notes")
	fd_QueryQuoteSaverWithdrawResponse_dust_threshold = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("dust_threshold")
	fd_QueryQuoteSaverWithdrawResponse_recommended_min_amount_in = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("recommended_min_amount_in")
	fd_QueryQuoteSaverWithdrawResponse_recommended_gas_rate = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("recommended_gas_rate")
	fd_QueryQuoteSaverWithdrawResponse_gas_rate_units = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("gas_rate_units")
	fd_QueryQuoteSaverWithdrawResponse_memo = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("memo")
	fd_QueryQuoteSaverWithdrawResponse_dust_amount = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("dust_amount")
	fd_QueryQuoteSaverWithdrawResponse_expected_amount_out = md_QueryQuoteSaverWithdrawResponse.Fields().ByName("expected_amount_out")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteSaverWithdrawResponse)(nil)

type fastReflection_QueryQuoteSaverWithdrawResponse QueryQuoteSaverWithdrawResponse

func (x *QueryQuoteSaverWithdrawResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverWithdrawResponse)(x)
}

func (x *QueryQuoteSaverWithdrawResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteSaverWithdrawResponse_messageType fastReflection_QueryQuoteSaverWithdrawResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteSaverWithdrawResponse_messageType{}

type fastReflection_QueryQuoteSaverWithdrawResponse_messageType struct{}

func (x fastReflection_QueryQuoteSaverWithdrawResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteSaverWithdrawResponse)(nil)
}
func (x fastReflection_QueryQuoteSaverWithdrawResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverWithdrawResponse)
}
func (x fastReflection_QueryQuoteSaverWithdrawResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverWithdrawResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteSaverWithdrawResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteSaverWithdrawResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteSaverWithdrawResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteSaverWithdrawResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundAddress != "" {
		value := protoreflect.ValueOfString(x.InboundAddress)
		if !f(fd_QueryQuoteSaverWithdrawResponse_inbound_address, value) {
			return
		}
	}
	if x.InboundConfirmationBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationBlocks)
		if !f(fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_blocks, value) {
			return
		}
	}
	if x.InboundConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationSeconds)
		if !f(fd_QueryQuoteSaverWithdrawResponse_inbound_confirmation_seconds, value) {
			return
		}
	}
	if x.OutboundDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelayBlocks)
		if !f(fd_QueryQuoteSaverWithdrawResponse_outbound_delay_blocks, value) {
			return
		}
	}
	if x.OutboundDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelaySeconds)
		if !f(fd_QueryQuoteSaverWithdrawResponse_outbound_delay_seconds, value) {
			return
		}
	}
	if x.Fees != nil {
		value := protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
		if !f(fd_QueryQuoteSaverWithdrawResponse_fees, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryQuoteSaverWithdrawResponse_router, value) {
			return
		}
	}
	if x.Expiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.Expiry)
		if !f(fd_QueryQuoteSaverWithdrawResponse_expiry, value) {
			return
		}
	}
	if x.Warning != "" {
		value := protoreflect.ValueOfString(x.Warning)
		if !f(fd_QueryQuoteSaverWithdrawResponse_warning, value) {
			return
		}
	}
	if x.Notes != "" {
		value := protoreflect.ValueOfString(x.Notes)
		if !f(fd_QueryQuoteSaverWithdrawResponse_notes, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryQuoteSaverWithdrawResponse_dust_threshold, value) {
			return
		}
	}
	if x.RecommendedMinAmountIn != "" {
		value := protoreflect.ValueOfString(x.RecommendedMinAmountIn)
		if !f(fd_QueryQuoteSaverWithdrawResponse_recommended_min_amount_in, value) {
			return
		}
	}
	if x.RecommendedGasRate != "" {
		value := protoreflect.ValueOfString(x.RecommendedGasRate)
		if !f(fd_QueryQuoteSaverWithdrawResponse_recommended_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryQuoteSaverWithdrawResponse_gas_rate_units, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_QueryQuoteSaverWithdrawResponse_memo, value) {
			return
		}
	}
	if x.DustAmount != "" {
		value := protoreflect.ValueOfString(x.DustAmount)
		if !f(fd_QueryQuoteSaverWithdrawResponse_dust_amount, value) {
			return
		}
	}
	if x.ExpectedAmountOut != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountOut)
		if !f(fd_QueryQuoteSaverWithdrawResponse_expected_amount_out, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		return x.InboundAddress != ""
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		return x.InboundConfirmationBlocks != int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		return x.InboundConfirmationSeconds != int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		return x.OutboundDelayBlocks != int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		return x.OutboundDelaySeconds != int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		return x.Fees != nil
	case "types.QueryQuoteSaverWithdrawResponse.router":
		return x.Router != ""
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		return x.Expiry != int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		return x.Warning != ""
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		return x.Notes != ""
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		return x.DustThreshold != ""
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		return x.RecommendedMinAmountIn != ""
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		return x.RecommendedGasRate != ""
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		return x.Memo != ""
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		return x.DustAmount != ""
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		return x.ExpectedAmountOut != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		x.InboundAddress = ""
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		x.Fees = nil
	case "types.QueryQuoteSaverWithdrawResponse.router":
		x.Router = ""
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		x.Expiry = int64(0)
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		x.Warning = ""
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		x.Notes = ""
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		x.DustThreshold = ""
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = ""
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		x.RecommendedGasRate = ""
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		x.Memo = ""
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		x.DustAmount = ""
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		x.ExpectedAmountOut = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		value := x.InboundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		value := x.InboundConfirmationBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		value := x.InboundConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		value := x.OutboundDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		value := x.OutboundDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		value := x.Fees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryQuoteSaverWithdrawResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		value := x.Expiry
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		value := x.Warning
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		value := x.Notes
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		value := x.RecommendedMinAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		value := x.RecommendedGasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		value := x.DustAmount
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		value := x.ExpectedAmountOut
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		x.InboundAddress = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = value.Int()
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = value.Int()
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = value.Int()
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = value.Int()
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		x.Fees = value.Message().Interface().(*QuoteFees)
	case "types.QueryQuoteSaverWithdrawResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		x.Expiry = value.Int()
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		x.Warning = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		x.Notes = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		x.RecommendedGasRate = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		x.Memo = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		x.DustAmount = value.Interface().(string)
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		x.ExpectedAmountOut = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		if x.Fees == nil {
			x.Fees = new(QuoteFees)
		}
		return protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		panic(fmt.Errorf("field inbound_address of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		panic(fmt.Errorf("field inbound_confirmation_blocks of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		panic(fmt.Errorf("field inbound_confirmation_seconds of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		panic(fmt.Errorf("field outbound_delay_blocks of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		panic(fmt.Errorf("field outbound_delay_seconds of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.router":
		panic(fmt.Errorf("field router of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		panic(fmt.Errorf("field expiry of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		panic(fmt.Errorf("field warning of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		panic(fmt.Errorf("field notes of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		panic(fmt.Errorf("field recommended_min_amount_in of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		panic(fmt.Errorf("field recommended_gas_rate of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		panic(fmt.Errorf("field memo of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		panic(fmt.Errorf("field dust_amount of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		panic(fmt.Errorf("field expected_amount_out of message types.QueryQuoteSaverWithdrawResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteSaverWithdrawResponse.inbound_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverWithdrawResponse.inbound_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverWithdrawResponse.outbound_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverWithdrawResponse.fees":
		m := new(QuoteFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryQuoteSaverWithdrawResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.expiry":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteSaverWithdrawResponse.warning":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.notes":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.recommended_min_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.recommended_gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.memo":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.dust_amount":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteSaverWithdrawResponse.expected_amount_out":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteSaverWithdrawResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteSaverWithdrawResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteSaverWithdrawResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteSaverWithdrawResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InboundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationBlocks))
		}
		if x.InboundConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationSeconds))
		}
		if x.OutboundDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelayBlocks))
		}
		if x.OutboundDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelaySeconds))
		}
		if x.Fees != nil {
			l = options.Size(x.Fees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiry != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiry))
		}
		l = len(x.Warning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Notes)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedMinAmountIn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedGasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustAmount)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountOut)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ExpectedAmountOut) > 0 {
			i -= len(x.ExpectedAmountOut)
			copy(dAtA[i:], x.ExpectedAmountOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountOut)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.DustAmount) > 0 {
			i -= len(x.DustAmount)
			copy(dAtA[i:], x.DustAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustAmount)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.RecommendedGasRate) > 0 {
			i -= len(x.RecommendedGasRate)
			copy(dAtA[i:], x.RecommendedGasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedGasRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.RecommendedMinAmountIn) > 0 {
			i -= len(x.RecommendedMinAmountIn)
			copy(dAtA[i:], x.RecommendedMinAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedMinAmountIn)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Notes) > 0 {
			i -= len(x.Notes)
			copy(dAtA[i:], x.Notes)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Notes)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Warning) > 0 {
			i -= len(x.Warning)
			copy(dAtA[i:], x.Warning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Warning)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Expiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiry))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fees != nil {
			encoded, err := options.Marshal(x.Fees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.OutboundDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelaySeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.OutboundDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelayBlocks))
			i--
			dAtA[i] = 0x20
		}
		if x.InboundConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationSeconds))
			i--
			dAtA[i] = 0x18
		}
		if x.InboundConfirmationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationBlocks))
			i--
			dAtA[i] = 0x10
		}
		if len(x.InboundAddress) > 0 {
			i -= len(x.InboundAddress)
			copy(dAtA[i:], x.InboundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InboundAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteSaverWithdrawResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverWithdrawResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteSaverWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationBlocks", wireType)
				}
				x.InboundConfirmationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationSeconds", wireType)
				}
				x.InboundConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelayBlocks", wireType)
				}
				x.OutboundDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelaySeconds", wireType)
				}
				x.OutboundDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fees == nil {
					x.Fees = &QuoteFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
				}
				x.Expiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Warning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Warning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Notes = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedMinAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedMinAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedGasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedGasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryQuoteLoanOpenRequest_6_list)(nil)

type _QueryQuoteLoanOpenRequest_6_list struct {
	list *[]string
}

func (x *_QueryQuoteLoanOpenRequest_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteLoanOpenRequest_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteLoanOpenRequest_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteLoanOpenRequest_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteLoanOpenRequest_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteLoanOpenRequest at list field Affiliate as it is not of Message kind"))
}

func (x *_QueryQuoteLoanOpenRequest_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteLoanOpenRequest_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteLoanOpenRequest_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryQuoteLoanOpenRequest_7_list)(nil)

type _QueryQuoteLoanOpenRequest_7_list struct {
	list *[]string
}

func (x *_QueryQuoteLoanOpenRequest_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryQuoteLoanOpenRequest_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_QueryQuoteLoanOpenRequest_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_QueryQuoteLoanOpenRequest_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryQuoteLoanOpenRequest_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message QueryQuoteLoanOpenRequest at list field AffiliateBps as it is not of Message kind"))
}

func (x *_QueryQuoteLoanOpenRequest_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_QueryQuoteLoanOpenRequest_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_QueryQuoteLoanOpenRequest_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryQuoteLoanOpenRequest               protoreflect.MessageDescriptor
	fd_QueryQuoteLoanOpenRequest_from_asset    protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_to_asset      protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_amount        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_min_out       protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_destination   protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_affiliate     protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_affiliate_bps protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenRequest_height        protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteLoanOpenRequest = File_types_query_quotes_proto.Messages().ByName("QueryQuoteLoanOpenRequest")
	fd_QueryQuoteLoanOpenRequest_from_asset = md_QueryQuoteLoanOpenRequest.Fields().ByName("from_asset")
	fd_QueryQuoteLoanOpenRequest_to_asset = md_QueryQuoteLoanOpenRequest.Fields().ByName("to_asset")
	fd_QueryQuoteLoanOpenRequest_amount = md_QueryQuoteLoanOpenRequest.Fields().ByName("amount")
	fd_QueryQuoteLoanOpenRequest_min_out = md_QueryQuoteLoanOpenRequest.Fields().ByName("min_out")
	fd_QueryQuoteLoanOpenRequest_destination = md_QueryQuoteLoanOpenRequest.Fields().ByName("destination")
	fd_QueryQuoteLoanOpenRequest_affiliate = md_QueryQuoteLoanOpenRequest.Fields().ByName("affiliate")
	fd_QueryQuoteLoanOpenRequest_affiliate_bps = md_QueryQuoteLoanOpenRequest.Fields().ByName("affiliate_bps")
	fd_QueryQuoteLoanOpenRequest_height = md_QueryQuoteLoanOpenRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteLoanOpenRequest)(nil)

type fastReflection_QueryQuoteLoanOpenRequest QueryQuoteLoanOpenRequest

func (x *QueryQuoteLoanOpenRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanOpenRequest)(x)
}

func (x *QueryQuoteLoanOpenRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteLoanOpenRequest_messageType fastReflection_QueryQuoteLoanOpenRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteLoanOpenRequest_messageType{}

type fastReflection_QueryQuoteLoanOpenRequest_messageType struct{}

func (x fastReflection_QueryQuoteLoanOpenRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanOpenRequest)(nil)
}
func (x fastReflection_QueryQuoteLoanOpenRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanOpenRequest)
}
func (x fastReflection_QueryQuoteLoanOpenRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanOpenRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanOpenRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteLoanOpenRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteLoanOpenRequest) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanOpenRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteLoanOpenRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FromAsset != "" {
		value := protoreflect.ValueOfString(x.FromAsset)
		if !f(fd_QueryQuoteLoanOpenRequest_from_asset, value) {
			return
		}
	}
	if x.ToAsset != "" {
		value := protoreflect.ValueOfString(x.ToAsset)
		if !f(fd_QueryQuoteLoanOpenRequest_to_asset, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_QueryQuoteLoanOpenRequest_amount, value) {
			return
		}
	}
	if x.MinOut != "" {
		value := protoreflect.ValueOfString(x.MinOut)
		if !f(fd_QueryQuoteLoanOpenRequest_min_out, value) {
			return
		}
	}
	if x.Destination != "" {
		value := protoreflect.ValueOfString(x.Destination)
		if !f(fd_QueryQuoteLoanOpenRequest_destination, value) {
			return
		}
	}
	if len(x.Affiliate) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_6_list{list: &x.Affiliate})
		if !f(fd_QueryQuoteLoanOpenRequest_affiliate, value) {
			return
		}
	}
	if len(x.AffiliateBps) != 0 {
		value := protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_7_list{list: &x.AffiliateBps})
		if !f(fd_QueryQuoteLoanOpenRequest_affiliate_bps, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryQuoteLoanOpenRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		return x.FromAsset != ""
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		return x.ToAsset != ""
	case "types.QueryQuoteLoanOpenRequest.amount":
		return x.Amount != ""
	case "types.QueryQuoteLoanOpenRequest.min_out":
		return x.MinOut != ""
	case "types.QueryQuoteLoanOpenRequest.destination":
		return x.Destination != ""
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		return len(x.Affiliate) != 0
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		return len(x.AffiliateBps) != 0
	case "types.QueryQuoteLoanOpenRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		x.FromAsset = ""
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		x.ToAsset = ""
	case "types.QueryQuoteLoanOpenRequest.amount":
		x.Amount = ""
	case "types.QueryQuoteLoanOpenRequest.min_out":
		x.MinOut = ""
	case "types.QueryQuoteLoanOpenRequest.destination":
		x.Destination = ""
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		x.Affiliate = nil
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		x.AffiliateBps = nil
	case "types.QueryQuoteLoanOpenRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		value := x.FromAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		value := x.ToAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenRequest.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenRequest.min_out":
		value := x.MinOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenRequest.destination":
		value := x.Destination
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		if len(x.Affiliate) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_6_list{})
		}
		listValue := &_QueryQuoteLoanOpenRequest_6_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		if len(x.AffiliateBps) == 0 {
			return protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_7_list{})
		}
		listValue := &_QueryQuoteLoanOpenRequest_7_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(listValue)
	case "types.QueryQuoteLoanOpenRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		x.FromAsset = value.Interface().(string)
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		x.ToAsset = value.Interface().(string)
	case "types.QueryQuoteLoanOpenRequest.amount":
		x.Amount = value.Interface().(string)
	case "types.QueryQuoteLoanOpenRequest.min_out":
		x.MinOut = value.Interface().(string)
	case "types.QueryQuoteLoanOpenRequest.destination":
		x.Destination = value.Interface().(string)
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		lv := value.List()
		clv := lv.(*_QueryQuoteLoanOpenRequest_6_list)
		x.Affiliate = *clv.list
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		lv := value.List()
		clv := lv.(*_QueryQuoteLoanOpenRequest_7_list)
		x.AffiliateBps = *clv.list
	case "types.QueryQuoteLoanOpenRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		if x.Affiliate == nil {
			x.Affiliate = []string{}
		}
		value := &_QueryQuoteLoanOpenRequest_6_list{list: &x.Affiliate}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		if x.AffiliateBps == nil {
			x.AffiliateBps = []string{}
		}
		value := &_QueryQuoteLoanOpenRequest_7_list{list: &x.AffiliateBps}
		return protoreflect.ValueOfList(value)
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		panic(fmt.Errorf("field from_asset of message types.QueryQuoteLoanOpenRequest is not mutable"))
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		panic(fmt.Errorf("field to_asset of message types.QueryQuoteLoanOpenRequest is not mutable"))
	case "types.QueryQuoteLoanOpenRequest.amount":
		panic(fmt.Errorf("field amount of message types.QueryQuoteLoanOpenRequest is not mutable"))
	case "types.QueryQuoteLoanOpenRequest.min_out":
		panic(fmt.Errorf("field min_out of message types.QueryQuoteLoanOpenRequest is not mutable"))
	case "types.QueryQuoteLoanOpenRequest.destination":
		panic(fmt.Errorf("field destination of message types.QueryQuoteLoanOpenRequest is not mutable"))
	case "types.QueryQuoteLoanOpenRequest.height":
		panic(fmt.Errorf("field height of message types.QueryQuoteLoanOpenRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteLoanOpenRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenRequest.from_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenRequest.to_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenRequest.amount":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenRequest.min_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenRequest.destination":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenRequest.affiliate":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_6_list{list: &list})
	case "types.QueryQuoteLoanOpenRequest.affiliate_bps":
		list := []string{}
		return protoreflect.ValueOfList(&_QueryQuoteLoanOpenRequest_7_list{list: &list})
	case "types.QueryQuoteLoanOpenRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteLoanOpenRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteLoanOpenRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteLoanOpenRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteLoanOpenRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteLoanOpenRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteLoanOpenRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FromAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinOut)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Destination)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Affiliate) > 0 {
			for _, s := range x.Affiliate {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AffiliateBps) > 0 {
			for _, s := range x.AffiliateBps {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanOpenRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.AffiliateBps) > 0 {
			for iNdEx := len(x.AffiliateBps) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.AffiliateBps[iNdEx])
				copy(dAtA[i:], x.AffiliateBps[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AffiliateBps[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.Affiliate) > 0 {
			for iNdEx := len(x.Affiliate) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Affiliate[iNdEx])
				copy(dAtA[i:], x.Affiliate[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Affiliate[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Destination) > 0 {
			i -= len(x.Destination)
			copy(dAtA[i:], x.Destination)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Destination)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.MinOut) > 0 {
			i -= len(x.MinOut)
			copy(dAtA[i:], x.MinOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinOut)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ToAsset) > 0 {
			i -= len(x.ToAsset)
			copy(dAtA[i:], x.ToAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToAsset)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FromAsset) > 0 {
			i -= len(x.FromAsset)
			copy(dAtA[i:], x.FromAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromAsset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanOpenRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanOpenRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanOpenRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Destination = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Affiliate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Affiliate = append(x.Affiliate, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AffiliateBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AffiliateBps = append(x.AffiliateBps, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteLoanOpenResponse                                  protoreflect.MessageDescriptor
	fd_QueryQuoteLoanOpenResponse_inbound_address                  protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_inbound_confirmation_blocks      protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_inbound_confirmation_seconds     protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_outbound_delay_blocks            protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_outbound_delay_seconds           protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_fees                             protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_router                           protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_expiry                           protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_warning                          protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_notes                            protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_dust_threshold                   protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_recommended_min_amount_in        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_recommended_gas_rate             protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_gas_rate_units                   protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_memo                             protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_expected_amount_out              protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_expected_collateralization_ratio protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_expected_collateral_deposited    protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_expected_debt_issued             protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_streaming_swap_blocks            protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_streaming_swap_seconds           protoreflect.FieldDescriptor
	fd_QueryQuoteLoanOpenResponse_total_open_loan_seconds          protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteLoanOpenResponse = File_types_query_quotes_proto.Messages().ByName("QueryQuoteLoanOpenResponse")
	fd_QueryQuoteLoanOpenResponse_inbound_address = md_QueryQuoteLoanOpenResponse.Fields().ByName("inbound_address")
	fd_QueryQuoteLoanOpenResponse_inbound_confirmation_blocks = md_QueryQuoteLoanOpenResponse.Fields().ByName("inbound_confirmation_blocks")
	fd_QueryQuoteLoanOpenResponse_inbound_confirmation_seconds = md_QueryQuoteLoanOpenResponse.Fields().ByName("inbound_confirmation_seconds")
	fd_QueryQuoteLoanOpenResponse_outbound_delay_blocks = md_QueryQuoteLoanOpenResponse.Fields().ByName("outbound_delay_blocks")
	fd_QueryQuoteLoanOpenResponse_outbound_delay_seconds = md_QueryQuoteLoanOpenResponse.Fields().ByName("outbound_delay_seconds")
	fd_QueryQuoteLoanOpenResponse_fees = md_QueryQuoteLoanOpenResponse.Fields().ByName("fees")
	fd_QueryQuoteLoanOpenResponse_router = md_QueryQuoteLoanOpenResponse.Fields().ByName("router")
	fd_QueryQuoteLoanOpenResponse_expiry = md_QueryQuoteLoanOpenResponse.Fields().ByName("expiry")
	fd_QueryQuoteLoanOpenResponse_warning = md_QueryQuoteLoanOpenResponse.Fields().ByName("warning")
	fd_QueryQuoteLoanOpenResponse_notes = md_QueryQuoteLoanOpenResponse.Fields().ByName("notes")
	fd_QueryQuoteLoanOpenResponse_dust_threshold = md_QueryQuoteLoanOpenResponse.Fields().ByName("dust_threshold")
	fd_QueryQuoteLoanOpenResponse_recommended_min_amount_in = md_QueryQuoteLoanOpenResponse.Fields().ByName("recommended_min_amount_in")
	fd_QueryQuoteLoanOpenResponse_recommended_gas_rate = md_QueryQuoteLoanOpenResponse.Fields().ByName("recommended_gas_rate")
	fd_QueryQuoteLoanOpenResponse_gas_rate_units = md_QueryQuoteLoanOpenResponse.Fields().ByName("gas_rate_units")
	fd_QueryQuoteLoanOpenResponse_memo = md_QueryQuoteLoanOpenResponse.Fields().ByName("memo")
	fd_QueryQuoteLoanOpenResponse_expected_amount_out = md_QueryQuoteLoanOpenResponse.Fields().ByName("expected_amount_out")
	fd_QueryQuoteLoanOpenResponse_expected_collateralization_ratio = md_QueryQuoteLoanOpenResponse.Fields().ByName("expected_collateralization_ratio")
	fd_QueryQuoteLoanOpenResponse_expected_collateral_deposited = md_QueryQuoteLoanOpenResponse.Fields().ByName("expected_collateral_deposited")
	fd_QueryQuoteLoanOpenResponse_expected_debt_issued = md_QueryQuoteLoanOpenResponse.Fields().ByName("expected_debt_issued")
	fd_QueryQuoteLoanOpenResponse_streaming_swap_blocks = md_QueryQuoteLoanOpenResponse.Fields().ByName("streaming_swap_blocks")
	fd_QueryQuoteLoanOpenResponse_streaming_swap_seconds = md_QueryQuoteLoanOpenResponse.Fields().ByName("streaming_swap_seconds")
	fd_QueryQuoteLoanOpenResponse_total_open_loan_seconds = md_QueryQuoteLoanOpenResponse.Fields().ByName("total_open_loan_seconds")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteLoanOpenResponse)(nil)

type fastReflection_QueryQuoteLoanOpenResponse QueryQuoteLoanOpenResponse

func (x *QueryQuoteLoanOpenResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanOpenResponse)(x)
}

func (x *QueryQuoteLoanOpenResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteLoanOpenResponse_messageType fastReflection_QueryQuoteLoanOpenResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteLoanOpenResponse_messageType{}

type fastReflection_QueryQuoteLoanOpenResponse_messageType struct{}

func (x fastReflection_QueryQuoteLoanOpenResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanOpenResponse)(nil)
}
func (x fastReflection_QueryQuoteLoanOpenResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanOpenResponse)
}
func (x fastReflection_QueryQuoteLoanOpenResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanOpenResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanOpenResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteLoanOpenResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteLoanOpenResponse) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanOpenResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteLoanOpenResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundAddress != "" {
		value := protoreflect.ValueOfString(x.InboundAddress)
		if !f(fd_QueryQuoteLoanOpenResponse_inbound_address, value) {
			return
		}
	}
	if x.InboundConfirmationBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationBlocks)
		if !f(fd_QueryQuoteLoanOpenResponse_inbound_confirmation_blocks, value) {
			return
		}
	}
	if x.InboundConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationSeconds)
		if !f(fd_QueryQuoteLoanOpenResponse_inbound_confirmation_seconds, value) {
			return
		}
	}
	if x.OutboundDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelayBlocks)
		if !f(fd_QueryQuoteLoanOpenResponse_outbound_delay_blocks, value) {
			return
		}
	}
	if x.OutboundDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelaySeconds)
		if !f(fd_QueryQuoteLoanOpenResponse_outbound_delay_seconds, value) {
			return
		}
	}
	if x.Fees != nil {
		value := protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
		if !f(fd_QueryQuoteLoanOpenResponse_fees, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryQuoteLoanOpenResponse_router, value) {
			return
		}
	}
	if x.Expiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.Expiry)
		if !f(fd_QueryQuoteLoanOpenResponse_expiry, value) {
			return
		}
	}
	if x.Warning != "" {
		value := protoreflect.ValueOfString(x.Warning)
		if !f(fd_QueryQuoteLoanOpenResponse_warning, value) {
			return
		}
	}
	if x.Notes != "" {
		value := protoreflect.ValueOfString(x.Notes)
		if !f(fd_QueryQuoteLoanOpenResponse_notes, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryQuoteLoanOpenResponse_dust_threshold, value) {
			return
		}
	}
	if x.RecommendedMinAmountIn != "" {
		value := protoreflect.ValueOfString(x.RecommendedMinAmountIn)
		if !f(fd_QueryQuoteLoanOpenResponse_recommended_min_amount_in, value) {
			return
		}
	}
	if x.RecommendedGasRate != "" {
		value := protoreflect.ValueOfString(x.RecommendedGasRate)
		if !f(fd_QueryQuoteLoanOpenResponse_recommended_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryQuoteLoanOpenResponse_gas_rate_units, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_QueryQuoteLoanOpenResponse_memo, value) {
			return
		}
	}
	if x.ExpectedAmountOut != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountOut)
		if !f(fd_QueryQuoteLoanOpenResponse_expected_amount_out, value) {
			return
		}
	}
	if x.ExpectedCollateralizationRatio != "" {
		value := protoreflect.ValueOfString(x.ExpectedCollateralizationRatio)
		if !f(fd_QueryQuoteLoanOpenResponse_expected_collateralization_ratio, value) {
			return
		}
	}
	if x.ExpectedCollateralDeposited != "" {
		value := protoreflect.ValueOfString(x.ExpectedCollateralDeposited)
		if !f(fd_QueryQuoteLoanOpenResponse_expected_collateral_deposited, value) {
			return
		}
	}
	if x.ExpectedDebtIssued != "" {
		value := protoreflect.ValueOfString(x.ExpectedDebtIssued)
		if !f(fd_QueryQuoteLoanOpenResponse_expected_debt_issued, value) {
			return
		}
	}
	if x.StreamingSwapBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapBlocks)
		if !f(fd_QueryQuoteLoanOpenResponse_streaming_swap_blocks, value) {
			return
		}
	}
	if x.StreamingSwapSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapSeconds)
		if !f(fd_QueryQuoteLoanOpenResponse_streaming_swap_seconds, value) {
			return
		}
	}
	if x.TotalOpenLoanSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalOpenLoanSeconds)
		if !f(fd_QueryQuoteLoanOpenResponse_total_open_loan_seconds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		return x.InboundAddress != ""
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		return x.InboundConfirmationBlocks != int64(0)
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		return x.InboundConfirmationSeconds != int64(0)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		return x.OutboundDelayBlocks != int64(0)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		return x.OutboundDelaySeconds != int64(0)
	case "types.QueryQuoteLoanOpenResponse.fees":
		return x.Fees != nil
	case "types.QueryQuoteLoanOpenResponse.router":
		return x.Router != ""
	case "types.QueryQuoteLoanOpenResponse.expiry":
		return x.Expiry != int64(0)
	case "types.QueryQuoteLoanOpenResponse.warning":
		return x.Warning != ""
	case "types.QueryQuoteLoanOpenResponse.notes":
		return x.Notes != ""
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		return x.DustThreshold != ""
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		return x.RecommendedMinAmountIn != ""
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		return x.RecommendedGasRate != ""
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryQuoteLoanOpenResponse.memo":
		return x.Memo != ""
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		return x.ExpectedAmountOut != ""
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		return x.ExpectedCollateralizationRatio != ""
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		return x.ExpectedCollateralDeposited != ""
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		return x.ExpectedDebtIssued != ""
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		return x.StreamingSwapBlocks != int64(0)
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		return x.StreamingSwapSeconds != int64(0)
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		return x.TotalOpenLoanSeconds != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		x.InboundAddress = ""
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = int64(0)
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = int64(0)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = int64(0)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = int64(0)
	case "types.QueryQuoteLoanOpenResponse.fees":
		x.Fees = nil
	case "types.QueryQuoteLoanOpenResponse.router":
		x.Router = ""
	case "types.QueryQuoteLoanOpenResponse.expiry":
		x.Expiry = int64(0)
	case "types.QueryQuoteLoanOpenResponse.warning":
		x.Warning = ""
	case "types.QueryQuoteLoanOpenResponse.notes":
		x.Notes = ""
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		x.DustThreshold = ""
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = ""
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		x.RecommendedGasRate = ""
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryQuoteLoanOpenResponse.memo":
		x.Memo = ""
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		x.ExpectedAmountOut = ""
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		x.ExpectedCollateralizationRatio = ""
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		x.ExpectedCollateralDeposited = ""
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		x.ExpectedDebtIssued = ""
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = int64(0)
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = int64(0)
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		x.TotalOpenLoanSeconds = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		value := x.InboundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		value := x.InboundConfirmationBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		value := x.InboundConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		value := x.OutboundDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		value := x.OutboundDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.fees":
		value := x.Fees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryQuoteLoanOpenResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.expiry":
		value := x.Expiry
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.warning":
		value := x.Warning
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.notes":
		value := x.Notes
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		value := x.RecommendedMinAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		value := x.RecommendedGasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		value := x.ExpectedAmountOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		value := x.ExpectedCollateralizationRatio
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		value := x.ExpectedCollateralDeposited
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		value := x.ExpectedDebtIssued
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		value := x.StreamingSwapBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		value := x.StreamingSwapSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		value := x.TotalOpenLoanSeconds
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		x.InboundAddress = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = value.Int()
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = value.Int()
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = value.Int()
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = value.Int()
	case "types.QueryQuoteLoanOpenResponse.fees":
		x.Fees = value.Message().Interface().(*QuoteFees)
	case "types.QueryQuoteLoanOpenResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.expiry":
		x.Expiry = value.Int()
	case "types.QueryQuoteLoanOpenResponse.warning":
		x.Warning = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.notes":
		x.Notes = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		x.RecommendedGasRate = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.memo":
		x.Memo = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		x.ExpectedAmountOut = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		x.ExpectedCollateralizationRatio = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		x.ExpectedCollateralDeposited = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		x.ExpectedDebtIssued = value.Interface().(string)
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = value.Int()
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = value.Int()
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		x.TotalOpenLoanSeconds = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenResponse.fees":
		if x.Fees == nil {
			x.Fees = new(QuoteFees)
		}
		return protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		panic(fmt.Errorf("field inbound_address of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		panic(fmt.Errorf("field inbound_confirmation_blocks of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		panic(fmt.Errorf("field inbound_confirmation_seconds of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		panic(fmt.Errorf("field outbound_delay_blocks of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		panic(fmt.Errorf("field outbound_delay_seconds of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.router":
		panic(fmt.Errorf("field router of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.expiry":
		panic(fmt.Errorf("field expiry of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.warning":
		panic(fmt.Errorf("field warning of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.notes":
		panic(fmt.Errorf("field notes of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		panic(fmt.Errorf("field recommended_min_amount_in of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		panic(fmt.Errorf("field recommended_gas_rate of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.memo":
		panic(fmt.Errorf("field memo of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		panic(fmt.Errorf("field expected_amount_out of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		panic(fmt.Errorf("field expected_collateralization_ratio of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		panic(fmt.Errorf("field expected_collateral_deposited of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		panic(fmt.Errorf("field expected_debt_issued of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		panic(fmt.Errorf("field streaming_swap_blocks of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		panic(fmt.Errorf("field streaming_swap_seconds of message types.QueryQuoteLoanOpenResponse is not mutable"))
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		panic(fmt.Errorf("field total_open_loan_seconds of message types.QueryQuoteLoanOpenResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteLoanOpenResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanOpenResponse.inbound_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.inbound_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.outbound_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.fees":
		m := new(QuoteFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryQuoteLoanOpenResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.expiry":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.warning":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.notes":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.recommended_min_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.recommended_gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.memo":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.expected_amount_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.expected_collateralization_ratio":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.expected_collateral_deposited":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.expected_debt_issued":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.streaming_swap_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanOpenResponse.total_open_loan_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanOpenResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanOpenResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteLoanOpenResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteLoanOpenResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteLoanOpenResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanOpenResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteLoanOpenResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteLoanOpenResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteLoanOpenResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InboundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationBlocks))
		}
		if x.InboundConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationSeconds))
		}
		if x.OutboundDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelayBlocks))
		}
		if x.OutboundDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelaySeconds))
		}
		if x.Fees != nil {
			l = options.Size(x.Fees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiry != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiry))
		}
		l = len(x.Warning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Notes)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedMinAmountIn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedGasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountOut)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedCollateralizationRatio)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedCollateralDeposited)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedDebtIssued)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.StreamingSwapBlocks != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapBlocks))
		}
		if x.StreamingSwapSeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapSeconds))
		}
		if x.TotalOpenLoanSeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.TotalOpenLoanSeconds))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanOpenResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalOpenLoanSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalOpenLoanSeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb0
		}
		if x.StreamingSwapSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapSeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa8
		}
		if x.StreamingSwapBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapBlocks))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa0
		}
		if len(x.ExpectedDebtIssued) > 0 {
			i -= len(x.ExpectedDebtIssued)
			copy(dAtA[i:], x.ExpectedDebtIssued)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedDebtIssued)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x9a
		}
		if len(x.ExpectedCollateralDeposited) > 0 {
			i -= len(x.ExpectedCollateralDeposited)
			copy(dAtA[i:], x.ExpectedCollateralDeposited)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedCollateralDeposited)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
		if len(x.ExpectedCollateralizationRatio) > 0 {
			i -= len(x.ExpectedCollateralizationRatio)
			copy(dAtA[i:], x.ExpectedCollateralizationRatio)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedCollateralizationRatio)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.ExpectedAmountOut) > 0 {
			i -= len(x.ExpectedAmountOut)
			copy(dAtA[i:], x.ExpectedAmountOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountOut)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.RecommendedGasRate) > 0 {
			i -= len(x.RecommendedGasRate)
			copy(dAtA[i:], x.RecommendedGasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedGasRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.RecommendedMinAmountIn) > 0 {
			i -= len(x.RecommendedMinAmountIn)
			copy(dAtA[i:], x.RecommendedMinAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedMinAmountIn)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Notes) > 0 {
			i -= len(x.Notes)
			copy(dAtA[i:], x.Notes)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Notes)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Warning) > 0 {
			i -= len(x.Warning)
			copy(dAtA[i:], x.Warning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Warning)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Expiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiry))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fees != nil {
			encoded, err := options.Marshal(x.Fees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.OutboundDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelaySeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.OutboundDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelayBlocks))
			i--
			dAtA[i] = 0x20
		}
		if x.InboundConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationSeconds))
			i--
			dAtA[i] = 0x18
		}
		if x.InboundConfirmationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationBlocks))
			i--
			dAtA[i] = 0x10
		}
		if len(x.InboundAddress) > 0 {
			i -= len(x.InboundAddress)
			copy(dAtA[i:], x.InboundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InboundAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanOpenResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanOpenResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanOpenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationBlocks", wireType)
				}
				x.InboundConfirmationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationSeconds", wireType)
				}
				x.InboundConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelayBlocks", wireType)
				}
				x.OutboundDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelaySeconds", wireType)
				}
				x.OutboundDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fees == nil {
					x.Fees = &QuoteFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
				}
				x.Expiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Warning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Warning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Notes = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedMinAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedMinAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedGasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedGasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedCollateralizationRatio", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedCollateralizationRatio = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedCollateralDeposited", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedCollateralDeposited = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedDebtIssued", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedDebtIssued = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 20:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapBlocks", wireType)
				}
				x.StreamingSwapBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 21:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapSeconds", wireType)
				}
				x.StreamingSwapSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 22:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalOpenLoanSeconds", wireType)
				}
				x.TotalOpenLoanSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalOpenLoanSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteLoanCloseRequest            protoreflect.MessageDescriptor
	fd_QueryQuoteLoanCloseRequest_from_asset protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseRequest_to_asset   protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseRequest_min_out    protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseRequest_repay_bps  protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseRequest_loan_owner protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseRequest_height     protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteLoanCloseRequest = File_types_query_quotes_proto.Messages().ByName("QueryQuoteLoanCloseRequest")
	fd_QueryQuoteLoanCloseRequest_from_asset = md_QueryQuoteLoanCloseRequest.Fields().ByName("from_asset")
	fd_QueryQuoteLoanCloseRequest_to_asset = md_QueryQuoteLoanCloseRequest.Fields().ByName("to_asset")
	fd_QueryQuoteLoanCloseRequest_min_out = md_QueryQuoteLoanCloseRequest.Fields().ByName("min_out")
	fd_QueryQuoteLoanCloseRequest_repay_bps = md_QueryQuoteLoanCloseRequest.Fields().ByName("repay_bps")
	fd_QueryQuoteLoanCloseRequest_loan_owner = md_QueryQuoteLoanCloseRequest.Fields().ByName("loan_owner")
	fd_QueryQuoteLoanCloseRequest_height = md_QueryQuoteLoanCloseRequest.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteLoanCloseRequest)(nil)

type fastReflection_QueryQuoteLoanCloseRequest QueryQuoteLoanCloseRequest

func (x *QueryQuoteLoanCloseRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanCloseRequest)(x)
}

func (x *QueryQuoteLoanCloseRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteLoanCloseRequest_messageType fastReflection_QueryQuoteLoanCloseRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteLoanCloseRequest_messageType{}

type fastReflection_QueryQuoteLoanCloseRequest_messageType struct{}

func (x fastReflection_QueryQuoteLoanCloseRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanCloseRequest)(nil)
}
func (x fastReflection_QueryQuoteLoanCloseRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanCloseRequest)
}
func (x fastReflection_QueryQuoteLoanCloseRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanCloseRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanCloseRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteLoanCloseRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteLoanCloseRequest) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanCloseRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteLoanCloseRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FromAsset != "" {
		value := protoreflect.ValueOfString(x.FromAsset)
		if !f(fd_QueryQuoteLoanCloseRequest_from_asset, value) {
			return
		}
	}
	if x.ToAsset != "" {
		value := protoreflect.ValueOfString(x.ToAsset)
		if !f(fd_QueryQuoteLoanCloseRequest_to_asset, value) {
			return
		}
	}
	if x.MinOut != "" {
		value := protoreflect.ValueOfString(x.MinOut)
		if !f(fd_QueryQuoteLoanCloseRequest_min_out, value) {
			return
		}
	}
	if x.RepayBps != "" {
		value := protoreflect.ValueOfString(x.RepayBps)
		if !f(fd_QueryQuoteLoanCloseRequest_repay_bps, value) {
			return
		}
	}
	if x.LoanOwner != "" {
		value := protoreflect.ValueOfString(x.LoanOwner)
		if !f(fd_QueryQuoteLoanCloseRequest_loan_owner, value) {
			return
		}
	}
	if x.Height != "" {
		value := protoreflect.ValueOfString(x.Height)
		if !f(fd_QueryQuoteLoanCloseRequest_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		return x.FromAsset != ""
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		return x.ToAsset != ""
	case "types.QueryQuoteLoanCloseRequest.min_out":
		return x.MinOut != ""
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		return x.RepayBps != ""
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		return x.LoanOwner != ""
	case "types.QueryQuoteLoanCloseRequest.height":
		return x.Height != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		x.FromAsset = ""
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		x.ToAsset = ""
	case "types.QueryQuoteLoanCloseRequest.min_out":
		x.MinOut = ""
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		x.RepayBps = ""
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		x.LoanOwner = ""
	case "types.QueryQuoteLoanCloseRequest.height":
		x.Height = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		value := x.FromAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		value := x.ToAsset
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseRequest.min_out":
		value := x.MinOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		value := x.RepayBps
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		value := x.LoanOwner
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseRequest.height":
		value := x.Height
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		x.FromAsset = value.Interface().(string)
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		x.ToAsset = value.Interface().(string)
	case "types.QueryQuoteLoanCloseRequest.min_out":
		x.MinOut = value.Interface().(string)
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		x.RepayBps = value.Interface().(string)
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		x.LoanOwner = value.Interface().(string)
	case "types.QueryQuoteLoanCloseRequest.height":
		x.Height = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		panic(fmt.Errorf("field from_asset of message types.QueryQuoteLoanCloseRequest is not mutable"))
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		panic(fmt.Errorf("field to_asset of message types.QueryQuoteLoanCloseRequest is not mutable"))
	case "types.QueryQuoteLoanCloseRequest.min_out":
		panic(fmt.Errorf("field min_out of message types.QueryQuoteLoanCloseRequest is not mutable"))
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		panic(fmt.Errorf("field repay_bps of message types.QueryQuoteLoanCloseRequest is not mutable"))
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		panic(fmt.Errorf("field loan_owner of message types.QueryQuoteLoanCloseRequest is not mutable"))
	case "types.QueryQuoteLoanCloseRequest.height":
		panic(fmt.Errorf("field height of message types.QueryQuoteLoanCloseRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteLoanCloseRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseRequest.from_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseRequest.to_asset":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseRequest.min_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseRequest.repay_bps":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseRequest.loan_owner":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseRequest.height":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseRequest"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteLoanCloseRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteLoanCloseRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteLoanCloseRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteLoanCloseRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteLoanCloseRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteLoanCloseRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FromAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToAsset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinOut)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RepayBps)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LoanOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Height)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanCloseRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Height) > 0 {
			i -= len(x.Height)
			copy(dAtA[i:], x.Height)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Height)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.LoanOwner) > 0 {
			i -= len(x.LoanOwner)
			copy(dAtA[i:], x.LoanOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LoanOwner)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.RepayBps) > 0 {
			i -= len(x.RepayBps)
			copy(dAtA[i:], x.RepayBps)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RepayBps)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.MinOut) > 0 {
			i -= len(x.MinOut)
			copy(dAtA[i:], x.MinOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinOut)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ToAsset) > 0 {
			i -= len(x.ToAsset)
			copy(dAtA[i:], x.ToAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToAsset)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FromAsset) > 0 {
			i -= len(x.FromAsset)
			copy(dAtA[i:], x.FromAsset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromAsset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanCloseRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanCloseRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanCloseRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToAsset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToAsset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RepayBps", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RepayBps = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LoanOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LoanOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Height = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryQuoteLoanCloseResponse                               protoreflect.MessageDescriptor
	fd_QueryQuoteLoanCloseResponse_inbound_address               protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_inbound_confirmation_blocks   protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_inbound_confirmation_seconds  protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_outbound_delay_blocks         protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_outbound_delay_seconds        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_fees                          protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_router                        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_expiry                        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_warning                       protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_notes                         protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_dust_threshold                protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_recommended_min_amount_in     protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_recommended_gas_rate          protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_gas_rate_units                protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_memo                          protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_expected_amount_out           protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_expected_amount_in            protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_expected_collateral_withdrawn protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_expected_debt_repaid          protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_streaming_swap_blocks         protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_streaming_swap_seconds        protoreflect.FieldDescriptor
	fd_QueryQuoteLoanCloseResponse_total_repay_seconds           protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QueryQuoteLoanCloseResponse = File_types_query_quotes_proto.Messages().ByName("QueryQuoteLoanCloseResponse")
	fd_QueryQuoteLoanCloseResponse_inbound_address = md_QueryQuoteLoanCloseResponse.Fields().ByName("inbound_address")
	fd_QueryQuoteLoanCloseResponse_inbound_confirmation_blocks = md_QueryQuoteLoanCloseResponse.Fields().ByName("inbound_confirmation_blocks")
	fd_QueryQuoteLoanCloseResponse_inbound_confirmation_seconds = md_QueryQuoteLoanCloseResponse.Fields().ByName("inbound_confirmation_seconds")
	fd_QueryQuoteLoanCloseResponse_outbound_delay_blocks = md_QueryQuoteLoanCloseResponse.Fields().ByName("outbound_delay_blocks")
	fd_QueryQuoteLoanCloseResponse_outbound_delay_seconds = md_QueryQuoteLoanCloseResponse.Fields().ByName("outbound_delay_seconds")
	fd_QueryQuoteLoanCloseResponse_fees = md_QueryQuoteLoanCloseResponse.Fields().ByName("fees")
	fd_QueryQuoteLoanCloseResponse_router = md_QueryQuoteLoanCloseResponse.Fields().ByName("router")
	fd_QueryQuoteLoanCloseResponse_expiry = md_QueryQuoteLoanCloseResponse.Fields().ByName("expiry")
	fd_QueryQuoteLoanCloseResponse_warning = md_QueryQuoteLoanCloseResponse.Fields().ByName("warning")
	fd_QueryQuoteLoanCloseResponse_notes = md_QueryQuoteLoanCloseResponse.Fields().ByName("notes")
	fd_QueryQuoteLoanCloseResponse_dust_threshold = md_QueryQuoteLoanCloseResponse.Fields().ByName("dust_threshold")
	fd_QueryQuoteLoanCloseResponse_recommended_min_amount_in = md_QueryQuoteLoanCloseResponse.Fields().ByName("recommended_min_amount_in")
	fd_QueryQuoteLoanCloseResponse_recommended_gas_rate = md_QueryQuoteLoanCloseResponse.Fields().ByName("recommended_gas_rate")
	fd_QueryQuoteLoanCloseResponse_gas_rate_units = md_QueryQuoteLoanCloseResponse.Fields().ByName("gas_rate_units")
	fd_QueryQuoteLoanCloseResponse_memo = md_QueryQuoteLoanCloseResponse.Fields().ByName("memo")
	fd_QueryQuoteLoanCloseResponse_expected_amount_out = md_QueryQuoteLoanCloseResponse.Fields().ByName("expected_amount_out")
	fd_QueryQuoteLoanCloseResponse_expected_amount_in = md_QueryQuoteLoanCloseResponse.Fields().ByName("expected_amount_in")
	fd_QueryQuoteLoanCloseResponse_expected_collateral_withdrawn = md_QueryQuoteLoanCloseResponse.Fields().ByName("expected_collateral_withdrawn")
	fd_QueryQuoteLoanCloseResponse_expected_debt_repaid = md_QueryQuoteLoanCloseResponse.Fields().ByName("expected_debt_repaid")
	fd_QueryQuoteLoanCloseResponse_streaming_swap_blocks = md_QueryQuoteLoanCloseResponse.Fields().ByName("streaming_swap_blocks")
	fd_QueryQuoteLoanCloseResponse_streaming_swap_seconds = md_QueryQuoteLoanCloseResponse.Fields().ByName("streaming_swap_seconds")
	fd_QueryQuoteLoanCloseResponse_total_repay_seconds = md_QueryQuoteLoanCloseResponse.Fields().ByName("total_repay_seconds")
}

var _ protoreflect.Message = (*fastReflection_QueryQuoteLoanCloseResponse)(nil)

type fastReflection_QueryQuoteLoanCloseResponse QueryQuoteLoanCloseResponse

func (x *QueryQuoteLoanCloseResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanCloseResponse)(x)
}

func (x *QueryQuoteLoanCloseResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryQuoteLoanCloseResponse_messageType fastReflection_QueryQuoteLoanCloseResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryQuoteLoanCloseResponse_messageType{}

type fastReflection_QueryQuoteLoanCloseResponse_messageType struct{}

func (x fastReflection_QueryQuoteLoanCloseResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryQuoteLoanCloseResponse)(nil)
}
func (x fastReflection_QueryQuoteLoanCloseResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanCloseResponse)
}
func (x fastReflection_QueryQuoteLoanCloseResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanCloseResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryQuoteLoanCloseResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryQuoteLoanCloseResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryQuoteLoanCloseResponse) New() protoreflect.Message {
	return new(fastReflection_QueryQuoteLoanCloseResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryQuoteLoanCloseResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InboundAddress != "" {
		value := protoreflect.ValueOfString(x.InboundAddress)
		if !f(fd_QueryQuoteLoanCloseResponse_inbound_address, value) {
			return
		}
	}
	if x.InboundConfirmationBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationBlocks)
		if !f(fd_QueryQuoteLoanCloseResponse_inbound_confirmation_blocks, value) {
			return
		}
	}
	if x.InboundConfirmationSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.InboundConfirmationSeconds)
		if !f(fd_QueryQuoteLoanCloseResponse_inbound_confirmation_seconds, value) {
			return
		}
	}
	if x.OutboundDelayBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelayBlocks)
		if !f(fd_QueryQuoteLoanCloseResponse_outbound_delay_blocks, value) {
			return
		}
	}
	if x.OutboundDelaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.OutboundDelaySeconds)
		if !f(fd_QueryQuoteLoanCloseResponse_outbound_delay_seconds, value) {
			return
		}
	}
	if x.Fees != nil {
		value := protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
		if !f(fd_QueryQuoteLoanCloseResponse_fees, value) {
			return
		}
	}
	if x.Router != "" {
		value := protoreflect.ValueOfString(x.Router)
		if !f(fd_QueryQuoteLoanCloseResponse_router, value) {
			return
		}
	}
	if x.Expiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.Expiry)
		if !f(fd_QueryQuoteLoanCloseResponse_expiry, value) {
			return
		}
	}
	if x.Warning != "" {
		value := protoreflect.ValueOfString(x.Warning)
		if !f(fd_QueryQuoteLoanCloseResponse_warning, value) {
			return
		}
	}
	if x.Notes != "" {
		value := protoreflect.ValueOfString(x.Notes)
		if !f(fd_QueryQuoteLoanCloseResponse_notes, value) {
			return
		}
	}
	if x.DustThreshold != "" {
		value := protoreflect.ValueOfString(x.DustThreshold)
		if !f(fd_QueryQuoteLoanCloseResponse_dust_threshold, value) {
			return
		}
	}
	if x.RecommendedMinAmountIn != "" {
		value := protoreflect.ValueOfString(x.RecommendedMinAmountIn)
		if !f(fd_QueryQuoteLoanCloseResponse_recommended_min_amount_in, value) {
			return
		}
	}
	if x.RecommendedGasRate != "" {
		value := protoreflect.ValueOfString(x.RecommendedGasRate)
		if !f(fd_QueryQuoteLoanCloseResponse_recommended_gas_rate, value) {
			return
		}
	}
	if x.GasRateUnits != "" {
		value := protoreflect.ValueOfString(x.GasRateUnits)
		if !f(fd_QueryQuoteLoanCloseResponse_gas_rate_units, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_QueryQuoteLoanCloseResponse_memo, value) {
			return
		}
	}
	if x.ExpectedAmountOut != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountOut)
		if !f(fd_QueryQuoteLoanCloseResponse_expected_amount_out, value) {
			return
		}
	}
	if x.ExpectedAmountIn != "" {
		value := protoreflect.ValueOfString(x.ExpectedAmountIn)
		if !f(fd_QueryQuoteLoanCloseResponse_expected_amount_in, value) {
			return
		}
	}
	if x.ExpectedCollateralWithdrawn != "" {
		value := protoreflect.ValueOfString(x.ExpectedCollateralWithdrawn)
		if !f(fd_QueryQuoteLoanCloseResponse_expected_collateral_withdrawn, value) {
			return
		}
	}
	if x.ExpectedDebtRepaid != "" {
		value := protoreflect.ValueOfString(x.ExpectedDebtRepaid)
		if !f(fd_QueryQuoteLoanCloseResponse_expected_debt_repaid, value) {
			return
		}
	}
	if x.StreamingSwapBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapBlocks)
		if !f(fd_QueryQuoteLoanCloseResponse_streaming_swap_blocks, value) {
			return
		}
	}
	if x.StreamingSwapSeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.StreamingSwapSeconds)
		if !f(fd_QueryQuoteLoanCloseResponse_streaming_swap_seconds, value) {
			return
		}
	}
	if x.TotalRepaySeconds != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalRepaySeconds)
		if !f(fd_QueryQuoteLoanCloseResponse_total_repay_seconds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		return x.InboundAddress != ""
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		return x.InboundConfirmationBlocks != int64(0)
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		return x.InboundConfirmationSeconds != int64(0)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		return x.OutboundDelayBlocks != int64(0)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		return x.OutboundDelaySeconds != int64(0)
	case "types.QueryQuoteLoanCloseResponse.fees":
		return x.Fees != nil
	case "types.QueryQuoteLoanCloseResponse.router":
		return x.Router != ""
	case "types.QueryQuoteLoanCloseResponse.expiry":
		return x.Expiry != int64(0)
	case "types.QueryQuoteLoanCloseResponse.warning":
		return x.Warning != ""
	case "types.QueryQuoteLoanCloseResponse.notes":
		return x.Notes != ""
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		return x.DustThreshold != ""
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		return x.RecommendedMinAmountIn != ""
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		return x.RecommendedGasRate != ""
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		return x.GasRateUnits != ""
	case "types.QueryQuoteLoanCloseResponse.memo":
		return x.Memo != ""
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		return x.ExpectedAmountOut != ""
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		return x.ExpectedAmountIn != ""
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		return x.ExpectedCollateralWithdrawn != ""
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		return x.ExpectedDebtRepaid != ""
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		return x.StreamingSwapBlocks != int64(0)
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		return x.StreamingSwapSeconds != int64(0)
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		return x.TotalRepaySeconds != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		x.InboundAddress = ""
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = int64(0)
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = int64(0)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = int64(0)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = int64(0)
	case "types.QueryQuoteLoanCloseResponse.fees":
		x.Fees = nil
	case "types.QueryQuoteLoanCloseResponse.router":
		x.Router = ""
	case "types.QueryQuoteLoanCloseResponse.expiry":
		x.Expiry = int64(0)
	case "types.QueryQuoteLoanCloseResponse.warning":
		x.Warning = ""
	case "types.QueryQuoteLoanCloseResponse.notes":
		x.Notes = ""
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		x.DustThreshold = ""
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = ""
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		x.RecommendedGasRate = ""
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		x.GasRateUnits = ""
	case "types.QueryQuoteLoanCloseResponse.memo":
		x.Memo = ""
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		x.ExpectedAmountOut = ""
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		x.ExpectedAmountIn = ""
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		x.ExpectedCollateralWithdrawn = ""
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		x.ExpectedDebtRepaid = ""
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = int64(0)
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = int64(0)
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		x.TotalRepaySeconds = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		value := x.InboundAddress
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		value := x.InboundConfirmationBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		value := x.InboundConfirmationSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		value := x.OutboundDelayBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		value := x.OutboundDelaySeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.fees":
		value := x.Fees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.QueryQuoteLoanCloseResponse.router":
		value := x.Router
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.expiry":
		value := x.Expiry
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.warning":
		value := x.Warning
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.notes":
		value := x.Notes
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		value := x.DustThreshold
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		value := x.RecommendedMinAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		value := x.RecommendedGasRate
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		value := x.GasRateUnits
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		value := x.ExpectedAmountOut
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		value := x.ExpectedAmountIn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		value := x.ExpectedCollateralWithdrawn
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		value := x.ExpectedDebtRepaid
		return protoreflect.ValueOfString(value)
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		value := x.StreamingSwapBlocks
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		value := x.StreamingSwapSeconds
		return protoreflect.ValueOfInt64(value)
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		value := x.TotalRepaySeconds
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		x.InboundAddress = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		x.InboundConfirmationBlocks = value.Int()
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		x.InboundConfirmationSeconds = value.Int()
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		x.OutboundDelayBlocks = value.Int()
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		x.OutboundDelaySeconds = value.Int()
	case "types.QueryQuoteLoanCloseResponse.fees":
		x.Fees = value.Message().Interface().(*QuoteFees)
	case "types.QueryQuoteLoanCloseResponse.router":
		x.Router = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.expiry":
		x.Expiry = value.Int()
	case "types.QueryQuoteLoanCloseResponse.warning":
		x.Warning = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.notes":
		x.Notes = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		x.DustThreshold = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		x.RecommendedMinAmountIn = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		x.RecommendedGasRate = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		x.GasRateUnits = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.memo":
		x.Memo = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		x.ExpectedAmountOut = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		x.ExpectedAmountIn = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		x.ExpectedCollateralWithdrawn = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		x.ExpectedDebtRepaid = value.Interface().(string)
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		x.StreamingSwapBlocks = value.Int()
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		x.StreamingSwapSeconds = value.Int()
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		x.TotalRepaySeconds = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseResponse.fees":
		if x.Fees == nil {
			x.Fees = new(QuoteFees)
		}
		return protoreflect.ValueOfMessage(x.Fees.ProtoReflect())
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		panic(fmt.Errorf("field inbound_address of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		panic(fmt.Errorf("field inbound_confirmation_blocks of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		panic(fmt.Errorf("field inbound_confirmation_seconds of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		panic(fmt.Errorf("field outbound_delay_blocks of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		panic(fmt.Errorf("field outbound_delay_seconds of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.router":
		panic(fmt.Errorf("field router of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.expiry":
		panic(fmt.Errorf("field expiry of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.warning":
		panic(fmt.Errorf("field warning of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.notes":
		panic(fmt.Errorf("field notes of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		panic(fmt.Errorf("field dust_threshold of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		panic(fmt.Errorf("field recommended_min_amount_in of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		panic(fmt.Errorf("field recommended_gas_rate of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		panic(fmt.Errorf("field gas_rate_units of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.memo":
		panic(fmt.Errorf("field memo of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		panic(fmt.Errorf("field expected_amount_out of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		panic(fmt.Errorf("field expected_amount_in of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		panic(fmt.Errorf("field expected_collateral_withdrawn of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		panic(fmt.Errorf("field expected_debt_repaid of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		panic(fmt.Errorf("field streaming_swap_blocks of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		panic(fmt.Errorf("field streaming_swap_seconds of message types.QueryQuoteLoanCloseResponse is not mutable"))
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		panic(fmt.Errorf("field total_repay_seconds of message types.QueryQuoteLoanCloseResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryQuoteLoanCloseResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QueryQuoteLoanCloseResponse.inbound_address":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.inbound_confirmation_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.outbound_delay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.fees":
		m := new(QuoteFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "types.QueryQuoteLoanCloseResponse.router":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.expiry":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.warning":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.notes":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.dust_threshold":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.recommended_min_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.recommended_gas_rate":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.gas_rate_units":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.memo":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.expected_amount_out":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.expected_amount_in":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.expected_collateral_withdrawn":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.expected_debt_repaid":
		return protoreflect.ValueOfString("")
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.streaming_swap_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QueryQuoteLoanCloseResponse.total_repay_seconds":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QueryQuoteLoanCloseResponse"))
		}
		panic(fmt.Errorf("message types.QueryQuoteLoanCloseResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryQuoteLoanCloseResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QueryQuoteLoanCloseResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryQuoteLoanCloseResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryQuoteLoanCloseResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryQuoteLoanCloseResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryQuoteLoanCloseResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryQuoteLoanCloseResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InboundAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InboundConfirmationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationBlocks))
		}
		if x.InboundConfirmationSeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.InboundConfirmationSeconds))
		}
		if x.OutboundDelayBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelayBlocks))
		}
		if x.OutboundDelaySeconds != 0 {
			n += 1 + runtime.Sov(uint64(x.OutboundDelaySeconds))
		}
		if x.Fees != nil {
			l = options.Size(x.Fees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Router)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiry != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiry))
		}
		l = len(x.Warning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Notes)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DustThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedMinAmountIn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RecommendedGasRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasRateUnits)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountOut)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedAmountIn)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedCollateralWithdrawn)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExpectedDebtRepaid)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.StreamingSwapBlocks != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapBlocks))
		}
		if x.StreamingSwapSeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.StreamingSwapSeconds))
		}
		if x.TotalRepaySeconds != 0 {
			n += 2 + runtime.Sov(uint64(x.TotalRepaySeconds))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanCloseResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalRepaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalRepaySeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb0
		}
		if x.StreamingSwapSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapSeconds))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa8
		}
		if x.StreamingSwapBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StreamingSwapBlocks))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa0
		}
		if len(x.ExpectedDebtRepaid) > 0 {
			i -= len(x.ExpectedDebtRepaid)
			copy(dAtA[i:], x.ExpectedDebtRepaid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedDebtRepaid)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x9a
		}
		if len(x.ExpectedCollateralWithdrawn) > 0 {
			i -= len(x.ExpectedCollateralWithdrawn)
			copy(dAtA[i:], x.ExpectedCollateralWithdrawn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedCollateralWithdrawn)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
		if len(x.ExpectedAmountIn) > 0 {
			i -= len(x.ExpectedAmountIn)
			copy(dAtA[i:], x.ExpectedAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountIn)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.ExpectedAmountOut) > 0 {
			i -= len(x.ExpectedAmountOut)
			copy(dAtA[i:], x.ExpectedAmountOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExpectedAmountOut)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.GasRateUnits) > 0 {
			i -= len(x.GasRateUnits)
			copy(dAtA[i:], x.GasRateUnits)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasRateUnits)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.RecommendedGasRate) > 0 {
			i -= len(x.RecommendedGasRate)
			copy(dAtA[i:], x.RecommendedGasRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedGasRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.RecommendedMinAmountIn) > 0 {
			i -= len(x.RecommendedMinAmountIn)
			copy(dAtA[i:], x.RecommendedMinAmountIn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RecommendedMinAmountIn)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.DustThreshold) > 0 {
			i -= len(x.DustThreshold)
			copy(dAtA[i:], x.DustThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DustThreshold)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Notes) > 0 {
			i -= len(x.Notes)
			copy(dAtA[i:], x.Notes)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Notes)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Warning) > 0 {
			i -= len(x.Warning)
			copy(dAtA[i:], x.Warning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Warning)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Expiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiry))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Router) > 0 {
			i -= len(x.Router)
			copy(dAtA[i:], x.Router)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Router)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fees != nil {
			encoded, err := options.Marshal(x.Fees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.OutboundDelaySeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelaySeconds))
			i--
			dAtA[i] = 0x28
		}
		if x.OutboundDelayBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OutboundDelayBlocks))
			i--
			dAtA[i] = 0x20
		}
		if x.InboundConfirmationSeconds != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationSeconds))
			i--
			dAtA[i] = 0x18
		}
		if x.InboundConfirmationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InboundConfirmationBlocks))
			i--
			dAtA[i] = 0x10
		}
		if len(x.InboundAddress) > 0 {
			i -= len(x.InboundAddress)
			copy(dAtA[i:], x.InboundAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InboundAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryQuoteLoanCloseResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanCloseResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryQuoteLoanCloseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InboundAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationBlocks", wireType)
				}
				x.InboundConfirmationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InboundConfirmationSeconds", wireType)
				}
				x.InboundConfirmationSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InboundConfirmationSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelayBlocks", wireType)
				}
				x.OutboundDelayBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelayBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutboundDelaySeconds", wireType)
				}
				x.OutboundDelaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OutboundDelaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fees == nil {
					x.Fees = &QuoteFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Router = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
				}
				x.Expiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Warning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Warning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Notes = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DustThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DustThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedMinAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedMinAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecommendedGasRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecommendedGasRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRateUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasRateUnits = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedAmountIn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedAmountIn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedCollateralWithdrawn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedCollateralWithdrawn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpectedDebtRepaid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExpectedDebtRepaid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 20:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapBlocks", wireType)
				}
				x.StreamingSwapBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 21:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StreamingSwapSeconds", wireType)
				}
				x.StreamingSwapSeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StreamingSwapSeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 22:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalRepaySeconds", wireType)
				}
				x.TotalRepaySeconds = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalRepaySeconds |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QuoteFees              protoreflect.MessageDescriptor
	fd_QuoteFees_asset        protoreflect.FieldDescriptor
	fd_QuoteFees_affiliate    protoreflect.FieldDescriptor
	fd_QuoteFees_outbound     protoreflect.FieldDescriptor
	fd_QuoteFees_liquidity    protoreflect.FieldDescriptor
	fd_QuoteFees_total        protoreflect.FieldDescriptor
	fd_QuoteFees_slippage_bps protoreflect.FieldDescriptor
	fd_QuoteFees_total_bps    protoreflect.FieldDescriptor
)

func init() {
	file_types_query_quotes_proto_init()
	md_QuoteFees = File_types_query_quotes_proto.Messages().ByName("QuoteFees")
	fd_QuoteFees_asset = md_QuoteFees.Fields().ByName("asset")
	fd_QuoteFees_affiliate = md_QuoteFees.Fields().ByName("affiliate")
	fd_QuoteFees_outbound = md_QuoteFees.Fields().ByName("outbound")
	fd_QuoteFees_liquidity = md_QuoteFees.Fields().ByName("liquidity")
	fd_QuoteFees_total = md_QuoteFees.Fields().ByName("total")
	fd_QuoteFees_slippage_bps = md_QuoteFees.Fields().ByName("slippage_bps")
	fd_QuoteFees_total_bps = md_QuoteFees.Fields().ByName("total_bps")
}

var _ protoreflect.Message = (*fastReflection_QuoteFees)(nil)

type fastReflection_QuoteFees QuoteFees

func (x *QuoteFees) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QuoteFees)(x)
}

func (x *QuoteFees) slowProtoReflect() protoreflect.Message {
	mi := &file_types_query_quotes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QuoteFees_messageType fastReflection_QuoteFees_messageType
var _ protoreflect.MessageType = fastReflection_QuoteFees_messageType{}

type fastReflection_QuoteFees_messageType struct{}

func (x fastReflection_QuoteFees_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QuoteFees)(nil)
}
func (x fastReflection_QuoteFees_messageType) New() protoreflect.Message {
	return new(fastReflection_QuoteFees)
}
func (x fastReflection_QuoteFees_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QuoteFees
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QuoteFees) Descriptor() protoreflect.MessageDescriptor {
	return md_QuoteFees
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QuoteFees) Type() protoreflect.MessageType {
	return _fastReflection_QuoteFees_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QuoteFees) New() protoreflect.Message {
	return new(fastReflection_QuoteFees)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QuoteFees) Interface() protoreflect.ProtoMessage {
	return (*QuoteFees)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QuoteFees) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Asset != "" {
		value := protoreflect.ValueOfString(x.Asset)
		if !f(fd_QuoteFees_asset, value) {
			return
		}
	}
	if x.Affiliate != "" {
		value := protoreflect.ValueOfString(x.Affiliate)
		if !f(fd_QuoteFees_affiliate, value) {
			return
		}
	}
	if x.Outbound != "" {
		value := protoreflect.ValueOfString(x.Outbound)
		if !f(fd_QuoteFees_outbound, value) {
			return
		}
	}
	if x.Liquidity != "" {
		value := protoreflect.ValueOfString(x.Liquidity)
		if !f(fd_QuoteFees_liquidity, value) {
			return
		}
	}
	if x.Total != "" {
		value := protoreflect.ValueOfString(x.Total)
		if !f(fd_QuoteFees_total, value) {
			return
		}
	}
	if x.SlippageBps != int64(0) {
		value := protoreflect.ValueOfInt64(x.SlippageBps)
		if !f(fd_QuoteFees_slippage_bps, value) {
			return
		}
	}
	if x.TotalBps != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalBps)
		if !f(fd_QuoteFees_total_bps, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QuoteFees) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.QuoteFees.asset":
		return x.Asset != ""
	case "types.QuoteFees.affiliate":
		return x.Affiliate != ""
	case "types.QuoteFees.outbound":
		return x.Outbound != ""
	case "types.QuoteFees.liquidity":
		return x.Liquidity != ""
	case "types.QuoteFees.total":
		return x.Total != ""
	case "types.QuoteFees.slippage_bps":
		return x.SlippageBps != int64(0)
	case "types.QuoteFees.total_bps":
		return x.TotalBps != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuoteFees) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.QuoteFees.asset":
		x.Asset = ""
	case "types.QuoteFees.affiliate":
		x.Affiliate = ""
	case "types.QuoteFees.outbound":
		x.Outbound = ""
	case "types.QuoteFees.liquidity":
		x.Liquidity = ""
	case "types.QuoteFees.total":
		x.Total = ""
	case "types.QuoteFees.slippage_bps":
		x.SlippageBps = int64(0)
	case "types.QuoteFees.total_bps":
		x.TotalBps = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QuoteFees) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.QuoteFees.asset":
		value := x.Asset
		return protoreflect.ValueOfString(value)
	case "types.QuoteFees.affiliate":
		value := x.Affiliate
		return protoreflect.ValueOfString(value)
	case "types.QuoteFees.outbound":
		value := x.Outbound
		return protoreflect.ValueOfString(value)
	case "types.QuoteFees.liquidity":
		value := x.Liquidity
		return protoreflect.ValueOfString(value)
	case "types.QuoteFees.total":
		value := x.Total
		return protoreflect.ValueOfString(value)
	case "types.QuoteFees.slippage_bps":
		value := x.SlippageBps
		return protoreflect.ValueOfInt64(value)
	case "types.QuoteFees.total_bps":
		value := x.TotalBps
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuoteFees) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.QuoteFees.asset":
		x.Asset = value.Interface().(string)
	case "types.QuoteFees.affiliate":
		x.Affiliate = value.Interface().(string)
	case "types.QuoteFees.outbound":
		x.Outbound = value.Interface().(string)
	case "types.QuoteFees.liquidity":
		x.Liquidity = value.Interface().(string)
	case "types.QuoteFees.total":
		x.Total = value.Interface().(string)
	case "types.QuoteFees.slippage_bps":
		x.SlippageBps = value.Int()
	case "types.QuoteFees.total_bps":
		x.TotalBps = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuoteFees) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QuoteFees.asset":
		panic(fmt.Errorf("field asset of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.affiliate":
		panic(fmt.Errorf("field affiliate of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.outbound":
		panic(fmt.Errorf("field outbound of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.liquidity":
		panic(fmt.Errorf("field liquidity of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.total":
		panic(fmt.Errorf("field total of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.slippage_bps":
		panic(fmt.Errorf("field slippage_bps of message types.QuoteFees is not mutable"))
	case "types.QuoteFees.total_bps":
		panic(fmt.Errorf("field total_bps of message types.QuoteFees is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QuoteFees) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.QuoteFees.asset":
		return protoreflect.ValueOfString("")
	case "types.QuoteFees.affiliate":
		return protoreflect.ValueOfString("")
	case "types.QuoteFees.outbound":
		return protoreflect.ValueOfString("")
	case "types.QuoteFees.liquidity":
		return protoreflect.ValueOfString("")
	case "types.QuoteFees.total":
		return protoreflect.ValueOfString("")
	case "types.QuoteFees.slippage_bps":
		return protoreflect.ValueOfInt64(int64(0))
	case "types.QuoteFees.total_bps":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.QuoteFees"))
		}
		panic(fmt.Errorf("message types.QuoteFees does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QuoteFees) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.QuoteFees", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QuoteFees) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuoteFees) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QuoteFees) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QuoteFees) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QuoteFees)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Asset)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Affiliate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Outbound)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Liquidity)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Total)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SlippageBps != 0 {
			n += 1 + runtime.Sov(uint64(x.SlippageBps))
		}
		if x.TotalBps != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalBps))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QuoteFees)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalBps != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalBps))
			i--
			dAtA[i] = 0x38
		}
		if x.SlippageBps != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SlippageBps))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Total) > 0 {
			i -= len(x.Total)
			copy(dAtA[i:], x.Total)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Total)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Liquidity) > 0 {
			i -= len(x.Liquidity)
			copy(dAtA[i:], x.Liquidity)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Liquidity)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Outbound) > 0 {
			i -= len(x.Outbound)
			copy(dAtA[i:], x.Outbound)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Outbound)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Affiliate) > 0 {
			i -= len(x.Affiliate)
			copy(dAtA[i:], x.Affiliate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Affiliate)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Asset) > 0 {
			i -= len(x.Asset)
			copy(dAtA[i:], x.Asset)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Asset)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QuoteFees)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuoteFees: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuoteFees: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Asset = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Affiliate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Affiliate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Outbound", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Outbound = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Liquidity", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Liquidity = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Total = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlippageBps", wireType)
				}
				x.SlippageBps = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SlippageBps |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalBps", wireType)
				}
				x.TotalBps = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalBps |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/query_quotes.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryQuoteSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAsset             string   `protobuf:"bytes,1,opt,name=from_asset,json=fromAsset,proto3" json:"from_asset,omitempty"`
	ToAsset               string   `protobuf:"bytes,2,opt,name=to_asset,json=toAsset,proto3" json:"to_asset,omitempty"`
	Amount                string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	StreamingInterval     string   `protobuf:"bytes,4,opt,name=streaming_interval,json=streamingInterval,proto3" json:"streaming_interval,omitempty"`
	StreamingQuantity     string   `protobuf:"bytes,5,opt,name=streaming_quantity,json=streamingQuantity,proto3" json:"streaming_quantity,omitempty"`
	Destination           string   `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	ToleranceBps          string   `protobuf:"bytes,7,opt,name=tolerance_bps,json=toleranceBps,proto3" json:"tolerance_bps,omitempty"`
	RefundAddress         string   `protobuf:"bytes,8,opt,name=refund_address,json=refundAddress,proto3" json:"refund_address,omitempty"`
	Affiliate             []string `protobuf:"bytes,9,rep,name=affiliate,proto3" json:"affiliate,omitempty"`
	AffiliateBps          []string `protobuf:"bytes,10,rep,name=affiliate_bps,json=affiliateBps,proto3" json:"affiliate_bps,omitempty"`
	Height                string   `protobuf:"bytes,11,opt,name=height,proto3" json:"height,omitempty"`
	LiquidityToleranceBps string   `protobuf:"bytes,12,opt,name=liquidity_tolerance_bps,json=liquidityToleranceBps,proto3" json:"liquidity_tolerance_bps,omitempty"`
}

func (x *QueryQuoteSwapRequest) Reset() {
	*x = QueryQuoteSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSwapRequest) ProtoMessage() {}

// Deprecated: Use QueryQuoteSwapRequest.ProtoReflect.Descriptor instead.
func (*QueryQuoteSwapRequest) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{0}
}

func (x *QueryQuoteSwapRequest) GetFromAsset() string {
	if x != nil {
		return x.FromAsset
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetToAsset() string {
	if x != nil {
		return x.ToAsset
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetStreamingInterval() string {
	if x != nil {
		return x.StreamingInterval
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetStreamingQuantity() string {
	if x != nil {
		return x.StreamingQuantity
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetToleranceBps() string {
	if x != nil {
		return x.ToleranceBps
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetRefundAddress() string {
	if x != nil {
		return x.RefundAddress
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetAffiliate() []string {
	if x != nil {
		return x.Affiliate
	}
	return nil
}

func (x *QueryQuoteSwapRequest) GetAffiliateBps() []string {
	if x != nil {
		return x.AffiliateBps
	}
	return nil
}

func (x *QueryQuoteSwapRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *QueryQuoteSwapRequest) GetLiquidityToleranceBps() string {
	if x != nil {
		return x.LiquidityToleranceBps
	}
	return ""
}

type QueryQuoteSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the inbound address for the transaction on the source chain
	InboundAddress string `protobuf:"bytes,1,opt,name=inbound_address,json=inboundAddress,proto3" json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks int64 `protobuf:"varint,2,opt,name=inbound_confirmation_blocks,json=inboundConfirmationBlocks,proto3" json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds int64 `protobuf:"varint,3,opt,name=inbound_confirmation_seconds,json=inboundConfirmationSeconds,proto3" json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks int64 `protobuf:"varint,4,opt,name=outbound_delay_blocks,json=outboundDelayBlocks,proto3" json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds int64      `protobuf:"varint,5,opt,name=outbound_delay_seconds,json=outboundDelaySeconds,proto3" json:"outbound_delay_seconds,omitempty"`
	Fees                 *QuoteFees `protobuf:"bytes,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// the EVM chain router contract address
	Router string `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry int64 `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// static warning message
	Warning string `protobuf:"bytes,9,opt,name=warning,proto3" json:"warning,omitempty"`
	// chain specific quote notes
	Notes string `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,11,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn string `protobuf:"bytes,12,opt,name=recommended_min_amount_in,json=recommendedMinAmountIn,proto3" json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate string `protobuf:"bytes,13,opt,name=recommended_gas_rate,json=recommendedGasRate,proto3" json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits string `protobuf:"bytes,14,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// generated memo for the swap
	Memo string `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	// the amount of the target asset the user can expect to receive after fees
	ExpectedAmountOut string `protobuf:"bytes,16,opt,name=expected_amount_out,json=expectedAmountOut,proto3" json:"expected_amount_out,omitempty"`
	// the amount of the target asset the user can expect to receive after fees
	MaxStreamingQuantity int64 `protobuf:"varint,17,opt,name=max_streaming_quantity,json=maxStreamingQuantity,proto3" json:"max_streaming_quantity,omitempty"`
	// the number of blocks the streaming swap will execute over
	StreamingSwapBlocks int64 `protobuf:"varint,18,opt,name=streaming_swap_blocks,json=streamingSwapBlocks,proto3" json:"streaming_swap_blocks,omitempty"`
	// approx the number of seconds the streaming swap will execute over
	StreamingSwapSeconds int64 `protobuf:"varint,19,opt,name=streaming_swap_seconds,json=streamingSwapSeconds,proto3" json:"streaming_swap_seconds,omitempty"`
	// total number of seconds a swap is expected to take (inbound conf + streaming swap + outbound delay)
	TotalSwapSeconds int64 `protobuf:"varint,20,opt,name=total_swap_seconds,json=totalSwapSeconds,proto3" json:"total_swap_seconds,omitempty"`
}

func (x *QueryQuoteSwapResponse) Reset() {
	*x = QueryQuoteSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSwapResponse) ProtoMessage() {}

// Deprecated: Use QueryQuoteSwapResponse.ProtoReflect.Descriptor instead.
func (*QueryQuoteSwapResponse) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{1}
}

func (x *QueryQuoteSwapResponse) GetInboundAddress() string {
	if x != nil {
		return x.InboundAddress
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetInboundConfirmationBlocks() int64 {
	if x != nil {
		return x.InboundConfirmationBlocks
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetInboundConfirmationSeconds() int64 {
	if x != nil {
		return x.InboundConfirmationSeconds
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetOutboundDelayBlocks() int64 {
	if x != nil {
		return x.OutboundDelayBlocks
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetOutboundDelaySeconds() int64 {
	if x != nil {
		return x.OutboundDelaySeconds
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetFees() *QuoteFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *QueryQuoteSwapResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetRecommendedMinAmountIn() string {
	if x != nil {
		return x.RecommendedMinAmountIn
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetRecommendedGasRate() string {
	if x != nil {
		return x.RecommendedGasRate
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetExpectedAmountOut() string {
	if x != nil {
		return x.ExpectedAmountOut
	}
	return ""
}

func (x *QueryQuoteSwapResponse) GetMaxStreamingQuantity() int64 {
	if x != nil {
		return x.MaxStreamingQuantity
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetStreamingSwapBlocks() int64 {
	if x != nil {
		return x.StreamingSwapBlocks
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetStreamingSwapSeconds() int64 {
	if x != nil {
		return x.StreamingSwapSeconds
	}
	return 0
}

func (x *QueryQuoteSwapResponse) GetTotalSwapSeconds() int64 {
	if x != nil {
		return x.TotalSwapSeconds
	}
	return 0
}

type QueryQuoteSaverDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset        string   `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount       string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Affiliate    []string `protobuf:"bytes,3,rep,name=affiliate,proto3" json:"affiliate,omitempty"`
	AffiliateBps []string `protobuf:"bytes,4,rep,name=affiliate_bps,json=affiliateBps,proto3" json:"affiliate_bps,omitempty"`
	Height       string   `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryQuoteSaverDepositRequest) Reset() {
	*x = QueryQuoteSaverDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSaverDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSaverDepositRequest) ProtoMessage() {}

// Deprecated: Use QueryQuoteSaverDepositRequest.ProtoReflect.Descriptor instead.
func (*QueryQuoteSaverDepositRequest) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{2}
}

func (x *QueryQuoteSaverDepositRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *QueryQuoteSaverDepositRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *QueryQuoteSaverDepositRequest) GetAffiliate() []string {
	if x != nil {
		return x.Affiliate
	}
	return nil
}

func (x *QueryQuoteSaverDepositRequest) GetAffiliateBps() []string {
	if x != nil {
		return x.AffiliateBps
	}
	return nil
}

func (x *QueryQuoteSaverDepositRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryQuoteSaverDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the inbound address for the transaction on the source chain
	InboundAddress string `protobuf:"bytes,1,opt,name=inbound_address,json=inboundAddress,proto3" json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks int64 `protobuf:"varint,2,opt,name=inbound_confirmation_blocks,json=inboundConfirmationBlocks,proto3" json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds int64 `protobuf:"varint,3,opt,name=inbound_confirmation_seconds,json=inboundConfirmationSeconds,proto3" json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks int64 `protobuf:"varint,4,opt,name=outbound_delay_blocks,json=outboundDelayBlocks,proto3" json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds int64      `protobuf:"varint,5,opt,name=outbound_delay_seconds,json=outboundDelaySeconds,proto3" json:"outbound_delay_seconds,omitempty"`
	Fees                 *QuoteFees `protobuf:"bytes,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// the EVM chain router contract address
	Router string `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry int64 `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// static warning message
	Warning string `protobuf:"bytes,9,opt,name=warning,proto3" json:"warning,omitempty"`
	// chain specific quote notes
	Notes string `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,11,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn string `protobuf:"bytes,12,opt,name=recommended_min_amount_in,json=recommendedMinAmountIn,proto3" json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate string `protobuf:"bytes,13,opt,name=recommended_gas_rate,json=recommendedGasRate,proto3" json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits string `protobuf:"bytes,14,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// generated memo for the deposit
	Memo string `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	// same as expected_amount_deposit, to be deprecated in favour of expected_amount_deposit
	ExpectedAmountOut string `protobuf:"bytes,16,opt,name=expected_amount_out,json=expectedAmountOut,proto3" json:"expected_amount_out,omitempty"`
	// the amount of the target asset the user can expect to deposit after fees
	ExpectedAmountDeposit string `protobuf:"bytes,17,opt,name=expected_amount_deposit,json=expectedAmountDeposit,proto3" json:"expected_amount_deposit,omitempty"`
}

func (x *QueryQuoteSaverDepositResponse) Reset() {
	*x = QueryQuoteSaverDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSaverDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSaverDepositResponse) ProtoMessage() {}

// Deprecated: Use QueryQuoteSaverDepositResponse.ProtoReflect.Descriptor instead.
func (*QueryQuoteSaverDepositResponse) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{3}
}

func (x *QueryQuoteSaverDepositResponse) GetInboundAddress() string {
	if x != nil {
		return x.InboundAddress
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetInboundConfirmationBlocks() int64 {
	if x != nil {
		return x.InboundConfirmationBlocks
	}
	return 0
}

func (x *QueryQuoteSaverDepositResponse) GetInboundConfirmationSeconds() int64 {
	if x != nil {
		return x.InboundConfirmationSeconds
	}
	return 0
}

func (x *QueryQuoteSaverDepositResponse) GetOutboundDelayBlocks() int64 {
	if x != nil {
		return x.OutboundDelayBlocks
	}
	return 0
}

func (x *QueryQuoteSaverDepositResponse) GetOutboundDelaySeconds() int64 {
	if x != nil {
		return x.OutboundDelaySeconds
	}
	return 0
}

func (x *QueryQuoteSaverDepositResponse) GetFees() *QuoteFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *QueryQuoteSaverDepositResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *QueryQuoteSaverDepositResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetRecommendedMinAmountIn() string {
	if x != nil {
		return x.RecommendedMinAmountIn
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetRecommendedGasRate() string {
	if x != nil {
		return x.RecommendedGasRate
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetExpectedAmountOut() string {
	if x != nil {
		return x.ExpectedAmountOut
	}
	return ""
}

func (x *QueryQuoteSaverDepositResponse) GetExpectedAmountDeposit() string {
	if x != nil {
		return x.ExpectedAmountDeposit
	}
	return ""
}

type QueryQuoteSaverWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset       string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	WithdrawBps string `protobuf:"bytes,3,opt,name=withdraw_bps,json=withdrawBps,proto3" json:"withdraw_bps,omitempty"`
	Height      string `protobuf:"bytes,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryQuoteSaverWithdrawRequest) Reset() {
	*x = QueryQuoteSaverWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSaverWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSaverWithdrawRequest) ProtoMessage() {}

// Deprecated: Use QueryQuoteSaverWithdrawRequest.ProtoReflect.Descriptor instead.
func (*QueryQuoteSaverWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{4}
}

func (x *QueryQuoteSaverWithdrawRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawRequest) GetWithdrawBps() string {
	if x != nil {
		return x.WithdrawBps
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryQuoteSaverWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the inbound address for the transaction on the source chain
	InboundAddress string `protobuf:"bytes,1,opt,name=inbound_address,json=inboundAddress,proto3" json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks int64 `protobuf:"varint,2,opt,name=inbound_confirmation_blocks,json=inboundConfirmationBlocks,proto3" json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds int64 `protobuf:"varint,3,opt,name=inbound_confirmation_seconds,json=inboundConfirmationSeconds,proto3" json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks int64 `protobuf:"varint,4,opt,name=outbound_delay_blocks,json=outboundDelayBlocks,proto3" json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds int64      `protobuf:"varint,5,opt,name=outbound_delay_seconds,json=outboundDelaySeconds,proto3" json:"outbound_delay_seconds,omitempty"`
	Fees                 *QuoteFees `protobuf:"bytes,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// the EVM chain router contract address
	Router string `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry int64 `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// static warning message
	Warning string `protobuf:"bytes,9,opt,name=warning,proto3" json:"warning,omitempty"`
	// chain specific quote notes
	Notes string `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,11,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn string `protobuf:"bytes,12,opt,name=recommended_min_amount_in,json=recommendedMinAmountIn,proto3" json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate string `protobuf:"bytes,13,opt,name=recommended_gas_rate,json=recommendedGasRate,proto3" json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits string `protobuf:"bytes,14,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// generated memo for the withdraw, the client can use this OR send the dust amount
	Memo string `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	// the dust amount of the target asset the user should send to initialize the withdraw, the client can send this OR provide the memo
	DustAmount string `protobuf:"bytes,16,opt,name=dust_amount,json=dustAmount,proto3" json:"dust_amount,omitempty"`
	// the amount of the target asset the user can expect to withdraw after fees in 1e8 decimals
	ExpectedAmountOut string `protobuf:"bytes,17,opt,name=expected_amount_out,json=expectedAmountOut,proto3" json:"expected_amount_out,omitempty"`
}

func (x *QueryQuoteSaverWithdrawResponse) Reset() {
	*x = QueryQuoteSaverWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteSaverWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteSaverWithdrawResponse) ProtoMessage() {}

// Deprecated: Use QueryQuoteSaverWithdrawResponse.ProtoReflect.Descriptor instead.
func (*QueryQuoteSaverWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{5}
}

func (x *QueryQuoteSaverWithdrawResponse) GetInboundAddress() string {
	if x != nil {
		return x.InboundAddress
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetInboundConfirmationBlocks() int64 {
	if x != nil {
		return x.InboundConfirmationBlocks
	}
	return 0
}

func (x *QueryQuoteSaverWithdrawResponse) GetInboundConfirmationSeconds() int64 {
	if x != nil {
		return x.InboundConfirmationSeconds
	}
	return 0
}

func (x *QueryQuoteSaverWithdrawResponse) GetOutboundDelayBlocks() int64 {
	if x != nil {
		return x.OutboundDelayBlocks
	}
	return 0
}

func (x *QueryQuoteSaverWithdrawResponse) GetOutboundDelaySeconds() int64 {
	if x != nil {
		return x.OutboundDelaySeconds
	}
	return 0
}

func (x *QueryQuoteSaverWithdrawResponse) GetFees() *QuoteFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *QueryQuoteSaverWithdrawResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *QueryQuoteSaverWithdrawResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetRecommendedMinAmountIn() string {
	if x != nil {
		return x.RecommendedMinAmountIn
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetRecommendedGasRate() string {
	if x != nil {
		return x.RecommendedGasRate
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetDustAmount() string {
	if x != nil {
		return x.DustAmount
	}
	return ""
}

func (x *QueryQuoteSaverWithdrawResponse) GetExpectedAmountOut() string {
	if x != nil {
		return x.ExpectedAmountOut
	}
	return ""
}

type QueryQuoteLoanOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAsset    string   `protobuf:"bytes,1,opt,name=from_asset,json=fromAsset,proto3" json:"from_asset,omitempty"`
	ToAsset      string   `protobuf:"bytes,2,opt,name=to_asset,json=toAsset,proto3" json:"to_asset,omitempty"`
	Amount       string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	MinOut       string   `protobuf:"bytes,4,opt,name=min_out,json=minOut,proto3" json:"min_out,omitempty"`
	Destination  string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
	Affiliate    []string `protobuf:"bytes,6,rep,name=affiliate,proto3" json:"affiliate,omitempty"`
	AffiliateBps []string `protobuf:"bytes,7,rep,name=affiliate_bps,json=affiliateBps,proto3" json:"affiliate_bps,omitempty"`
	Height       string   `protobuf:"bytes,8,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryQuoteLoanOpenRequest) Reset() {
	*x = QueryQuoteLoanOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteLoanOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteLoanOpenRequest) ProtoMessage() {}

// Deprecated: Use QueryQuoteLoanOpenRequest.ProtoReflect.Descriptor instead.
func (*QueryQuoteLoanOpenRequest) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{6}
}

func (x *QueryQuoteLoanOpenRequest) GetFromAsset() string {
	if x != nil {
		return x.FromAsset
	}
	return ""
}

func (x *QueryQuoteLoanOpenRequest) GetToAsset() string {
	if x != nil {
		return x.ToAsset
	}
	return ""
}

func (x *QueryQuoteLoanOpenRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *QueryQuoteLoanOpenRequest) GetMinOut() string {
	if x != nil {
		return x.MinOut
	}
	return ""
}

func (x *QueryQuoteLoanOpenRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *QueryQuoteLoanOpenRequest) GetAffiliate() []string {
	if x != nil {
		return x.Affiliate
	}
	return nil
}

func (x *QueryQuoteLoanOpenRequest) GetAffiliateBps() []string {
	if x != nil {
		return x.AffiliateBps
	}
	return nil
}

func (x *QueryQuoteLoanOpenRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryQuoteLoanOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the inbound address for the transaction on the source chain
	InboundAddress string `protobuf:"bytes,1,opt,name=inbound_address,json=inboundAddress,proto3" json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks int64 `protobuf:"varint,2,opt,name=inbound_confirmation_blocks,json=inboundConfirmationBlocks,proto3" json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds int64 `protobuf:"varint,3,opt,name=inbound_confirmation_seconds,json=inboundConfirmationSeconds,proto3" json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks int64 `protobuf:"varint,4,opt,name=outbound_delay_blocks,json=outboundDelayBlocks,proto3" json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds int64      `protobuf:"varint,5,opt,name=outbound_delay_seconds,json=outboundDelaySeconds,proto3" json:"outbound_delay_seconds,omitempty"`
	Fees                 *QuoteFees `protobuf:"bytes,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// the EVM chain router contract address
	Router string `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry int64 `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// static warning message
	Warning string `protobuf:"bytes,9,opt,name=warning,proto3" json:"warning,omitempty"`
	// chain specific quote notes
	Notes string `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,11,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn string `protobuf:"bytes,12,opt,name=recommended_min_amount_in,json=recommendedMinAmountIn,proto3" json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate string `protobuf:"bytes,13,opt,name=recommended_gas_rate,json=recommendedGasRate,proto3" json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits string `protobuf:"bytes,14,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// generated memo for the loan open
	Memo string `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	// the amount of the target asset the user can expect to receive after fees in 1e8 decimals
	ExpectedAmountOut string `protobuf:"bytes,16,opt,name=expected_amount_out,json=expectedAmountOut,proto3" json:"expected_amount_out,omitempty"`
	// the expected collateralization ratio in basis points
	ExpectedCollateralizationRatio string `protobuf:"bytes,17,opt,name=expected_collateralization_ratio,json=expectedCollateralizationRatio,proto3" json:"expected_collateralization_ratio,omitempty"`
	// the expected amount of collateral increase on the loan
	ExpectedCollateralDeposited string `protobuf:"bytes,18,opt,name=expected_collateral_deposited,json=expectedCollateralDeposited,proto3" json:"expected_collateral_deposited,omitempty"`
	// the expected amount of TOR debt increase on the loan
	ExpectedDebtIssued string `protobuf:"bytes,19,opt,name=expected_debt_issued,json=expectedDebtIssued,proto3" json:"expected_debt_issued,omitempty"`
	// The number of blocks involved in the streaming swaps during the open loan process.
	StreamingSwapBlocks int64 `protobuf:"varint,20,opt,name=streaming_swap_blocks,json=streamingSwapBlocks,proto3" json:"streaming_swap_blocks,omitempty"`
	// The approximate number of seconds taken by the streaming swaps involved in the open loan process.
	StreamingSwapSeconds int64 `protobuf:"varint,21,opt,name=streaming_swap_seconds,json=streamingSwapSeconds,proto3" json:"streaming_swap_seconds,omitempty"`
	// The total expected duration for a open loan, measured in seconds, which includes the time for inbound confirmation, the duration of streaming swaps, and any outbound delays.
	TotalOpenLoanSeconds int64 `protobuf:"varint,22,opt,name=total_open_loan_seconds,json=totalOpenLoanSeconds,proto3" json:"total_open_loan_seconds,omitempty"`
}

func (x *QueryQuoteLoanOpenResponse) Reset() {
	*x = QueryQuoteLoanOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteLoanOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteLoanOpenResponse) ProtoMessage() {}

// Deprecated: Use QueryQuoteLoanOpenResponse.ProtoReflect.Descriptor instead.
func (*QueryQuoteLoanOpenResponse) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{7}
}

func (x *QueryQuoteLoanOpenResponse) GetInboundAddress() string {
	if x != nil {
		return x.InboundAddress
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetInboundConfirmationBlocks() int64 {
	if x != nil {
		return x.InboundConfirmationBlocks
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetInboundConfirmationSeconds() int64 {
	if x != nil {
		return x.InboundConfirmationSeconds
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetOutboundDelayBlocks() int64 {
	if x != nil {
		return x.OutboundDelayBlocks
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetOutboundDelaySeconds() int64 {
	if x != nil {
		return x.OutboundDelaySeconds
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetFees() *QuoteFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *QueryQuoteLoanOpenResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetRecommendedMinAmountIn() string {
	if x != nil {
		return x.RecommendedMinAmountIn
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetRecommendedGasRate() string {
	if x != nil {
		return x.RecommendedGasRate
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetExpectedAmountOut() string {
	if x != nil {
		return x.ExpectedAmountOut
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetExpectedCollateralizationRatio() string {
	if x != nil {
		return x.ExpectedCollateralizationRatio
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetExpectedCollateralDeposited() string {
	if x != nil {
		return x.ExpectedCollateralDeposited
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetExpectedDebtIssued() string {
	if x != nil {
		return x.ExpectedDebtIssued
	}
	return ""
}

func (x *QueryQuoteLoanOpenResponse) GetStreamingSwapBlocks() int64 {
	if x != nil {
		return x.StreamingSwapBlocks
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetStreamingSwapSeconds() int64 {
	if x != nil {
		return x.StreamingSwapSeconds
	}
	return 0
}

func (x *QueryQuoteLoanOpenResponse) GetTotalOpenLoanSeconds() int64 {
	if x != nil {
		return x.TotalOpenLoanSeconds
	}
	return 0
}

type QueryQuoteLoanCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAsset string `protobuf:"bytes,1,opt,name=from_asset,json=fromAsset,proto3" json:"from_asset,omitempty"`
	ToAsset   string `protobuf:"bytes,2,opt,name=to_asset,json=toAsset,proto3" json:"to_asset,omitempty"`
	MinOut    string `protobuf:"bytes,3,opt,name=min_out,json=minOut,proto3" json:"min_out,omitempty"`
	RepayBps  string `protobuf:"bytes,4,opt,name=repay_bps,json=repayBps,proto3" json:"repay_bps,omitempty"`
	LoanOwner string `protobuf:"bytes,5,opt,name=loan_owner,json=loanOwner,proto3" json:"loan_owner,omitempty"`
	Height    string `protobuf:"bytes,6,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryQuoteLoanCloseRequest) Reset() {
	*x = QueryQuoteLoanCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteLoanCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteLoanCloseRequest) ProtoMessage() {}

// Deprecated: Use QueryQuoteLoanCloseRequest.ProtoReflect.Descriptor instead.
func (*QueryQuoteLoanCloseRequest) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{8}
}

func (x *QueryQuoteLoanCloseRequest) GetFromAsset() string {
	if x != nil {
		return x.FromAsset
	}
	return ""
}

func (x *QueryQuoteLoanCloseRequest) GetToAsset() string {
	if x != nil {
		return x.ToAsset
	}
	return ""
}

func (x *QueryQuoteLoanCloseRequest) GetMinOut() string {
	if x != nil {
		return x.MinOut
	}
	return ""
}

func (x *QueryQuoteLoanCloseRequest) GetRepayBps() string {
	if x != nil {
		return x.RepayBps
	}
	return ""
}

func (x *QueryQuoteLoanCloseRequest) GetLoanOwner() string {
	if x != nil {
		return x.LoanOwner
	}
	return ""
}

func (x *QueryQuoteLoanCloseRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type QueryQuoteLoanCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the inbound address for the transaction on the source chain
	InboundAddress string `protobuf:"bytes,1,opt,name=inbound_address,json=inboundAddress,proto3" json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks int64 `protobuf:"varint,2,opt,name=inbound_confirmation_blocks,json=inboundConfirmationBlocks,proto3" json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds int64 `protobuf:"varint,3,opt,name=inbound_confirmation_seconds,json=inboundConfirmationSeconds,proto3" json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks int64 `protobuf:"varint,4,opt,name=outbound_delay_blocks,json=outboundDelayBlocks,proto3" json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds int64      `protobuf:"varint,5,opt,name=outbound_delay_seconds,json=outboundDelaySeconds,proto3" json:"outbound_delay_seconds,omitempty"`
	Fees                 *QuoteFees `protobuf:"bytes,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// the EVM chain router contract address
	Router string `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry int64 `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// static warning message
	Warning string `protobuf:"bytes,9,opt,name=warning,proto3" json:"warning,omitempty"`
	// chain specific quote notes
	Notes string `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold string `protobuf:"bytes,11,opt,name=dust_threshold,json=dustThreshold,proto3" json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn string `protobuf:"bytes,12,opt,name=recommended_min_amount_in,json=recommendedMinAmountIn,proto3" json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate string `protobuf:"bytes,13,opt,name=recommended_gas_rate,json=recommendedGasRate,proto3" json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits string `protobuf:"bytes,14,opt,name=gas_rate_units,json=gasRateUnits,proto3" json:"gas_rate_units,omitempty"`
	// generated memo for the loan close
	Memo string `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	// the amount of collateral asset the user can expect to receive after fees in 1e8 decimals
	ExpectedAmountOut string `protobuf:"bytes,16,opt,name=expected_amount_out,json=expectedAmountOut,proto3" json:"expected_amount_out,omitempty"`
	// The quantity of the repayment asset to be sent by the user, calculated as the desired percentage of the loan's value, expressed in units of 1e8
	ExpectedAmountIn string `protobuf:"bytes,17,opt,name=expected_amount_in,json=expectedAmountIn,proto3" json:"expected_amount_in,omitempty"`
	// the expected amount of collateral decrease on the loan
	ExpectedCollateralWithdrawn string `protobuf:"bytes,18,opt,name=expected_collateral_withdrawn,json=expectedCollateralWithdrawn,proto3" json:"expected_collateral_withdrawn,omitempty"`
	// the expected amount of TOR debt decrease on the loan
	ExpectedDebtRepaid string `protobuf:"bytes,19,opt,name=expected_debt_repaid,json=expectedDebtRepaid,proto3" json:"expected_debt_repaid,omitempty"`
	// The number of blocks involved in the streaming swaps during the repayment process.
	StreamingSwapBlocks int64 `protobuf:"varint,20,opt,name=streaming_swap_blocks,json=streamingSwapBlocks,proto3" json:"streaming_swap_blocks,omitempty"`
	// The approximate number of seconds taken by the streaming swaps involved in the repayment process.
	StreamingSwapSeconds int64 `protobuf:"varint,21,opt,name=streaming_swap_seconds,json=streamingSwapSeconds,proto3" json:"streaming_swap_seconds,omitempty"`
	// The total expected duration for a repayment, measured in seconds, which includes the time for inbound confirmation, the duration of streaming swaps, and any outbound delays.
	TotalRepaySeconds int64 `protobuf:"varint,22,opt,name=total_repay_seconds,json=totalRepaySeconds,proto3" json:"total_repay_seconds,omitempty"`
}

func (x *QueryQuoteLoanCloseResponse) Reset() {
	*x = QueryQuoteLoanCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuoteLoanCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuoteLoanCloseResponse) ProtoMessage() {}

// Deprecated: Use QueryQuoteLoanCloseResponse.ProtoReflect.Descriptor instead.
func (*QueryQuoteLoanCloseResponse) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{9}
}

func (x *QueryQuoteLoanCloseResponse) GetInboundAddress() string {
	if x != nil {
		return x.InboundAddress
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetInboundConfirmationBlocks() int64 {
	if x != nil {
		return x.InboundConfirmationBlocks
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetInboundConfirmationSeconds() int64 {
	if x != nil {
		return x.InboundConfirmationSeconds
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetOutboundDelayBlocks() int64 {
	if x != nil {
		return x.OutboundDelayBlocks
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetOutboundDelaySeconds() int64 {
	if x != nil {
		return x.OutboundDelaySeconds
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetFees() *QuoteFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *QueryQuoteLoanCloseResponse) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetDustThreshold() string {
	if x != nil {
		return x.DustThreshold
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetRecommendedMinAmountIn() string {
	if x != nil {
		return x.RecommendedMinAmountIn
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetRecommendedGasRate() string {
	if x != nil {
		return x.RecommendedGasRate
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetGasRateUnits() string {
	if x != nil {
		return x.GasRateUnits
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetExpectedAmountOut() string {
	if x != nil {
		return x.ExpectedAmountOut
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetExpectedAmountIn() string {
	if x != nil {
		return x.ExpectedAmountIn
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetExpectedCollateralWithdrawn() string {
	if x != nil {
		return x.ExpectedCollateralWithdrawn
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetExpectedDebtRepaid() string {
	if x != nil {
		return x.ExpectedDebtRepaid
	}
	return ""
}

func (x *QueryQuoteLoanCloseResponse) GetStreamingSwapBlocks() int64 {
	if x != nil {
		return x.StreamingSwapBlocks
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetStreamingSwapSeconds() int64 {
	if x != nil {
		return x.StreamingSwapSeconds
	}
	return 0
}

func (x *QueryQuoteLoanCloseResponse) GetTotalRepaySeconds() int64 {
	if x != nil {
		return x.TotalRepaySeconds
	}
	return 0
}

type QuoteFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the target asset used for all fees
	Asset string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// affiliate fee in the target asset
	Affiliate string `protobuf:"bytes,2,opt,name=affiliate,proto3" json:"affiliate,omitempty"`
	// outbound fee in the target asset
	Outbound string `protobuf:"bytes,3,opt,name=outbound,proto3" json:"outbound,omitempty"`
	// liquidity fees paid to pools in the target asset
	Liquidity string `protobuf:"bytes,4,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	// total fees in the target asset
	Total string `protobuf:"bytes,5,opt,name=total,proto3" json:"total,omitempty"`
	// the swap slippage in basis points
	SlippageBps int64 `protobuf:"varint,6,opt,name=slippage_bps,json=slippageBps,proto3" json:"slippage_bps,omitempty"`
	// total basis points in fees relative to amount out
	TotalBps int64 `protobuf:"varint,7,opt,name=total_bps,json=totalBps,proto3" json:"total_bps,omitempty"`
}

func (x *QuoteFees) Reset() {
	*x = QuoteFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_query_quotes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteFees) ProtoMessage() {}

// Deprecated: Use QuoteFees.ProtoReflect.Descriptor instead.
func (*QuoteFees) Descriptor() ([]byte, []int) {
	return file_types_query_quotes_proto_rawDescGZIP(), []int{10}
}

func (x *QuoteFees) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *QuoteFees) GetAffiliate() string {
	if x != nil {
		return x.Affiliate
	}
	return ""
}

func (x *QuoteFees) GetOutbound() string {
	if x != nil {
		return x.Outbound
	}
	return ""
}

func (x *QuoteFees) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *QuoteFees) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *QuoteFees) GetSlippageBps() int64 {
	if x != nil {
		return x.SlippageBps
	}
	return 0
}

func (x *QuoteFees) GetTotalBps() int64 {
	if x != nil {
		return x.TotalBps
	}
	return 0
}

var File_types_query_quotes_proto protoreflect.FileDescriptor

var file_types_query_quotes_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x03, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x62, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6c, 0x65,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x42,
	0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x70, 0x73, 0x22, 0xb4, 0x08, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x65, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12,
	0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x47, 0x61, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x47, 0x0a, 0x13, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xea, 0xde, 0x1f, 0x13, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x12, 0x50, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x14, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x77,
	0x61, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x66,
	0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c,
	0x69, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x42, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x89, 0x07, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xea, 0xde, 0x1f, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x73, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x66, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a,
	0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xea, 0xde, 0x1f, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x19,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x4a, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xea, 0xde, 0x1f, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x47, 0x61, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xea, 0xde, 0x1f,
	0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x52,
	0x0c, 0x67, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f,
	0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x53, 0x0a, 0x17, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xea, 0xde,
	0x1f, 0x17, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x15, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53,
	0x61, 0x76, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f,
	0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x42, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb7,
	0x07, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x61, 0x76,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xea, 0xde, 0x1f,
	0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x13, 0x6f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x50, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x14, 0x6f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x73, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x66, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12,
	0x25, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x39,
	0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x4a, 0x0a, 0x14, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xea, 0xde, 0x1f, 0x14, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x47, 0x61,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xea,
	0xde, 0x1f, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea,
	0xde, 0x1f, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x30, 0x0a,
	0x0b, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x0b, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x47, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xea, 0xde,
	0x1f, 0x13, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6f, 0x75, 0x74, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x83, 0x02, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4f, 0x75,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x65, 0x42, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf9,
	0x0a, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x65, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12,
	0x4a, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xea,
	0xde, 0x1f, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x47, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x12, 0xea, 0xde, 0x1f, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xea, 0xde, 0x1f, 0x13, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x52,
	0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x12, 0x6e, 0x0a, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0xea, 0xde,
	0x1f, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x52, 0x1e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x65, 0x0a, 0x1d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xea, 0xde, 0x1f, 0x1d, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x1b, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x14, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xea, 0xde, 0x1f, 0x14, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x62, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1b, 0xea, 0xde, 0x1f, 0x17, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4c,
	0x6f, 0x61, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x1a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x70, 0x61, 0x79, 0x42, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x61, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0xa1, 0x0a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x1a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x6f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x42, 0x08, 0xea, 0xde,
	0x1f, 0x04, 0x66, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xea, 0xde, 0x1f, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x47, 0x61, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xea, 0xde, 0x1f, 0x13, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x52, 0x11,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x12, 0x44, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xea,
	0xde, 0x1f, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x65, 0x0a, 0x1d, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21,
	0xea, 0xde, 0x1f, 0x1d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x6e, 0x52, 0x1b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x4a,
	0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xea, 0xde,
	0x1f, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x64, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x44, 0x65, 0x62, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xea, 0xde, 0x1f, 0x15, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x77, 0x61, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0xea, 0xde, 0x1f, 0x16, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0xea, 0xde, 0x1f, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x61, 0x79, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2b, 0x0a,
	0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x0c, 0x73,
	0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x62, 0x70, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x42, 0x70, 0x73,
	0x12, 0x2a, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62,
	0x70, 0x73, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x70, 0x73, 0x42, 0x81, 0x01, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58,
	0xaa, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xca, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73,
	0xe2, 0x02, 0x11, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0xc8, 0xe2, 0x1e, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_query_quotes_proto_rawDescOnce sync.Once
	file_types_query_quotes_proto_rawDescData = file_types_query_quotes_proto_rawDesc
)

func file_types_query_quotes_proto_rawDescGZIP() []byte {
	file_types_query_quotes_proto_rawDescOnce.Do(func() {
		file_types_query_quotes_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_query_quotes_proto_rawDescData)
	})
	return file_types_query_quotes_proto_rawDescData
}

var file_types_query_quotes_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_types_query_quotes_proto_goTypes = []interface{}{
	(*QueryQuoteSwapRequest)(nil),           // 0: types.QueryQuoteSwapRequest
	(*QueryQuoteSwapResponse)(nil),          // 1: types.QueryQuoteSwapResponse
	(*QueryQuoteSaverDepositRequest)(nil),   // 2: types.QueryQuoteSaverDepositRequest
	(*QueryQuoteSaverDepositResponse)(nil),  // 3: types.QueryQuoteSaverDepositResponse
	(*QueryQuoteSaverWithdrawRequest)(nil),  // 4: types.QueryQuoteSaverWithdrawRequest
	(*QueryQuoteSaverWithdrawResponse)(nil), // 5: types.QueryQuoteSaverWithdrawResponse
	(*QueryQuoteLoanOpenRequest)(nil),       // 6: types.QueryQuoteLoanOpenRequest
	(*QueryQuoteLoanOpenResponse)(nil),      // 7: types.QueryQuoteLoanOpenResponse
	(*QueryQuoteLoanCloseRequest)(nil),      // 8: types.QueryQuoteLoanCloseRequest
	(*QueryQuoteLoanCloseResponse)(nil),     // 9: types.QueryQuoteLoanCloseResponse
	(*QuoteFees)(nil),                       // 10: types.QuoteFees
}
var file_types_query_quotes_proto_depIdxs = []int32{
	10, // 0: types.QueryQuoteSwapResponse.fees:type_name -> types.QuoteFees
	10, // 1: types.QueryQuoteSaverDepositResponse.fees:type_name -> types.QuoteFees
	10, // 2: types.QueryQuoteSaverWithdrawResponse.fees:type_name -> types.QuoteFees
	10, // 3: types.QueryQuoteLoanOpenResponse.fees:type_name -> types.QuoteFees
	10, // 4: types.QueryQuoteLoanCloseResponse.fees:type_name -> types.QuoteFees
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_types_query_quotes_proto_init() }
func file_types_query_quotes_proto_init() {
	if File_types_query_quotes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_query_quotes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSaverDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSaverDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSaverWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteSaverWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteLoanOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteLoanOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteLoanCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuoteLoanCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_query_quotes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_query_quotes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_query_quotes_proto_goTypes,
		DependencyIndexes: file_types_query_quotes_proto_depIdxs,
		MessageInfos:      file_types_query_quotes_proto_msgTypes,
	}.Build()
	File_types_query_quotes_proto = out.File
	file_types_query_quotes_proto_rawDesc = nil
	file_types_query_quotes_proto_goTypes = nil
	file_types_query_quotes_proto_depIdxs = nil
}
